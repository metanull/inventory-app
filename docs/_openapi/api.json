{
    "openapi": "3.1.0",
    "info": {
        "title": "Inventory-App",
        "version": "0.0.1"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000/api"
        }
    ],
    "security": [
        {
            "http": []
        }
    ],
    "paths": {
        "/address": {
            "get": {
                "operationId": "address.index",
                "summary": "Display a listing of addresses",
                "tags": [
                    "Address"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `AddressResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AddressResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "post": {
                "operationId": "address.store",
                "summary": "Store a newly created address",
                "tags": [
                    "Address"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "internal_name": {
                                        "type": "string"
                                    },
                                    "country_id": {
                                        "type": "integer"
                                    },
                                    "translations": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "language_id": {
                                                    "type": "integer"
                                                },
                                                "address": {
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "language_id",
                                                "address"
                                            ]
                                        },
                                        "minItems": 1
                                    }
                                },
                                "required": [
                                    "internal_name",
                                    "country_id"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "`AddressResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/AddressResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/address/{address}": {
            "get": {
                "operationId": "address.show",
                "summary": "Display the specified address",
                "tags": [
                    "Address"
                ],
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "required": true,
                        "description": "The address ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`AddressResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/AddressResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "put": {
                "operationId": "address.update",
                "summary": "Update the specified address",
                "tags": [
                    "Address"
                ],
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "required": true,
                        "description": "The address ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "internal_name": {
                                        "type": "string"
                                    },
                                    "country_id": {
                                        "type": "integer"
                                    },
                                    "translations": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "language_id": {
                                                    "type": "integer"
                                                },
                                                "address": {
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            }
                                        },
                                        "minItems": 1
                                    }
                                },
                                "required": [
                                    "internal_name",
                                    "country_id"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`AddressResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/AddressResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "address.destroy",
                "summary": "Remove the specified address",
                "tags": [
                    "Address"
                ],
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "required": true,
                        "description": "The address ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/address-translation": {
            "get": {
                "operationId": "address-translation.index",
                "summary": "Display a listing of the resource",
                "tags": [
                    "AddressTranslation"
                ],
                "responses": {
                    "200": {
                        "description": "Array of `AddressTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AddressTranslationResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "address-translation.store",
                "summary": "Store a newly created resource in storage",
                "tags": [
                    "AddressTranslation"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "address_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "language_id": {
                                        "type": "string"
                                    },
                                    "address": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    }
                                },
                                "required": [
                                    "address_id",
                                    "language_id",
                                    "address"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`AddressTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/AddressTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/address-translation/{addressTranslation}": {
            "get": {
                "operationId": "address-translation.show",
                "summary": "Display the specified resource",
                "tags": [
                    "AddressTranslation"
                ],
                "parameters": [
                    {
                        "name": "addressTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The address translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`AddressTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/AddressTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "address-translation.update",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "AddressTranslation"
                ],
                "parameters": [
                    {
                        "name": "addressTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The address translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "address_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "language_id": {
                                        "type": "string"
                                    },
                                    "address": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`AddressTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/AddressTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "address-translation.destroy",
                "summary": "Remove the specified resource from storage",
                "tags": [
                    "AddressTranslation"
                ],
                "parameters": [
                    {
                        "name": "addressTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The address translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/available-image/{availableImage}/download": {
            "get": {
                "operationId": "available-image.download",
                "summary": "Returns the file to the caller",
                "tags": [
                    "AvailableImage"
                ],
                "parameters": [
                    {
                        "name": "availableImage",
                        "in": "path",
                        "required": true,
                        "description": "The available image ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        },
                        "headers": {
                            "Content-Disposition": {
                                "required": true,
                                "schema": {
                                    "type": "string"
                                },
                                "example": "attachment; filename=localstorage.available.images.disk"
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/available-image/{availableImage}/view": {
            "get": {
                "operationId": "available-image.view",
                "summary": "Returns the image file for direct viewing (e.g., for use in <img> src attribute)",
                "tags": [
                    "AvailableImage"
                ],
                "parameters": [
                    {
                        "name": "availableImage",
                        "in": "path",
                        "required": true,
                        "description": "The available image ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/available-image": {
            "get": {
                "operationId": "available-image.index",
                "summary": "Display a listing of the resource",
                "tags": [
                    "AvailableImage"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `AvailableImageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AvailableImageResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/available-image/{availableImage}": {
            "get": {
                "operationId": "available-image.show",
                "summary": "Display the specified resource",
                "tags": [
                    "AvailableImage"
                ],
                "parameters": [
                    {
                        "name": "availableImage",
                        "in": "path",
                        "required": true,
                        "description": "The available image ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`AvailableImageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/AvailableImageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "available-image.update",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "AvailableImage"
                ],
                "parameters": [
                    {
                        "name": "availableImage",
                        "in": "path",
                        "required": true,
                        "description": "The available image ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "comment": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`AvailableImageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/AvailableImageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "available-image.destroy",
                "summary": "Remove the specified resource from storage",
                "tags": [
                    "AvailableImage"
                ],
                "parameters": [
                    {
                        "name": "availableImage",
                        "in": "path",
                        "required": true,
                        "description": "The available image ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/collection": {
            "get": {
                "operationId": "collection.index",
                "summary": "Display a listing of the collections",
                "tags": [
                    "Collection"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `CollectionResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CollectionResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "post": {
                "operationId": "collection.store",
                "summary": "Store a newly created collection in storage",
                "tags": [
                    "Collection"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "internal_name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "collection",
                                            "exhibition",
                                            "gallery"
                                        ]
                                    },
                                    "language_id": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 3
                                    },
                                    "context_id": {
                                        "type": "string"
                                    },
                                    "backward_compatibility": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 255
                                    }
                                },
                                "required": [
                                    "internal_name",
                                    "type",
                                    "language_id",
                                    "context_id"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`CollectionResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CollectionResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/collection/{collection}": {
            "get": {
                "operationId": "collection.show",
                "summary": "Display the specified collection",
                "tags": [
                    "Collection"
                ],
                "parameters": [
                    {
                        "name": "collection",
                        "in": "path",
                        "required": true,
                        "description": "The collection ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`CollectionResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CollectionResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "put": {
                "operationId": "collection.update",
                "summary": "Update the specified collection in storage",
                "tags": [
                    "Collection"
                ],
                "parameters": [
                    {
                        "name": "collection",
                        "in": "path",
                        "required": true,
                        "description": "The collection ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "internal_name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "collection",
                                            "exhibition",
                                            "gallery"
                                        ]
                                    },
                                    "language_id": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 3
                                    },
                                    "context_id": {
                                        "type": "string"
                                    },
                                    "backward_compatibility": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 255
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`CollectionResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CollectionResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "collection.destroy",
                "summary": "Remove the specified collection from storage",
                "tags": [
                    "Collection"
                ],
                "parameters": [
                    {
                        "name": "collection",
                        "in": "path",
                        "required": true,
                        "description": "The collection ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/collection/type/{type}": {
            "get": {
                "operationId": "collection.byType",
                "summary": "Get collections by type",
                "tags": [
                    "Collection"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "collection",
                                "exhibition",
                                "gallery"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `CollectionResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CollectionResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/collection/{collection}/attach-item": {
            "post": {
                "operationId": "collection.attachItem",
                "summary": "Attach an item to a collection via many-to-many relationship",
                "tags": [
                    "Collection"
                ],
                "parameters": [
                    {
                        "name": "collection",
                        "in": "path",
                        "required": true,
                        "description": "The collection ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "item_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    }
                                },
                                "required": [
                                    "item_id"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Item attached to collection successfully"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/collection/{collection}/detach-item": {
            "delete": {
                "operationId": "collection.detachItem",
                "summary": "Detach an item from a collection",
                "tags": [
                    "Collection"
                ],
                "parameters": [
                    {
                        "name": "collection",
                        "in": "path",
                        "required": true,
                        "description": "The collection ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "item_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Item detached from collection successfully"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/collection/{collection}/attach-items": {
            "post": {
                "operationId": "collection.attachItems",
                "summary": "Attach multiple items to a collection",
                "tags": [
                    "Collection"
                ],
                "parameters": [
                    {
                        "name": "collection",
                        "in": "path",
                        "required": true,
                        "description": "The collection ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "item_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "minItems": 1
                                    }
                                },
                                "required": [
                                    "item_ids"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Items attached to collection successfully"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/collection/{collection}/detach-items": {
            "delete": {
                "operationId": "collection.detachItems",
                "summary": "Detach multiple items from a collection",
                "tags": [
                    "Collection"
                ],
                "parameters": [
                    {
                        "name": "collection",
                        "in": "path",
                        "required": true,
                        "description": "The collection ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "item_ids[]",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Items detached from collection successfully"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/contact": {
            "get": {
                "operationId": "contact.index",
                "summary": "Display a listing of contacts",
                "tags": [
                    "Contact"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `ContactResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ContactResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "post": {
                "operationId": "contact.store",
                "summary": "Store a newly created contact",
                "tags": [
                    "Contact"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "internal_name": {
                                        "type": "string"
                                    },
                                    "phone_number": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "fax_number": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "email": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "format": "email"
                                    },
                                    "translations": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "language_id": {
                                                    "type": "integer"
                                                },
                                                "label": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "language_id",
                                                "label"
                                            ]
                                        },
                                        "minItems": 1
                                    }
                                },
                                "required": [
                                    "internal_name",
                                    "translations"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "`ContactResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ContactResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/contact/{contact}": {
            "get": {
                "operationId": "contact.show",
                "summary": "Display the specified contact",
                "tags": [
                    "Contact"
                ],
                "parameters": [
                    {
                        "name": "contact",
                        "in": "path",
                        "required": true,
                        "description": "The contact ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`ContactResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ContactResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "put": {
                "operationId": "contact.update",
                "summary": "Update the specified contact",
                "tags": [
                    "Contact"
                ],
                "parameters": [
                    {
                        "name": "contact",
                        "in": "path",
                        "required": true,
                        "description": "The contact ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "internal_name": {
                                        "type": "string"
                                    },
                                    "phone_number": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "fax_number": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "email": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "format": "email"
                                    },
                                    "translations": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "language_id": {
                                                    "type": "integer"
                                                },
                                                "label": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "minItems": 1
                                    }
                                },
                                "required": [
                                    "internal_name"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ContactResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ContactResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "contact.destroy",
                "summary": "Remove the specified contact",
                "tags": [
                    "Contact"
                ],
                "parameters": [
                    {
                        "name": "contact",
                        "in": "path",
                        "required": true,
                        "description": "The contact ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/contact-translation": {
            "get": {
                "operationId": "contact-translation.index",
                "summary": "Display a listing of the resource",
                "tags": [
                    "ContactTranslation"
                ],
                "responses": {
                    "200": {
                        "description": "Array of `ContactTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ContactTranslationResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "contact-translation.store",
                "summary": "Store a newly created resource in storage",
                "tags": [
                    "ContactTranslation"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "contact_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "language_id": {
                                        "type": "string"
                                    },
                                    "label": {
                                        "type": "string",
                                        "maxLength": 255
                                    }
                                },
                                "required": [
                                    "contact_id",
                                    "language_id",
                                    "label"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ContactTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ContactTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/contact-translation/{contactTranslation}": {
            "get": {
                "operationId": "contact-translation.show",
                "summary": "Display the specified resource",
                "tags": [
                    "ContactTranslation"
                ],
                "parameters": [
                    {
                        "name": "contactTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The contact translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`ContactTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ContactTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "contact-translation.update",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "ContactTranslation"
                ],
                "parameters": [
                    {
                        "name": "contactTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The contact translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "contact_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "language_id": {
                                        "type": "string"
                                    },
                                    "label": {
                                        "type": "string",
                                        "maxLength": 255
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ContactTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ContactTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "contact-translation.destroy",
                "summary": "Remove the specified resource from storage",
                "tags": [
                    "ContactTranslation"
                ],
                "parameters": [
                    {
                        "name": "contactTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The contact translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/context/{context}/default": {
            "patch": {
                "operationId": "context.setDefault",
                "summary": "Set or unset a context as the default one",
                "tags": [
                    "Context"
                ],
                "parameters": [
                    {
                        "name": "context",
                        "in": "path",
                        "required": true,
                        "description": "The context ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "is_default": {
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "is_default"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ContextResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ContextResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/context/default": {
            "delete": {
                "operationId": "context.clearDefault",
                "summary": "Clear the default flag from any context",
                "tags": [
                    "Context"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Default context cleared"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "get": {
                "operationId": "context.getDefault",
                "summary": "Get the default context",
                "tags": [
                    "Context"
                ],
                "responses": {
                    "200": {
                        "description": "`ContextResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ContextResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "No default context found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/context": {
            "get": {
                "operationId": "context.index",
                "summary": "Display a listing of the resource",
                "tags": [
                    "Context"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `ContextResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ContextResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "post": {
                "operationId": "context.store",
                "summary": "Store a newly created resource in storage",
                "tags": [
                    "Context"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "internal_name": {
                                        "type": "string"
                                    },
                                    "backward_compatibility": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "is_default": {
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "internal_name"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ContextResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ContextResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/context/{context}": {
            "get": {
                "operationId": "context.show",
                "summary": "Display the specified resource",
                "tags": [
                    "Context"
                ],
                "parameters": [
                    {
                        "name": "context",
                        "in": "path",
                        "required": true,
                        "description": "The context ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`ContextResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ContextResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "put": {
                "operationId": "context.update",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "Context"
                ],
                "parameters": [
                    {
                        "name": "context",
                        "in": "path",
                        "required": true,
                        "description": "The context ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "internal_name": {
                                        "type": "string"
                                    },
                                    "backward_compatibility": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "is_default": {
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "internal_name"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ContextResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ContextResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "context.destroy",
                "summary": "Remove the specified resource from storage",
                "tags": [
                    "Context"
                ],
                "parameters": [
                    {
                        "name": "context",
                        "in": "path",
                        "required": true,
                        "description": "The context ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/country": {
            "get": {
                "operationId": "country.index",
                "summary": "Display a listing of the resource",
                "tags": [
                    "Country"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `CountryResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CountryResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "post": {
                "operationId": "country.store",
                "summary": "Store a newly created resource in storage",
                "tags": [
                    "Country"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 3
                                    },
                                    "internal_name": {
                                        "type": "string"
                                    },
                                    "backward_compatibility": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "minLength": 2,
                                        "maxLength": 2
                                    }
                                },
                                "required": [
                                    "id",
                                    "internal_name"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`CountryResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CountryResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/country/{country}": {
            "get": {
                "operationId": "country.show",
                "summary": "Display the specified resource",
                "tags": [
                    "Country"
                ],
                "parameters": [
                    {
                        "name": "country",
                        "in": "path",
                        "required": true,
                        "description": "The country ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`CountryResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CountryResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "put": {
                "operationId": "country.update",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "Country"
                ],
                "parameters": [
                    {
                        "name": "country",
                        "in": "path",
                        "required": true,
                        "description": "The country ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "internal_name": {
                                        "type": "string"
                                    },
                                    "backward_compatibility": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "minLength": 2,
                                        "maxLength": 2
                                    }
                                },
                                "required": [
                                    "internal_name"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`CountryResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CountryResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "country.destroy",
                "summary": "Remove the specified resource from storage",
                "tags": [
                    "Country"
                ],
                "parameters": [
                    {
                        "name": "country",
                        "in": "path",
                        "required": true,
                        "description": "The country ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/image-upload": {
            "get": {
                "operationId": "image-upload.index",
                "summary": "Display a listing of the resource",
                "tags": [
                    "ImageUpload"
                ],
                "responses": {
                    "200": {
                        "description": "Array of `ImageUploadResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ImageUploadResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "image-upload.store",
                "summary": "Store a newly created resource in storage",
                "tags": [
                    "ImageUpload"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary",
                                        "contentMediaType": "application/octet-stream"
                                    }
                                },
                                "required": [
                                    "file"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ImageUploadResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ImageUploadResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/image-upload/{imageUpload}": {
            "get": {
                "operationId": "image-upload.show",
                "summary": "Display the specified resource",
                "tags": [
                    "ImageUpload"
                ],
                "parameters": [
                    {
                        "name": "imageUpload",
                        "in": "path",
                        "required": true,
                        "description": "The image upload ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`ImageUploadResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ImageUploadResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "image-upload.destroy",
                "summary": "Remove the specified resource from storage",
                "tags": [
                    "ImageUpload"
                ],
                "parameters": [
                    {
                        "name": "imageUpload",
                        "in": "path",
                        "required": true,
                        "description": "The image upload ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/image-upload/{id}/status": {
            "get": {
                "operationId": "image-upload.status",
                "description": "Returns the processing status. If processing is complete, returns the AvailableImage details.\nIf the ImageUpload no longer exists, check if an AvailableImage exists with the same ID.",
                "summary": "Get the processing status of an image upload",
                "tags": [
                    "ImageUpload"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Neither exists - this could be an error state or the resource was never created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "not_found"
                                            ]
                                        },
                                        "available_image": {
                                            "type": "null"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "available_image"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "processed"
                                                    ]
                                                },
                                                "available_image": {
                                                    "$ref": "#/components/schemas/AvailableImageResource"
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "available_image"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "processing"
                                                    ]
                                                },
                                                "available_image": {
                                                    "type": "null"
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "available_image"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/info": {
            "get": {
                "operationId": "info.index",
                "description": "Returns basic application information including:\n- Application name and version\n- Health check status for key services\n- Timestamp of the response",
                "summary": "Get application information including version and health status",
                "tags": [
                    "Info"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "operationId": "info.health",
                "description": "Lightweight endpoint for health monitoring that returns\nonly the essential health status information.",
                "summary": "Get only the health check status",
                "tags": [
                    "Info"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/version": {
            "get": {
                "operationId": "info.version",
                "description": "Simple endpoint that returns just the version information\nfor deployment tracking and API compatibility checks.",
                "summary": "Get application version information only",
                "tags": [
                    "Info"
                ],
                "responses": {
                    "200": {
                        "description": "Fallback to CI/CD structure with default/null values",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "repository": {
                                                    "type": "null"
                                                },
                                                "build_timestamp": {
                                                    "type": "object",
                                                    "properties": {
                                                        "value": {
                                                            "type": "string"
                                                        },
                                                        "DisplayHint": {
                                                            "type": "integer",
                                                            "enum": [
                                                                2
                                                            ]
                                                        },
                                                        "DateTime": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "value",
                                                        "DisplayHint",
                                                        "DateTime"
                                                    ]
                                                },
                                                "repository_url": {
                                                    "type": "null"
                                                },
                                                "api_client_version": {
                                                    "type": "null"
                                                },
                                                "app_version": {
                                                    "type": "string",
                                                    "enum": [
                                                        "1.0.0-dev"
                                                    ]
                                                },
                                                "commit_sha": {
                                                    "type": "null"
                                                }
                                            },
                                            "required": [
                                                "repository",
                                                "build_timestamp",
                                                "repository_url",
                                                "api_client_version",
                                                "app_version",
                                                "commit_sha"
                                            ]
                                        },
                                        {
                                            "type": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/item": {
            "get": {
                "operationId": "item.index",
                "summary": "Display a listing of the resource",
                "tags": [
                    "Item"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `ItemResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ItemResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "post": {
                "operationId": "item.store",
                "summary": "Store a newly created resource in storage",
                "tags": [
                    "Item"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreItemRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ItemResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ItemResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/item/{item}": {
            "get": {
                "operationId": "item.show",
                "summary": "Display the specified resource",
                "tags": [
                    "Item"
                ],
                "parameters": [
                    {
                        "name": "item",
                        "in": "path",
                        "required": true,
                        "description": "The item ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`ItemResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ItemResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "put": {
                "operationId": "item.update",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "Item"
                ],
                "parameters": [
                    {
                        "name": "item",
                        "in": "path",
                        "required": true,
                        "description": "The item ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateItemRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ItemResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ItemResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "item.destroy",
                "summary": "Remove the specified resource from storage",
                "tags": [
                    "Item"
                ],
                "parameters": [
                    {
                        "name": "item",
                        "in": "path",
                        "required": true,
                        "description": "The item ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/item/{item}/tags": {
            "patch": {
                "operationId": "item.updateTags",
                "description": "This endpoint allows quick editing of tag associations by specifying which tags\nto attach or detach from the item. It provides fine-grained control over tag\noperations without requiring a full item update.",
                "summary": "Update tags for the specified item without modifying other item properties",
                "tags": [
                    "Item"
                ],
                "parameters": [
                    {
                        "name": "item",
                        "in": "path",
                        "required": true,
                        "description": "- The item to update tags for",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "attach": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    },
                                    "detach": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ItemResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ItemResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/item/for-tag/{tag}": {
            "get": {
                "operationId": "item.forTag",
                "summary": "Get items for a specific tag",
                "tags": [
                    "Item"
                ],
                "parameters": [
                    {
                        "name": "tag",
                        "in": "path",
                        "required": true,
                        "description": "The tag ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `ItemResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ItemResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/item/with-all-tags": {
            "post": {
                "operationId": "item.withAllTags",
                "summary": "Get items that have ALL of the specified tags (AND condition)",
                "tags": [
                    "Item"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "minItems": 1
                                    }
                                },
                                "required": [
                                    "tags"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Array of `ItemResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ItemResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/item/with-any-tags": {
            "post": {
                "operationId": "item.withAnyTags",
                "summary": "Get items that have ANY of the specified tags (OR condition)",
                "tags": [
                    "Item"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "minItems": 1
                                    }
                                },
                                "required": [
                                    "tags"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Array of `ItemResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ItemResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/item/type/{type}": {
            "get": {
                "operationId": "item.byType",
                "summary": "Get items by type",
                "tags": [
                    "Item"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "object",
                                "monument",
                                "detail",
                                "picture"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `ItemResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ItemResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/item/parents": {
            "get": {
                "operationId": "item.parents",
                "summary": "Get parent items (items with no parent)",
                "tags": [
                    "Item"
                ],
                "responses": {
                    "200": {
                        "description": "Array of `ItemResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ItemResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/item/children": {
            "get": {
                "operationId": "item.children",
                "summary": "Get child items (items with a parent)",
                "tags": [
                    "Item"
                ],
                "responses": {
                    "200": {
                        "description": "Array of `ItemResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ItemResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/item-translation": {
            "get": {
                "operationId": "item-translation.index",
                "summary": "Display a listing of item translations",
                "tags": [
                    "Item Translations",
                    "ItemTranslation"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "item_id",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "language_id",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "minLength": 3,
                            "maxLength": 3
                        }
                    },
                    {
                        "name": "context_id",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "default_context",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ItemTranslationResource"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "post": {
                "operationId": "item-translation.store",
                "summary": "Store a newly created item translation",
                "tags": [
                    "Item Translations",
                    "ItemTranslation"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "item_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "language_id": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 3
                                    },
                                    "context_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "alternate_name": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 255
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 255
                                    },
                                    "holder": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "owner": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "initial_owner": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "dates": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "location": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "dimensions": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "place_of_production": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "method_for_datation": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "method_for_provenance": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "obtention": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "bibliography": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "author_id": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "format": "uuid"
                                    },
                                    "text_copy_editor_id": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "format": "uuid"
                                    },
                                    "translator_id": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "format": "uuid"
                                    },
                                    "translation_copy_editor_id": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "format": "uuid"
                                    },
                                    "backward_compatibility": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 255
                                    },
                                    "extra": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    }
                                },
                                "required": [
                                    "item_id",
                                    "language_id",
                                    "context_id",
                                    "name",
                                    "description"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        201
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/item-translation/{itemTranslation}": {
            "get": {
                "operationId": "item-translation.show",
                "summary": "Display the specified item translation",
                "tags": [
                    "Item Translations",
                    "ItemTranslation"
                ],
                "parameters": [
                    {
                        "name": "itemTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The item translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`ItemTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ItemTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "item-translation.update",
                "summary": "Update the specified item translation",
                "tags": [
                    "Item Translations",
                    "ItemTranslation"
                ],
                "parameters": [
                    {
                        "name": "itemTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The item translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "item_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "language_id": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 3
                                    },
                                    "context_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "alternate_name": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 255
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 255
                                    },
                                    "holder": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "owner": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "initial_owner": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "dates": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "location": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "dimensions": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "place_of_production": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "method_for_datation": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "method_for_provenance": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "obtention": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "bibliography": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "author_id": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "format": "uuid"
                                    },
                                    "text_copy_editor_id": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "format": "uuid"
                                    },
                                    "translator_id": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "format": "uuid"
                                    },
                                    "translation_copy_editor_id": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "format": "uuid"
                                    },
                                    "backward_compatibility": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 255
                                    },
                                    "extra": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ItemTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ItemTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "item-translation.destroy",
                "summary": "Remove the specified item translation",
                "tags": [
                    "Item Translations",
                    "ItemTranslation"
                ],
                "parameters": [
                    {
                        "name": "itemTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The item translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        204
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/item/{item}/images": {
            "get": {
                "operationId": "item.images.index",
                "summary": "Display a listing of item images for a specific item",
                "tags": [
                    "ItemImage"
                ],
                "parameters": [
                    {
                        "name": "item",
                        "in": "path",
                        "required": true,
                        "description": "The item ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `ItemImageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ItemImageResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "post": {
                "operationId": "item.images.store",
                "summary": "Store a newly created item image",
                "tags": [
                    "ItemImage"
                ],
                "parameters": [
                    {
                        "name": "item",
                        "in": "path",
                        "required": true,
                        "description": "The item ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreItemImageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ItemImageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ItemImageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/item-image/{itemImage}": {
            "get": {
                "operationId": "item-image.show",
                "summary": "Display the specified item image",
                "tags": [
                    "ItemImage"
                ],
                "parameters": [
                    {
                        "name": "itemImage",
                        "in": "path",
                        "required": true,
                        "description": "The item image ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`ItemImageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ItemImageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "patch": {
                "operationId": "item-image.update",
                "summary": "Update the specified item image",
                "tags": [
                    "ItemImage"
                ],
                "parameters": [
                    {
                        "name": "itemImage",
                        "in": "path",
                        "required": true,
                        "description": "The item image ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateItemImageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ItemImageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ItemImageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "item-image.destroy",
                "summary": "Remove the specified item image",
                "tags": [
                    "ItemImage"
                ],
                "parameters": [
                    {
                        "name": "itemImage",
                        "in": "path",
                        "required": true,
                        "description": "The item image ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/item-image/{itemImage}/move-up": {
            "patch": {
                "operationId": "item-image.moveUp",
                "summary": "Move item image up in display order",
                "tags": [
                    "ItemImage"
                ],
                "parameters": [
                    {
                        "name": "itemImage",
                        "in": "path",
                        "required": true,
                        "description": "The item image ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`ItemImageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ItemImageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/item-image/{itemImage}/move-down": {
            "patch": {
                "operationId": "item-image.moveDown",
                "summary": "Move item image down in display order",
                "tags": [
                    "ItemImage"
                ],
                "parameters": [
                    {
                        "name": "itemImage",
                        "in": "path",
                        "required": true,
                        "description": "The item image ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`ItemImageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ItemImageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/item-image/{itemImage}/tighten-ordering": {
            "patch": {
                "operationId": "item-image.tightenOrdering",
                "summary": "Tighten ordering for all images of the item",
                "tags": [
                    "ItemImage"
                ],
                "parameters": [
                    {
                        "name": "itemImage",
                        "in": "path",
                        "required": true,
                        "description": "The item image ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Image ordering tightened successfully"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/item/{item}/attach-image": {
            "post": {
                "operationId": "item.attachImage",
                "summary": "Attach an available image to an item",
                "tags": [
                    "ItemImage"
                ],
                "parameters": [
                    {
                        "name": "item",
                        "in": "path",
                        "required": true,
                        "description": "The item ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "available_image_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    }
                                },
                                "required": [
                                    "available_image_id"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ItemImageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ItemImageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/item-image/{itemImage}/detach": {
            "post": {
                "operationId": "item-image.detach",
                "summary": "Detach an item image and convert it back to available image",
                "tags": [
                    "ItemImage"
                ],
                "parameters": [
                    {
                        "name": "itemImage",
                        "in": "path",
                        "required": true,
                        "description": "The item image ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Image detached successfully"
                                            ]
                                        },
                                        "available_image_id": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "available_image_id"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/language/{language}/default": {
            "patch": {
                "operationId": "language.setDefault",
                "summary": "Set or unset a Language as the default one",
                "tags": [
                    "Language"
                ],
                "parameters": [
                    {
                        "name": "language",
                        "in": "path",
                        "required": true,
                        "description": "The language ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "is_default": {
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "is_default"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`LanguageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LanguageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/language/default": {
            "delete": {
                "operationId": "language.clearDefault",
                "summary": "Clear the default flag from any language",
                "tags": [
                    "Language"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Default language cleared"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "get": {
                "operationId": "language.getDefault",
                "summary": "Get the default Language",
                "tags": [
                    "Language"
                ],
                "responses": {
                    "200": {
                        "description": "`LanguageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LanguageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "No default language found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/language/english": {
            "get": {
                "operationId": "language.getEnglish",
                "summary": "Get the english Language",
                "tags": [
                    "Language"
                ],
                "responses": {
                    "200": {
                        "description": "`LanguageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LanguageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "No English language found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/language": {
            "get": {
                "operationId": "language.index",
                "summary": "Display a listing of the resource",
                "tags": [
                    "Language"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `LanguageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/LanguageResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "post": {
                "operationId": "language.store",
                "summary": "Store a newly created resource in storage",
                "tags": [
                    "Language"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 3
                                    },
                                    "internal_name": {
                                        "type": "string"
                                    },
                                    "backward_compatibility": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "minLength": 2,
                                        "maxLength": 2
                                    },
                                    "is_default": {
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "id",
                                    "internal_name"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`LanguageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LanguageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/language/{language}": {
            "get": {
                "operationId": "language.show",
                "summary": "Display the specified resource",
                "tags": [
                    "Language"
                ],
                "parameters": [
                    {
                        "name": "language",
                        "in": "path",
                        "required": true,
                        "description": "The language ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`LanguageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LanguageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "put": {
                "operationId": "language.update",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "Language"
                ],
                "parameters": [
                    {
                        "name": "language",
                        "in": "path",
                        "required": true,
                        "description": "The language ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "internal_name": {
                                        "type": "string"
                                    },
                                    "backward_compatibility": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "minLength": 2,
                                        "maxLength": 2
                                    },
                                    "is_default": {
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "internal_name"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`LanguageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LanguageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "language.destroy",
                "summary": "Remove the specified resource from storage",
                "tags": [
                    "Language"
                ],
                "parameters": [
                    {
                        "name": "language",
                        "in": "path",
                        "required": true,
                        "description": "The language ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/location": {
            "get": {
                "operationId": "location.index",
                "summary": "Display a listing of locations",
                "tags": [
                    "Location"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `LocationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/LocationResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "post": {
                "operationId": "location.store",
                "summary": "Store a newly created location",
                "tags": [
                    "Location"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "internal_name": {
                                        "type": "string"
                                    },
                                    "country_id": {
                                        "type": "integer"
                                    },
                                    "translations": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "language_id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "language_id",
                                                "name"
                                            ]
                                        },
                                        "minItems": 1
                                    }
                                },
                                "required": [
                                    "internal_name",
                                    "country_id",
                                    "translations"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "`LocationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LocationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/location/{location}": {
            "get": {
                "operationId": "location.show",
                "summary": "Display the specified location",
                "tags": [
                    "Location"
                ],
                "parameters": [
                    {
                        "name": "location",
                        "in": "path",
                        "required": true,
                        "description": "The location ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`LocationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LocationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "put": {
                "operationId": "location.update",
                "summary": "Update the specified location",
                "tags": [
                    "Location"
                ],
                "parameters": [
                    {
                        "name": "location",
                        "in": "path",
                        "required": true,
                        "description": "The location ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "internal_name": {
                                        "type": "string"
                                    },
                                    "country_id": {
                                        "type": "integer"
                                    },
                                    "translations": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "language_id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "minItems": 1
                                    }
                                },
                                "required": [
                                    "internal_name",
                                    "country_id"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`LocationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LocationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "location.destroy",
                "summary": "Remove the specified location",
                "tags": [
                    "Location"
                ],
                "parameters": [
                    {
                        "name": "location",
                        "in": "path",
                        "required": true,
                        "description": "The location ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/location-translation": {
            "get": {
                "operationId": "location-translation.index",
                "summary": "Display a listing of the resource",
                "tags": [
                    "LocationTranslation"
                ],
                "responses": {
                    "200": {
                        "description": "Array of `LocationTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/LocationTranslationResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "location-translation.store",
                "summary": "Store a newly created resource in storage",
                "tags": [
                    "LocationTranslation"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "location_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "language_id": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "description": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    }
                                },
                                "required": [
                                    "location_id",
                                    "language_id",
                                    "name"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`LocationTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LocationTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/location-translation/{locationTranslation}": {
            "get": {
                "operationId": "location-translation.show",
                "summary": "Display the specified resource",
                "tags": [
                    "LocationTranslation"
                ],
                "parameters": [
                    {
                        "name": "locationTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The location translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`LocationTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LocationTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "location-translation.update",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "LocationTranslation"
                ],
                "parameters": [
                    {
                        "name": "locationTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The location translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "location_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "language_id": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "description": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`LocationTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LocationTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "location-translation.destroy",
                "summary": "Remove the specified resource from storage",
                "tags": [
                    "LocationTranslation"
                ],
                "parameters": [
                    {
                        "name": "locationTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The location translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/markdown/to-html": {
            "post": {
                "operationId": "markdown.toHtml",
                "description": "Converts Markdown formatted text to HTML for display purposes.\nThe input is validated to ensure it contains safe Markdown content.",
                "summary": "Convert Markdown to HTML",
                "tags": [
                    "Markdown\n\nAPI endpoints for Markdown processing and conversion",
                    "Markdown"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "markdown": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "markdown"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/markdown/from-html": {
            "post": {
                "operationId": "markdown.fromHtml",
                "description": "Converts HTML content to Markdown format with controlled tag support.\nOnly allowed HTML tags will be processed, others will be stripped.",
                "summary": "Convert HTML to Markdown",
                "tags": [
                    "Markdown\n\nAPI endpoints for Markdown processing and conversion",
                    "Markdown"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "html": {
                                        "type": "string",
                                        "maxLength": 65535
                                    }
                                },
                                "required": [
                                    "html"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/markdown/validate": {
            "post": {
                "operationId": "markdown.validate",
                "description": "Validates Markdown content without converting it, useful for form validation.",
                "summary": "Validate Markdown content",
                "tags": [
                    "Markdown\n\nAPI endpoints for Markdown processing and conversion",
                    "Markdown"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "markdown": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "markdown"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/markdown/preview": {
            "post": {
                "operationId": "markdown.preview",
                "description": "Generates an HTML preview of Markdown content for display purposes.\nThis is essentially the same as markdownToHtml but with a different semantic meaning.",
                "summary": "Preview Markdown content",
                "tags": [
                    "Markdown\n\nAPI endpoints for Markdown processing and conversion",
                    "Markdown"
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to convert markdown to HTML"
                                            ]
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "html": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "html"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Validation failed"
                                            ]
                                        },
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "errors"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/markdown/is-markdown": {
            "post": {
                "operationId": "markdown.isMarkdown",
                "description": "Analyzes content to determine if it appears to contain Markdown formatting.\nUseful for automatic detection of content type.",
                "summary": "Check if content is Markdown",
                "tags": [
                    "Markdown\n\nAPI endpoints for Markdown processing and conversion",
                    "Markdown"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "content": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "content"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/markdown/allowed-elements": {
            "get": {
                "operationId": "markdown.allowedElements",
                "description": "Returns the list of HTML tags that are supported for HTML-to-Markdown conversion.",
                "summary": "Get allowed HTML tags",
                "tags": [
                    "Markdown\n\nAPI endpoints for Markdown processing and conversion",
                    "Markdown"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/mobile/acquire-token": {
            "post": {
                "operationId": "token.acquire",
                "summary": "Acquire a token for the user",
                "tags": [
                    "MobileAppAuthentication"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "device_name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "wipe_tokens": {
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "email",
                                    "password",
                                    "device_name"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "two_factor_enabled": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "required": [
                                                "id",
                                                "name",
                                                "email",
                                                "two_factor_enabled"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "token",
                                        "user"
                                    ]
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "requires_two_factor": {
                                            "type": "boolean"
                                        },
                                        "available_methods": {
                                            "type": "array",
                                            "prefixItems": [
                                                {
                                                    "type": "string",
                                                    "enum": [
                                                        "totp"
                                                    ]
                                                },
                                                {
                                                    "type": "string",
                                                    "enum": [
                                                        "email"
                                                    ]
                                                }
                                            ],
                                            "minItems": 2,
                                            "maxItems": 2,
                                            "additionalItems": false
                                        },
                                        "primary_method": {
                                            "type": [
                                                "string",
                                                "null"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Two-factor authentication required. Please provide a verification code."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "requires_two_factor",
                                        "available_methods",
                                        "primary_method",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                },
                "security": []
            }
        },
        "/mobile/verify-two-factor": {
            "post": {
                "operationId": "token.verify_two_factor",
                "summary": "Verify two-factor authentication and acquire token",
                "tags": [
                    "MobileAppAuthentication"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "device_name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "code": {
                                        "type": "string"
                                    },
                                    "method": {
                                        "type": "string",
                                        "enum": [
                                            "totp",
                                            "email"
                                        ]
                                    },
                                    "wipe_tokens": {
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "email",
                                    "password",
                                    "device_name",
                                    "code"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "two_factor_enabled": {
                                                    "type": "boolean"
                                                },
                                                "two_factor_method": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "id",
                                                "name",
                                                "email",
                                                "two_factor_enabled",
                                                "two_factor_method"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "token",
                                        "user"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                },
                "security": []
            }
        },
        "/mobile/request-email-code": {
            "post": {
                "operationId": "token.request_email_code",
                "summary": "Request an email 2FA code for mobile authentication",
                "tags": [
                    "MobileAppAuthentication"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "email",
                                    "password"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Email verification code sent successfully."
                                            ]
                                        },
                                        "expires_in": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "expires_in"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                },
                "security": []
            }
        },
        "/mobile/two-factor-status": {
            "post": {
                "operationId": "token.two_factor_status",
                "summary": "Get user's 2FA status and available methods",
                "tags": [
                    "MobileAppAuthentication"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "email",
                                    "password"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "two_factor_enabled": {
                                            "type": "string"
                                        },
                                        "available_methods": {
                                            "type": "string"
                                        },
                                        "primary_method": {
                                            "type": "string"
                                        },
                                        "requires_two_factor": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "two_factor_enabled",
                                        "available_methods",
                                        "primary_method",
                                        "requires_two_factor"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                },
                "security": []
            }
        },
        "/mobile/wipe": {
            "get": {
                "operationId": "token.wipe",
                "summary": "Revoke all the token for the current user",
                "tags": [
                    "MobileAppAuthentication"
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/partner": {
            "get": {
                "operationId": "partner.index",
                "summary": "Display a listing of the resource",
                "tags": [
                    "Partner"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `PartnerResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PartnerResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "post": {
                "operationId": "partner.store",
                "summary": "Store a newly created resource in storage",
                "tags": [
                    "Partner"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "internal_name": {
                                        "type": "string"
                                    },
                                    "backward_compatibility": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "museum",
                                            "institution",
                                            "individual"
                                        ]
                                    },
                                    "country_id": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "minLength": 3,
                                        "maxLength": 3
                                    }
                                },
                                "required": [
                                    "internal_name",
                                    "type"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`PartnerResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PartnerResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/partner/{partner}": {
            "get": {
                "operationId": "partner.show",
                "summary": "Display the specified resource",
                "tags": [
                    "Partner"
                ],
                "parameters": [
                    {
                        "name": "partner",
                        "in": "path",
                        "required": true,
                        "description": "The partner ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`PartnerResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PartnerResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "put": {
                "operationId": "partner.update",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "Partner"
                ],
                "parameters": [
                    {
                        "name": "partner",
                        "in": "path",
                        "required": true,
                        "description": "The partner ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "internal_name": {
                                        "type": "string"
                                    },
                                    "backward_compatibility": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "museum",
                                            "institution",
                                            "individual"
                                        ]
                                    },
                                    "country_id": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "minLength": 3,
                                        "maxLength": 3
                                    }
                                },
                                "required": [
                                    "internal_name",
                                    "type"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`PartnerResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PartnerResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "partner.destroy",
                "summary": "Remove the specified resource from storage",
                "tags": [
                    "Partner"
                ],
                "parameters": [
                    {
                        "name": "partner",
                        "in": "path",
                        "required": true,
                        "description": "The partner ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/project/{project}/launched": {
            "patch": {
                "operationId": "project.setLaunched",
                "summary": "Toggle Launched/not-launched on a project.\nImportant: It is independant from the `launch_date` value. It is an idicator showing that\nthe project is to be considered 'laucnhed' as soon as the launch date it reached",
                "tags": [
                    "Project"
                ],
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "required": true,
                        "description": "The project ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "is_launched": {
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "is_launched"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ProjectResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ProjectResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/project/{project}/enabled": {
            "patch": {
                "operationId": "project.setEnabled",
                "summary": "Toggle Enable/disable on a project",
                "tags": [
                    "Project"
                ],
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "required": true,
                        "description": "The project ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "is_enabled": {
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "is_enabled"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ProjectResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ProjectResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/project/enabled": {
            "get": {
                "operationId": "project.enabled",
                "summary": "Get all visible projects.\nThe project becomes \"visible\" when all conditions are matched:\n- is_enabled is true\n- is_launched is true\n- current date >= launch_date",
                "tags": [
                    "Project"
                ],
                "responses": {
                    "200": {
                        "description": "Array of `ProjectResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProjectResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/project": {
            "get": {
                "operationId": "project.index",
                "summary": "Display a listing of the resource",
                "tags": [
                    "Project"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `ProjectResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProjectResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "post": {
                "operationId": "project.store",
                "summary": "Store a newly created resource in storage",
                "tags": [
                    "Project"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "internal_name": {
                                        "type": "string"
                                    },
                                    "backward_compatibility": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "launch_date": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "format": "date-time"
                                    },
                                    "is_launched": {
                                        "type": "boolean"
                                    },
                                    "is_enabled": {
                                        "type": "boolean"
                                    },
                                    "context_id": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "format": "uuid"
                                    },
                                    "language_id": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "minLength": 3,
                                        "maxLength": 3
                                    }
                                },
                                "required": [
                                    "internal_name"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ProjectResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ProjectResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/project/{project}": {
            "get": {
                "operationId": "project.show",
                "summary": "Display the specified resource",
                "tags": [
                    "Project"
                ],
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "required": true,
                        "description": "The project ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`ProjectResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ProjectResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "put": {
                "operationId": "project.update",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "Project"
                ],
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "required": true,
                        "description": "The project ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "internal_name": {
                                        "type": "string"
                                    },
                                    "backward_compatibility": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "launch_date": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "format": "date-time"
                                    },
                                    "is_launched": {
                                        "type": "boolean"
                                    },
                                    "is_enabled": {
                                        "type": "boolean"
                                    },
                                    "context_id": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "format": "uuid"
                                    },
                                    "language_id": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "minLength": 3,
                                        "maxLength": 3
                                    }
                                },
                                "required": [
                                    "internal_name"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ProjectResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ProjectResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "project.destroy",
                "summary": "Remove the specified resource from storage",
                "tags": [
                    "Project"
                ],
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "required": true,
                        "description": "The project ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/province": {
            "get": {
                "operationId": "province.index",
                "summary": "Display a listing of provinces",
                "tags": [
                    "Province"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `ProvinceResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProvinceResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "post": {
                "operationId": "province.store",
                "summary": "Store a newly created province",
                "tags": [
                    "Province"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "internal_name": {
                                        "type": "string"
                                    },
                                    "country_id": {
                                        "type": "integer"
                                    },
                                    "translations": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "language_id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "language_id",
                                                "name"
                                            ]
                                        },
                                        "minItems": 1
                                    }
                                },
                                "required": [
                                    "internal_name",
                                    "country_id",
                                    "translations"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "`ProvinceResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ProvinceResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/province/{province}": {
            "get": {
                "operationId": "province.show",
                "summary": "Display the specified province",
                "tags": [
                    "Province"
                ],
                "parameters": [
                    {
                        "name": "province",
                        "in": "path",
                        "required": true,
                        "description": "The province ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`ProvinceResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ProvinceResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "put": {
                "operationId": "province.update",
                "summary": "Update the specified province",
                "tags": [
                    "Province"
                ],
                "parameters": [
                    {
                        "name": "province",
                        "in": "path",
                        "required": true,
                        "description": "The province ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "internal_name": {
                                        "type": "string"
                                    },
                                    "country_id": {
                                        "type": "integer"
                                    },
                                    "translations": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "language_id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "minItems": 1
                                    }
                                },
                                "required": [
                                    "internal_name",
                                    "country_id"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ProvinceResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ProvinceResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "province.destroy",
                "summary": "Remove the specified province",
                "tags": [
                    "Province"
                ],
                "parameters": [
                    {
                        "name": "province",
                        "in": "path",
                        "required": true,
                        "description": "The province ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/province-translation": {
            "get": {
                "operationId": "province-translation.index",
                "summary": "Display a listing of the resource",
                "tags": [
                    "ProvinceTranslation"
                ],
                "responses": {
                    "200": {
                        "description": "Array of `ProvinceTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProvinceTranslationResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "province-translation.store",
                "summary": "Store a newly created resource in storage",
                "tags": [
                    "ProvinceTranslation"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "province_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "language_id": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "description": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    }
                                },
                                "required": [
                                    "province_id",
                                    "language_id",
                                    "name"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ProvinceTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ProvinceTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/province-translation/{provinceTranslation}": {
            "get": {
                "operationId": "province-translation.show",
                "summary": "Display the specified resource",
                "tags": [
                    "ProvinceTranslation"
                ],
                "parameters": [
                    {
                        "name": "provinceTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The province translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`ProvinceTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ProvinceTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "province-translation.update",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "ProvinceTranslation"
                ],
                "parameters": [
                    {
                        "name": "provinceTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The province translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "province_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "language_id": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "description": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ProvinceTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ProvinceTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "province-translation.destroy",
                "summary": "Remove the specified resource from storage",
                "tags": [
                    "ProvinceTranslation"
                ],
                "parameters": [
                    {
                        "name": "provinceTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The province translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/tag": {
            "get": {
                "operationId": "tag.index",
                "summary": "Display a listing of the resource",
                "tags": [
                    "Tag"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `TagResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TagResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "post": {
                "operationId": "tag.store",
                "summary": "Store a newly created resource in storage",
                "tags": [
                    "Tag"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "internal_name": {
                                        "type": "string"
                                    },
                                    "backward_compatibility": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "internal_name",
                                    "description"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`TagResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/TagResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/tag/{tag}": {
            "get": {
                "operationId": "tag.show",
                "summary": "Display the specified resource",
                "tags": [
                    "Tag"
                ],
                "parameters": [
                    {
                        "name": "tag",
                        "in": "path",
                        "required": true,
                        "description": "The tag ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`TagResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/TagResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "put": {
                "operationId": "tag.update",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "Tag"
                ],
                "parameters": [
                    {
                        "name": "tag",
                        "in": "path",
                        "required": true,
                        "description": "The tag ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "internal_name": {
                                        "type": "string"
                                    },
                                    "backward_compatibility": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "internal_name",
                                    "description"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`TagResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/TagResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "tag.destroy",
                "summary": "Remove the specified resource from storage",
                "tags": [
                    "Tag"
                ],
                "parameters": [
                    {
                        "name": "tag",
                        "in": "path",
                        "required": true,
                        "description": "The tag ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/tag/for-item/{item}": {
            "get": {
                "operationId": "tag.forItem",
                "summary": "Get tags for a specific item",
                "tags": [
                    "Tag"
                ],
                "parameters": [
                    {
                        "name": "item",
                        "in": "path",
                        "required": true,
                        "description": "The item ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `TagResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TagResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/theme": {
            "get": {
                "operationId": "theme.index",
                "summary": "Display a listing of the resource",
                "tags": [
                    "Theme"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `ThemeResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ThemeResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "post": {
                "operationId": "theme.store",
                "summary": "Store a newly created theme in storage",
                "tags": [
                    "Theme"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "exhibition_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "parent_id": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "format": "uuid"
                                    },
                                    "internal_name": {
                                        "type": "string"
                                    },
                                    "backward_compatibility": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    }
                                },
                                "required": [
                                    "exhibition_id",
                                    "internal_name"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ThemeResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ThemeResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/theme/{theme}": {
            "get": {
                "operationId": "theme.show",
                "summary": "Display the specified resource",
                "tags": [
                    "Theme"
                ],
                "parameters": [
                    {
                        "name": "theme",
                        "in": "path",
                        "required": true,
                        "description": "The theme ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`ThemeResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ThemeResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "put": {
                "operationId": "theme.update",
                "summary": "Update the specified theme in storage",
                "tags": [
                    "Theme"
                ],
                "parameters": [
                    {
                        "name": "theme",
                        "in": "path",
                        "required": true,
                        "description": "The theme ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "internal_name": {
                                        "type": "string"
                                    },
                                    "backward_compatibility": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ThemeResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ThemeResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "theme.destroy",
                "summary": "Remove the specified theme from storage",
                "tags": [
                    "Theme"
                ],
                "parameters": [
                    {
                        "name": "theme",
                        "in": "path",
                        "required": true,
                        "description": "The theme ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/theme-translation": {
            "get": {
                "operationId": "theme-translation.index",
                "summary": "Display a listing of theme translations",
                "tags": [
                    "Theme Translations",
                    "ThemeTranslation"
                ],
                "parameters": [
                    {
                        "name": "theme_id",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "language_id",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "minLength": 3,
                            "maxLength": 3
                        }
                    },
                    {
                        "name": "context_id",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "default_context",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ThemeTranslationResource"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "post": {
                "operationId": "theme-translation.store",
                "summary": "Store a newly created theme translation",
                "tags": [
                    "Theme Translations",
                    "ThemeTranslation"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "theme_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "language_id": {
                                        "type": "string"
                                    },
                                    "context_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "title": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "introduction": {
                                        "type": "string"
                                    },
                                    "backward_compatibility": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 255
                                    },
                                    "extra": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    }
                                },
                                "required": [
                                    "theme_id",
                                    "language_id",
                                    "context_id",
                                    "title",
                                    "description",
                                    "introduction"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ThemeTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ThemeTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/theme-translation/{themeTranslation}": {
            "get": {
                "operationId": "theme-translation.show",
                "summary": "Display the specified theme translation",
                "tags": [
                    "Theme Translations",
                    "ThemeTranslation"
                ],
                "parameters": [
                    {
                        "name": "themeTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The theme translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`ThemeTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ThemeTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "theme-translation.update",
                "summary": "Update the specified theme translation",
                "tags": [
                    "Theme Translations",
                    "ThemeTranslation"
                ],
                "parameters": [
                    {
                        "name": "themeTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The theme translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "theme_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "language_id": {
                                        "type": "string"
                                    },
                                    "context_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "title": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "introduction": {
                                        "type": "string"
                                    },
                                    "backward_compatibility": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 255
                                    },
                                    "extra": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ThemeTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ThemeTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "theme-translation.destroy",
                "summary": "Remove the specified theme translation",
                "tags": [
                    "Theme Translations",
                    "ThemeTranslation"
                ],
                "parameters": [
                    {
                        "name": "themeTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The theme translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        204
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "http": {
                "type": "http",
                "scheme": "bearer"
            }
        },
        "schemas": {
            "AddressResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "internal_name": {
                        "type": "string",
                        "description": "A name for this resource, for internal use only."
                    },
                    "country_id": {
                        "type": "string",
                        "description": "The country this address belongs to (CountryResource id)"
                    },
                    "translations": {
                        "type": "array",
                        "description": "Translations for this address (AddressTranslationResource[])",
                        "items": {
                            "$ref": "#/components/schemas/AddressTranslationResource"
                        }
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    }
                },
                "required": [
                    "id",
                    "internal_name",
                    "country_id",
                    "created_at",
                    "updated_at"
                ],
                "title": "AddressResource"
            },
            "AddressTranslationResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "address_id": {
                        "type": "string",
                        "description": "The address this translation belongs to (AddressResource id)"
                    },
                    "language_id": {
                        "type": "string",
                        "description": "The language of this translation (LanguageResource id)"
                    },
                    "address": {
                        "type": "string",
                        "description": "The address translation text"
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The description of the address translation"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    }
                },
                "required": [
                    "id",
                    "address_id",
                    "language_id",
                    "address",
                    "description",
                    "created_at",
                    "updated_at"
                ],
                "title": "AddressTranslationResource"
            },
            "ArtistResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the artist"
                    },
                    "place_of_birth": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The place of birth of the artist"
                    },
                    "place_of_death": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The place of death of the artist"
                    },
                    "date_of_birth": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The date of birth of the artist"
                    },
                    "date_of_death": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The date of death of the artist"
                    },
                    "period_of_activity": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The period of activity of the artist"
                    },
                    "internal_name": {
                        "type": "string",
                        "description": "A name for this resource, for internal use only."
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The Id(s) of matching resource in the legacy system (if any)."
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    },
                    "items": {
                        "type": "array",
                        "description": "Items associated with this artist (ItemResource[])",
                        "items": {
                            "$ref": "#/components/schemas/ItemResource"
                        }
                    }
                },
                "required": [
                    "id",
                    "name",
                    "place_of_birth",
                    "place_of_death",
                    "date_of_birth",
                    "date_of_death",
                    "period_of_activity",
                    "internal_name",
                    "backward_compatibility",
                    "created_at",
                    "updated_at"
                ],
                "title": "ArtistResource"
            },
            "AuthorResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the author"
                    },
                    "internal_name": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "A name for this resource, for internal use only."
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The Id(s) of matching resource in the legacy system (if any)."
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "internal_name",
                    "backward_compatibility",
                    "created_at",
                    "updated_at"
                ],
                "title": "AuthorResource"
            },
            "AvailableImageResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "path": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The path to the picture file"
                    },
                    "comment": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "A user defined comment associated with the file"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    }
                },
                "required": [
                    "id",
                    "path",
                    "comment",
                    "created_at",
                    "updated_at"
                ],
                "title": "AvailableImageResource"
            },
            "CollectionResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "internal_name": {
                        "type": "string",
                        "description": "A name for this resource, for internal use only."
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of collection: 'collection', 'exhibition', or 'gallery'"
                    },
                    "language_id": {
                        "type": "string",
                        "description": "The language this collection belongs to (LanguageResource id)"
                    },
                    "context_id": {
                        "type": "string",
                        "description": "The context this collection belongs to (ContextResource id)"
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The Id(s) of matching resource in the legacy system (if any)."
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    },
                    "language": {
                        "description": "The language relationship (LanguageResource)",
                        "$ref": "#/components/schemas/LanguageResource"
                    },
                    "context": {
                        "description": "The context relationship (ContextResource)",
                        "$ref": "#/components/schemas/ContextResource"
                    },
                    "translations": {
                        "type": "array",
                        "description": "Translations for this collection (CollectionTranslationResource[])",
                        "items": {
                            "$ref": "#/components/schemas/CollectionTranslationResource"
                        }
                    },
                    "partners": {
                        "type": "array",
                        "description": "Partners associated with this collection (PartnerResource[])",
                        "items": {
                            "$ref": "#/components/schemas/PartnerResource"
                        }
                    },
                    "items": {
                        "type": "array",
                        "description": "Items associated with this collection - primary relationship (ItemResource[])",
                        "items": {
                            "$ref": "#/components/schemas/ItemResource"
                        }
                    },
                    "attachedItems": {
                        "type": "array",
                        "description": "Items attached to this collection via many-to-many relationship (ItemResource[])",
                        "items": {
                            "$ref": "#/components/schemas/ItemResource"
                        }
                    },
                    "items_count": {
                        "type": "string",
                        "description": "The number of items in this collection (computed)"
                    },
                    "attached_items_count": {
                        "type": "string"
                    },
                    "partners_count": {
                        "type": "string"
                    },
                    "translations_count": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "internal_name",
                    "type",
                    "language_id",
                    "context_id",
                    "backward_compatibility",
                    "created_at",
                    "updated_at"
                ],
                "title": "CollectionResource"
            },
            "CollectionTranslationResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "collection_id": {
                        "type": "string",
                        "description": "The collection this translation belongs to (CollectionResource id)"
                    },
                    "language_id": {
                        "type": "string",
                        "description": "The language of this translation (LanguageResource id)"
                    },
                    "context_id": {
                        "type": "string",
                        "description": "The context of this translation (ContextResource id)"
                    },
                    "title": {
                        "type": "string",
                        "description": "The title of the collection translation"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the collection translation"
                    },
                    "url": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The URL for the collection translation"
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The Id(s) of matching resource in the legacy system (if any)."
                    },
                    "extra": {
                        "type": [
                            "object",
                            "null"
                        ],
                        "description": "Extra data for translation (object, may be null)"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    },
                    "collection": {
                        "description": "The collection relationship (CollectionResource)",
                        "$ref": "#/components/schemas/CollectionResource"
                    },
                    "language": {
                        "description": "The language relationship (LanguageResource)",
                        "$ref": "#/components/schemas/LanguageResource"
                    },
                    "context": {
                        "description": "The context relationship (ContextResource)",
                        "$ref": "#/components/schemas/ContextResource"
                    }
                },
                "required": [
                    "id",
                    "collection_id",
                    "language_id",
                    "context_id",
                    "title",
                    "description",
                    "url",
                    "backward_compatibility",
                    "extra",
                    "created_at",
                    "updated_at"
                ],
                "title": "CollectionTranslationResource"
            },
            "ContactResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "internal_name": {
                        "type": "string",
                        "description": "A name for this resource, for internal use only."
                    },
                    "phone_number": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The phone number of the contact"
                    },
                    "formatted_phone_number": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The formatted phone number of the contact"
                    },
                    "fax_number": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The fax number of the contact"
                    },
                    "formatted_fax_number": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The formatted fax number of the contact"
                    },
                    "email": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The email address of the contact"
                    },
                    "translations": {
                        "type": "array",
                        "description": "Translations for this contact (ContactTranslationResource[])",
                        "items": {
                            "$ref": "#/components/schemas/ContactTranslationResource"
                        }
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    }
                },
                "required": [
                    "id",
                    "internal_name",
                    "phone_number",
                    "formatted_phone_number",
                    "fax_number",
                    "formatted_fax_number",
                    "email",
                    "created_at",
                    "updated_at"
                ],
                "title": "ContactResource"
            },
            "ContactTranslationResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "contact_id": {
                        "type": "string",
                        "description": "The contact this translation belongs to (ContactResource id)"
                    },
                    "language_id": {
                        "type": "string",
                        "description": "The language of this translation (LanguageResource id)"
                    },
                    "label": {
                        "type": "string",
                        "description": "The label for the contact translation"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    }
                },
                "required": [
                    "id",
                    "contact_id",
                    "language_id",
                    "label",
                    "created_at",
                    "updated_at"
                ],
                "title": "ContactTranslationResource"
            },
            "ContextResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "internal_name": {
                        "type": "string",
                        "description": "A name for this resource, for internal use only."
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The Id(s) of matching resource in the legacy system (if any)."
                    },
                    "is_default": {
                        "type": "boolean",
                        "description": "Indicates if this context is the default one. There is one single default context for the entire database."
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    }
                },
                "required": [
                    "id",
                    "internal_name",
                    "backward_compatibility",
                    "is_default",
                    "created_at",
                    "updated_at"
                ],
                "title": "ContextResource"
            },
            "CountryResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (ISO 3166-1 alpha-3 code)"
                    },
                    "internal_name": {
                        "type": "string",
                        "description": "A name for this resource, for internal use only."
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The Id(s) of matching resource in the legacy system (if any)."
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    }
                },
                "required": [
                    "id",
                    "internal_name",
                    "backward_compatibility",
                    "created_at",
                    "updated_at"
                ],
                "title": "CountryResource"
            },
            "ImageUploadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "path": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The path to the picture file"
                    },
                    "name": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The original name of the uploaded file"
                    },
                    "extension": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The file extension of the uploaded file"
                    },
                    "mime_type": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The MIME type of the uploaded file"
                    },
                    "size": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "description": "The size of the uploaded file in bytes"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    }
                },
                "required": [
                    "id",
                    "path",
                    "name",
                    "extension",
                    "mime_type",
                    "size",
                    "created_at",
                    "updated_at"
                ],
                "title": "ImageUploadResource"
            },
            "ItemImageResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "item_id": {
                        "type": "string",
                        "description": "The item this image belongs to"
                    },
                    "path": {
                        "type": "string",
                        "description": "The path to the image file"
                    },
                    "original_name": {
                        "type": "string",
                        "description": "The original filename when uploaded"
                    },
                    "mime_type": {
                        "type": "string",
                        "description": "The MIME type of the image"
                    },
                    "size": {
                        "type": "integer",
                        "description": "The file size in bytes"
                    },
                    "alt_text": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Alternative text for accessibility"
                    },
                    "display_order": {
                        "type": "integer",
                        "description": "Display order for sorting images"
                    },
                    "item": {
                        "description": "The item this image belongs to (ItemResource)",
                        "$ref": "#/components/schemas/ItemResource"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    }
                },
                "required": [
                    "id",
                    "item_id",
                    "path",
                    "original_name",
                    "mime_type",
                    "size",
                    "alt_text",
                    "display_order",
                    "created_at",
                    "updated_at"
                ],
                "title": "ItemImageResource"
            },
            "ItemResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "internal_name": {
                        "type": "string",
                        "description": "A name for this resource, for internal use only."
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The Id(s) of matching resource in the legacy system (if any)."
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the item: 'object', 'monument', 'detail', or 'picture'."
                    },
                    "parent_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The parent item ID (for hierarchical relationships), nullable"
                    },
                    "owner_reference": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Owner's reference number for the item (external reference from owner)"
                    },
                    "mwnf_reference": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "MWNF reference number for the item (reference from MWNF system)"
                    },
                    "parent": {
                        "description": "The parent item (for hierarchical relationships), nullable (ItemResource)",
                        "$ref": "#/components/schemas/ItemResource"
                    },
                    "children": {
                        "type": "array",
                        "description": "The child items (for hierarchical relationships) (ItemResource[])",
                        "items": {
                            "$ref": "#/components/schemas/ItemResource"
                        }
                    },
                    "partner": {
                        "description": "The partner owning the item (PartnerResource)",
                        "$ref": "#/components/schemas/PartnerResource"
                    },
                    "project": {
                        "description": "The project this item belongs to, nullable (ProjectResource)",
                        "$ref": "#/components/schemas/ProjectResource"
                    },
                    "country": {
                        "description": "The country this item is associated with, nullable (CountryResource)",
                        "$ref": "#/components/schemas/CountryResource"
                    },
                    "collection": {
                        "description": "The collection that contains this item (CollectionResource)",
                        "$ref": "#/components/schemas/CollectionResource"
                    },
                    "artists": {
                        "type": "array",
                        "description": "Artists associated with this item (ArtistResource[])",
                        "items": {
                            "$ref": "#/components/schemas/ArtistResource"
                        }
                    },
                    "workshops": {
                        "type": "array",
                        "description": "Workshops associated with this item (WorkshopResource[])",
                        "items": {
                            "$ref": "#/components/schemas/WorkshopResource"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "description": "Tags associated with this item (TagResource[])",
                        "items": {
                            "$ref": "#/components/schemas/TagResource"
                        }
                    },
                    "translations": {
                        "type": "array",
                        "description": "Translations for this item (internationalization and contextualization) (ItemTranslationResource[])",
                        "items": {
                            "$ref": "#/components/schemas/ItemTranslationResource"
                        }
                    },
                    "itemImages": {
                        "type": "array",
                        "description": "Item images attached to this item with display ordering (ItemImageResource[])",
                        "items": {
                            "$ref": "#/components/schemas/ItemImageResource"
                        }
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    }
                },
                "required": [
                    "id",
                    "internal_name",
                    "backward_compatibility",
                    "type",
                    "parent_id",
                    "owner_reference",
                    "mwnf_reference",
                    "created_at",
                    "updated_at"
                ],
                "title": "ItemResource"
            },
            "ItemTranslationResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "item_id": {
                        "type": "string",
                        "description": "The item this translation belongs to (ItemResource id)"
                    },
                    "language_id": {
                        "type": "string",
                        "description": "The language of this translation (LanguageResource id)"
                    },
                    "context_id": {
                        "type": "string",
                        "description": "The context of this translation (ContextResource id)"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the item translation"
                    },
                    "alternate_name": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The alternate name of the item translation"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the item translation"
                    },
                    "type": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The type of the item translation"
                    },
                    "holder": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The holder of the item"
                    },
                    "owner": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The owner of the item"
                    },
                    "initial_owner": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The initial owner of the item"
                    },
                    "dates": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The dates associated with the item"
                    },
                    "location": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The location associated with the item"
                    },
                    "dimensions": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The dimensions of the item"
                    },
                    "place_of_production": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The place of production of the item"
                    },
                    "method_for_datation": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The method for datation of the item"
                    },
                    "method_for_provenance": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The method for provenance of the item"
                    },
                    "obtention": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The obtention of the item"
                    },
                    "bibliography": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The bibliography for the item"
                    },
                    "author_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The author of the item (AuthorResource id)"
                    },
                    "text_copy_editor_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The copy-editor of the item (AuthorResource id)"
                    },
                    "translator_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The translator of the item translation (AuthorResource id)"
                    },
                    "translation_copy_editor_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The copy-editor of the item translation (AuthorResource id)"
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The Id(s) of matching resource in the legacy system (if any)."
                    },
                    "extra": {
                        "type": [
                            "object",
                            "null"
                        ],
                        "description": "Extra data for translation (object, may be null)"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    },
                    "item": {
                        "description": "The item relationship (ItemResource)",
                        "$ref": "#/components/schemas/ItemResource"
                    },
                    "language": {
                        "description": "The language relationship (LanguageResource)",
                        "$ref": "#/components/schemas/LanguageResource"
                    },
                    "context": {
                        "description": "The context relationship (ContextResource)",
                        "$ref": "#/components/schemas/ContextResource"
                    },
                    "author": {
                        "description": "The author relationship (AuthorResource)",
                        "$ref": "#/components/schemas/AuthorResource"
                    },
                    "text_copy_editor": {
                        "description": "The copy-editor relationship (AuthorResource)",
                        "$ref": "#/components/schemas/AuthorResource"
                    },
                    "translator": {
                        "description": "The translator relationship (AuthorResource)",
                        "$ref": "#/components/schemas/AuthorResource"
                    },
                    "translation_copy_editor": {
                        "description": "The translation copy-editor relationship (AuthorResource)",
                        "$ref": "#/components/schemas/AuthorResource"
                    }
                },
                "required": [
                    "id",
                    "item_id",
                    "language_id",
                    "context_id",
                    "name",
                    "alternate_name",
                    "description",
                    "type",
                    "holder",
                    "owner",
                    "initial_owner",
                    "dates",
                    "location",
                    "dimensions",
                    "place_of_production",
                    "method_for_datation",
                    "method_for_provenance",
                    "obtention",
                    "bibliography",
                    "author_id",
                    "text_copy_editor_id",
                    "translator_id",
                    "translation_copy_editor_id",
                    "backward_compatibility",
                    "extra",
                    "created_at",
                    "updated_at"
                ],
                "title": "ItemTranslationResource"
            },
            "LanguageResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (ISO 639-1 code)"
                    },
                    "internal_name": {
                        "type": "string",
                        "description": "A name for this resource, for internal use only."
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The Id(s) of matching resource in the legacy system (if any)."
                    },
                    "is_default": {
                        "type": "boolean",
                        "description": "Indicates if this language is the default one. There is one single default language for the entire database."
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    }
                },
                "required": [
                    "id",
                    "internal_name",
                    "backward_compatibility",
                    "is_default",
                    "created_at",
                    "updated_at"
                ],
                "title": "LanguageResource"
            },
            "LocationResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "internal_name": {
                        "type": "string",
                        "description": "A name for this resource, for internal use only."
                    },
                    "country_id": {
                        "type": "string",
                        "description": "The country this location belongs to (CountryResource id)"
                    },
                    "translations": {
                        "type": "array",
                        "description": "Translations for this location (LocationTranslationResource[])",
                        "items": {
                            "$ref": "#/components/schemas/LocationTranslationResource"
                        }
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    }
                },
                "required": [
                    "id",
                    "internal_name",
                    "country_id",
                    "created_at",
                    "updated_at"
                ],
                "title": "LocationResource"
            },
            "LocationTranslationResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "location_id": {
                        "type": "string",
                        "description": "The location this translation belongs to (LocationResource id)"
                    },
                    "language_id": {
                        "type": "string",
                        "description": "The language of this translation (LanguageResource id)"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the location translation"
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The description of the location translation"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    }
                },
                "required": [
                    "id",
                    "location_id",
                    "language_id",
                    "name",
                    "description",
                    "created_at",
                    "updated_at"
                ],
                "title": "LocationTranslationResource"
            },
            "PartnerResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "internal_name": {
                        "type": "string",
                        "description": "A name for this resource, for internal use only."
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The Id(s) of matching resource in the legacy system (if any)."
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the partner, either 'museum', 'institution' or 'individual'."
                    },
                    "country": {
                        "description": "The country this partner is associated with, nullable (CountryResource)",
                        "$ref": "#/components/schemas/CountryResource"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    }
                },
                "required": [
                    "id",
                    "internal_name",
                    "backward_compatibility",
                    "type",
                    "created_at",
                    "updated_at"
                ],
                "title": "PartnerResource"
            },
            "ProjectResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "internal_name": {
                        "type": "string",
                        "description": "A name for this resource, for internal use only."
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The Id(s) of matching resource in the legacy system (if any)."
                    },
                    "launch_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "Launch date of the project, nullable"
                    },
                    "is_launched": {
                        "type": "boolean",
                        "description": "Indicates if the project has been launched already"
                    },
                    "is_enabled": {
                        "type": "boolean",
                        "description": "Indicates if the project is enabled (active)"
                    },
                    "context": {
                        "description": "The default context used within the project (ContextResource)",
                        "$ref": "#/components/schemas/ContextResource"
                    },
                    "language": {
                        "description": "The default language used within the project (LanguageResource)",
                        "$ref": "#/components/schemas/LanguageResource"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    }
                },
                "required": [
                    "id",
                    "internal_name",
                    "backward_compatibility",
                    "launch_date",
                    "is_launched",
                    "is_enabled",
                    "created_at",
                    "updated_at"
                ],
                "title": "ProjectResource"
            },
            "ProvinceResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "internal_name": {
                        "type": "string",
                        "description": "A name for this resource, for internal use only."
                    },
                    "country_id": {
                        "type": "string",
                        "description": "The country this province belongs to (CountryResource id)"
                    },
                    "translations": {
                        "type": "array",
                        "description": "Translations for this province (ProvinceTranslationResource[])",
                        "items": {
                            "$ref": "#/components/schemas/ProvinceTranslationResource"
                        }
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    }
                },
                "required": [
                    "id",
                    "internal_name",
                    "country_id",
                    "created_at",
                    "updated_at"
                ],
                "title": "ProvinceResource"
            },
            "ProvinceTranslationResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "province_id": {
                        "type": "string",
                        "description": "The province this translation belongs to (ProvinceResource id)"
                    },
                    "language_id": {
                        "type": "string",
                        "description": "The language of this translation (LanguageResource id)"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the province translation"
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The description of the province translation"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    }
                },
                "required": [
                    "id",
                    "province_id",
                    "language_id",
                    "name",
                    "description",
                    "created_at",
                    "updated_at"
                ],
                "title": "ProvinceTranslationResource"
            },
            "StoreItemImageRequest": {
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string",
                        "format": "uri",
                        "maxLength": 500
                    },
                    "original_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "mime_type": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "size": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "alt_text": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 500
                    },
                    "display_order": {
                        "type": "integer",
                        "minimum": 1
                    }
                },
                "required": [
                    "path",
                    "original_name",
                    "mime_type",
                    "size"
                ],
                "title": "StoreItemImageRequest"
            },
            "StoreItemRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "internal_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "object",
                            "monument",
                            "detail",
                            "picture"
                        ]
                    },
                    "parent_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "country_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "minLength": 3,
                        "maxLength": 3
                    },
                    "partner_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "project_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "collection_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "owner_reference": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "mwnf_reference": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    }
                },
                "required": [
                    "internal_name",
                    "type"
                ],
                "title": "StoreItemRequest"
            },
            "TagResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier of the tag (GUID)"
                    },
                    "internal_name": {
                        "type": "string",
                        "description": "The name of the tag, it shall only be used internally"
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The legacy Id when this tag corresponds to a legacy tag from the previous database, nullable"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the tag"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "Date of creation"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "Date of last modification"
                    }
                },
                "required": [
                    "id",
                    "internal_name",
                    "backward_compatibility",
                    "description",
                    "created_at",
                    "updated_at"
                ],
                "title": "TagResource"
            },
            "ThemeResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "exhibition_id": {
                        "type": "string",
                        "description": "The exhibition this theme belongs to (ExhibitionResource id)"
                    },
                    "parent_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The parent theme of this theme (ThemeResource id)"
                    },
                    "internal_name": {
                        "type": "string",
                        "description": "A name for this resource, for internal use only."
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The Id(s) of matching resource in the legacy system (if any)."
                    },
                    "translations": {
                        "type": "array",
                        "description": "Translations for this theme (ThemeTranslationResource[])",
                        "items": {
                            "$ref": "#/components/schemas/ThemeTranslationResource"
                        }
                    },
                    "subthemes": {
                        "type": "array",
                        "description": "Subthemes of this theme (ThemeResource[])",
                        "items": {
                            "$ref": "#/components/schemas/ThemeResource"
                        }
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    }
                },
                "required": [
                    "id",
                    "exhibition_id",
                    "parent_id",
                    "internal_name",
                    "backward_compatibility",
                    "created_at",
                    "updated_at"
                ],
                "title": "ThemeResource"
            },
            "ThemeTranslationResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "theme_id": {
                        "type": "string",
                        "description": "The theme this translation belongs to (ThemeResource id)"
                    },
                    "language_id": {
                        "type": "string",
                        "description": "The language of this translation (LanguageResource id)"
                    },
                    "context_id": {
                        "type": "string",
                        "description": "The context of this translation (ContextResource id)"
                    },
                    "title": {
                        "type": "string",
                        "description": "The title of the theme translation"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the theme translation"
                    },
                    "introduction": {
                        "type": "string",
                        "description": "The introduction of the theme translation"
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The Id(s) of matching resource in the legacy system (if any)."
                    },
                    "extra": {
                        "type": [
                            "object",
                            "null"
                        ],
                        "description": "Extra data for translation (object, may be null)"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    }
                },
                "required": [
                    "id",
                    "theme_id",
                    "language_id",
                    "context_id",
                    "title",
                    "description",
                    "introduction",
                    "backward_compatibility",
                    "extra",
                    "created_at",
                    "updated_at"
                ],
                "title": "ThemeTranslationResource"
            },
            "UpdateItemImageRequest": {
                "type": "object",
                "properties": {
                    "original_name": {
                        "type": "string",
                        "description": "Path and item_id are immutable - not allowed in updates",
                        "maxLength": 255
                    },
                    "mime_type": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "size": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "alt_text": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 500
                    },
                    "display_order": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "include": {
                        "type": "string"
                    }
                },
                "title": "UpdateItemImageRequest"
            },
            "UpdateItemRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "internal_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "object",
                            "monument",
                            "detail",
                            "picture"
                        ]
                    },
                    "parent_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "country_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "minLength": 3,
                        "maxLength": 3
                    },
                    "partner_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "project_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "collection_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "owner_reference": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "mwnf_reference": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    }
                },
                "title": "UpdateItemRequest"
            },
            "WorkshopResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the workshop"
                    },
                    "internal_name": {
                        "type": "string",
                        "description": "A name for this resource, for internal use only."
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The Id(s) of matching resource in the legacy system (if any)."
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    },
                    "items": {
                        "type": "array",
                        "description": "Items associated with this workshop (ItemResource[])",
                        "items": {
                            "$ref": "#/components/schemas/ItemResource"
                        }
                    }
                },
                "required": [
                    "id",
                    "name",
                    "internal_name",
                    "backward_compatibility",
                    "created_at",
                    "updated_at"
                ],
                "title": "WorkshopResource"
            }
        },
        "responses": {
            "ValidationException": {
                "description": "Validation error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Errors overview."
                                },
                                "errors": {
                                    "type": "object",
                                    "description": "A detailed description of each field that failed validation.",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "required": [
                                "message",
                                "errors"
                            ]
                        }
                    }
                }
            },
            "ModelNotFoundException": {
                "description": "Not found",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            },
            "AuthenticationException": {
                "description": "Unauthenticated",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            },
            "AuthorizationException": {
                "description": "Authorization error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            }
        }
    }
}