{
    "openapi": "3.1.0",
    "info": {
        "title": "Inventory-App",
        "version": "0.0.1"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000/api"
        }
    ],
    "security": [
        {
            "http": []
        }
    ],
    "paths": {
        "/address/{address}": {
            "get": {
                "operationId": "address.show",
                "summary": "Display the specified address",
                "tags": [
                    "Address"
                ],
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "required": true,
                        "description": "The address ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`AddressResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/AddressResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "patch": {
                "operationId": "address.update",
                "summary": "Update the specified address",
                "tags": [
                    "Address"
                ],
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "required": true,
                        "description": "The address ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAddressRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`AddressResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/AddressResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "put": {
                "operationId": "address.update_2",
                "summary": "Update the specified address",
                "tags": [
                    "Address"
                ],
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "required": true,
                        "description": "The address ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAddressRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`AddressResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/AddressResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "address.destroy",
                "summary": "Remove the specified address",
                "tags": [
                    "Address"
                ],
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "required": true,
                        "description": "The address ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/address": {
            "get": {
                "operationId": "address.index",
                "summary": "Display a listing of addresses",
                "tags": [
                    "Address"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `AddressResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AddressResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "post": {
                "operationId": "address.store",
                "summary": "Store a newly created address",
                "tags": [
                    "Address"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreAddressRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "`AddressResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/AddressResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/address-translation/{addressTranslation}": {
            "get": {
                "operationId": "address-translation.show",
                "summary": "Display the specified resource",
                "tags": [
                    "AddressTranslation"
                ],
                "parameters": [
                    {
                        "name": "addressTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The address translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`AddressTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/AddressTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "patch": {
                "operationId": "address-translation.update",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "AddressTranslation"
                ],
                "parameters": [
                    {
                        "name": "addressTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The address translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAddressTranslationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`AddressTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/AddressTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "put": {
                "operationId": "addressTranslation.update_2",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "AddressTranslation"
                ],
                "parameters": [
                    {
                        "name": "addressTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The address translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAddressTranslationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`AddressTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/AddressTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "address-translation.destroy",
                "summary": "Remove the specified resource from storage",
                "tags": [
                    "AddressTranslation"
                ],
                "parameters": [
                    {
                        "name": "addressTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The address translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/address-translation": {
            "get": {
                "operationId": "address-translation.index",
                "summary": "Display a listing of the resource",
                "tags": [
                    "AddressTranslation"
                ],
                "responses": {
                    "200": {
                        "description": "Array of `AddressTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AddressTranslationResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "address-translation.store",
                "summary": "Store a newly created resource in storage",
                "tags": [
                    "AddressTranslation"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreAddressTranslationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`AddressTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/AddressTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/available-image/{availableImage}/download": {
            "get": {
                "operationId": "available-image.download",
                "summary": "Download the file to the caller",
                "tags": [
                    "AvailableImage"
                ],
                "parameters": [
                    {
                        "name": "availableImage",
                        "in": "path",
                        "required": true,
                        "description": "The available image ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/available-image/{availableImage}/view": {
            "get": {
                "operationId": "available-image.view",
                "summary": "Returns the image file for direct viewing (e.g., for use in <img> src attribute)",
                "tags": [
                    "AvailableImage"
                ],
                "parameters": [
                    {
                        "name": "availableImage",
                        "in": "path",
                        "required": true,
                        "description": "The available image ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/available-image/{availableImage}": {
            "get": {
                "operationId": "available-image.show",
                "summary": "Display the specified resource",
                "tags": [
                    "AvailableImage"
                ],
                "parameters": [
                    {
                        "name": "availableImage",
                        "in": "path",
                        "required": true,
                        "description": "The available image ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`AvailableImageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/AvailableImageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "available-image.destroy",
                "summary": "Remove the specified resource from storage",
                "tags": [
                    "AvailableImage"
                ],
                "parameters": [
                    {
                        "name": "availableImage",
                        "in": "path",
                        "required": true,
                        "description": "The available image ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "patch": {
                "operationId": "available-image.update",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "AvailableImage"
                ],
                "parameters": [
                    {
                        "name": "availableImage",
                        "in": "path",
                        "required": true,
                        "description": "The available image ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAvailableImageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`AvailableImageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/AvailableImageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "put": {
                "operationId": "availableImage.update_3",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "AvailableImage"
                ],
                "parameters": [
                    {
                        "name": "availableImage",
                        "in": "path",
                        "required": true,
                        "description": "The available image ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAvailableImageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`AvailableImageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/AvailableImageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/available-image": {
            "get": {
                "operationId": "available-image.index",
                "summary": "Display a listing of the resource",
                "tags": [
                    "AvailableImage"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `AvailableImageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AvailableImageResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/collection/type/{type}": {
            "get": {
                "operationId": "collection.byType",
                "summary": "Get collections by type",
                "tags": [
                    "Collection"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "collection",
                                "exhibition",
                                "gallery"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `CollectionResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CollectionResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/collection/{collection}": {
            "get": {
                "operationId": "collection.show",
                "summary": "Display the specified collection",
                "tags": [
                    "Collection"
                ],
                "parameters": [
                    {
                        "name": "collection",
                        "in": "path",
                        "required": true,
                        "description": "The collection ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`CollectionResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CollectionResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "patch": {
                "operationId": "collection.update",
                "summary": "Update the specified collection in storage",
                "tags": [
                    "Collection"
                ],
                "parameters": [
                    {
                        "name": "collection",
                        "in": "path",
                        "required": true,
                        "description": "The collection ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCollectionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`CollectionResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CollectionResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "put": {
                "operationId": "collection.update_2",
                "summary": "Update the specified collection in storage",
                "tags": [
                    "Collection"
                ],
                "parameters": [
                    {
                        "name": "collection",
                        "in": "path",
                        "required": true,
                        "description": "The collection ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCollectionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`CollectionResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CollectionResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "collection.destroy",
                "summary": "Remove the specified collection from storage",
                "tags": [
                    "Collection"
                ],
                "parameters": [
                    {
                        "name": "collection",
                        "in": "path",
                        "required": true,
                        "description": "The collection ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/collection": {
            "get": {
                "operationId": "collection.index",
                "summary": "Display a listing of the collections",
                "tags": [
                    "Collection"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `CollectionResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CollectionResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "post": {
                "operationId": "collection.store",
                "summary": "Store a newly created collection in storage",
                "tags": [
                    "Collection"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreCollectionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`CollectionResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CollectionResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/collection/{collection}/attach-item": {
            "post": {
                "operationId": "collection.attachItem",
                "summary": "Attach an item to a collection via many-to-many relationship",
                "tags": [
                    "Collection"
                ],
                "parameters": [
                    {
                        "name": "collection",
                        "in": "path",
                        "required": true,
                        "description": "The collection ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AttachItemCollectionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`CollectionResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CollectionResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/collection/{collection}/attach-items": {
            "post": {
                "operationId": "collection.attachItems",
                "summary": "Attach multiple items to a collection",
                "tags": [
                    "Collection"
                ],
                "parameters": [
                    {
                        "name": "collection",
                        "in": "path",
                        "required": true,
                        "description": "The collection ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AttachItemsCollectionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`CollectionResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CollectionResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/collection/{collection}/detach-item": {
            "delete": {
                "operationId": "collection.detachItem",
                "summary": "Detach an item from a collection",
                "tags": [
                    "Collection"
                ],
                "parameters": [
                    {
                        "name": "collection",
                        "in": "path",
                        "required": true,
                        "description": "The collection ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "item_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`CollectionResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CollectionResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/collection/{collection}/detach-items": {
            "delete": {
                "operationId": "collection.detachItems",
                "summary": "Detach multiple items from a collection",
                "tags": [
                    "Collection"
                ],
                "parameters": [
                    {
                        "name": "collection",
                        "in": "path",
                        "required": true,
                        "description": "The collection ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "item_ids[]",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`CollectionResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CollectionResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/collection-translation/{collectionTranslation}": {
            "get": {
                "operationId": "collection-translation.show",
                "summary": "Display the specified collection translation",
                "tags": [
                    "Collection Translations",
                    "CollectionTranslation"
                ],
                "parameters": [
                    {
                        "name": "collectionTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The collection translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`CollectionTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CollectionTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "patch": {
                "operationId": "collection-translation.update",
                "summary": "Update the specified collection translation",
                "tags": [
                    "Collection Translations",
                    "CollectionTranslation"
                ],
                "parameters": [
                    {
                        "name": "collectionTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The collection translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCollectionTranslationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`CollectionTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CollectionTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "put": {
                "operationId": "collectionTranslation.update_2",
                "summary": "Update the specified collection translation",
                "tags": [
                    "Collection Translations",
                    "CollectionTranslation"
                ],
                "parameters": [
                    {
                        "name": "collectionTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The collection translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCollectionTranslationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`CollectionTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CollectionTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "collection-translation.destroy",
                "summary": "Remove the specified collection translation",
                "tags": [
                    "Collection Translations",
                    "CollectionTranslation"
                ],
                "parameters": [
                    {
                        "name": "collectionTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The collection translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/collection-translation": {
            "get": {
                "operationId": "collection-translation.index",
                "summary": "Display a listing of collection translations",
                "tags": [
                    "Collection Translations",
                    "CollectionTranslation"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "collection_id",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "language_id",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "minLength": 3,
                            "maxLength": 3
                        }
                    },
                    {
                        "name": "context_id",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "default_context",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `CollectionTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CollectionTranslationResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "post": {
                "operationId": "collection-translation.store",
                "summary": "Store a newly created collection translation",
                "tags": [
                    "Collection Translations",
                    "CollectionTranslation"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreCollectionTranslationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`CollectionTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CollectionTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/collection/{collection}/images": {
            "get": {
                "operationId": "collection.images.index",
                "summary": "Display a listing of collection images for a specific collection",
                "tags": [
                    "CollectionImage"
                ],
                "parameters": [
                    {
                        "name": "collection",
                        "in": "path",
                        "required": true,
                        "description": "The collection ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `CollectionImageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CollectionImageResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "post": {
                "operationId": "collection.images.store",
                "summary": "Store a newly created collection image",
                "tags": [
                    "CollectionImage"
                ],
                "parameters": [
                    {
                        "name": "collection",
                        "in": "path",
                        "required": true,
                        "description": "The collection ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreCollectionImageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`CollectionImageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CollectionImageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/collection-image/{collectionImage}/download": {
            "get": {
                "operationId": "collection-image.download",
                "summary": "Returns the file to the caller",
                "tags": [
                    "CollectionImage"
                ],
                "parameters": [
                    {
                        "name": "collectionImage",
                        "in": "path",
                        "required": true,
                        "description": "The collection image ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/collection-image/{collectionImage}/view": {
            "get": {
                "operationId": "collection-image.view",
                "summary": "Returns the image file for direct viewing (e.g., for use in <img> src attribute)",
                "tags": [
                    "CollectionImage"
                ],
                "parameters": [
                    {
                        "name": "collectionImage",
                        "in": "path",
                        "required": true,
                        "description": "The collection image ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/collection-image/{collectionImage}": {
            "get": {
                "operationId": "collection-image.show",
                "summary": "Display the specified collection image",
                "tags": [
                    "CollectionImage"
                ],
                "parameters": [
                    {
                        "name": "collectionImage",
                        "in": "path",
                        "required": true,
                        "description": "The collection image ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`CollectionImageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CollectionImageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "patch": {
                "operationId": "collection-image.update",
                "summary": "Update the specified collection image",
                "tags": [
                    "CollectionImage"
                ],
                "parameters": [
                    {
                        "name": "collectionImage",
                        "in": "path",
                        "required": true,
                        "description": "The collection image ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCollectionImageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`CollectionImageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CollectionImageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "put": {
                "operationId": "collectionImage.update_2",
                "summary": "Update the specified collection image",
                "tags": [
                    "CollectionImage"
                ],
                "parameters": [
                    {
                        "name": "collectionImage",
                        "in": "path",
                        "required": true,
                        "description": "The collection image ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCollectionImageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`CollectionImageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CollectionImageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "collection-image.destroy",
                "summary": "Remove the specified collection image",
                "tags": [
                    "CollectionImage"
                ],
                "parameters": [
                    {
                        "name": "collectionImage",
                        "in": "path",
                        "required": true,
                        "description": "The collection image ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/collection/{collection}/attach-image": {
            "post": {
                "operationId": "collection.attachImage",
                "summary": "Attach an available image to a collection",
                "tags": [
                    "CollectionImage"
                ],
                "parameters": [
                    {
                        "name": "collection",
                        "in": "path",
                        "required": true,
                        "description": "The collection ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AttachFromAvailableCollectionImageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`CollectionImageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CollectionImageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/collection-image/{collectionImage}/move-up": {
            "patch": {
                "operationId": "collection-image.moveUp",
                "summary": "Move collection image up in display order",
                "tags": [
                    "CollectionImage"
                ],
                "parameters": [
                    {
                        "name": "collectionImage",
                        "in": "path",
                        "required": true,
                        "description": "The collection image ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`CollectionImageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CollectionImageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/collection-image/{collectionImage}/move-down": {
            "patch": {
                "operationId": "collection-image.moveDown",
                "summary": "Move collection image down in display order",
                "tags": [
                    "CollectionImage"
                ],
                "parameters": [
                    {
                        "name": "collectionImage",
                        "in": "path",
                        "required": true,
                        "description": "The collection image ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`CollectionImageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CollectionImageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/collection-image/{collectionImage}/tighten-ordering": {
            "patch": {
                "operationId": "collection-image.tightenOrdering",
                "summary": "Tighten ordering for all images of the collection",
                "tags": [
                    "CollectionImage"
                ],
                "parameters": [
                    {
                        "name": "collectionImage",
                        "in": "path",
                        "required": true,
                        "description": "The collection image ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`OperationSuccessResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/OperationSuccessResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/collection-image/{collectionImage}/detach": {
            "post": {
                "operationId": "collection-image.detach",
                "summary": "Detach a collection image and convert it back to available image",
                "tags": [
                    "CollectionImage"
                ],
                "parameters": [
                    {
                        "name": "collectionImage",
                        "in": "path",
                        "required": true,
                        "description": "The collection image ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`OperationSuccessResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/OperationSuccessResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/contact/{contact}": {
            "get": {
                "operationId": "contact.show",
                "summary": "Display the specified contact",
                "tags": [
                    "Contact"
                ],
                "parameters": [
                    {
                        "name": "contact",
                        "in": "path",
                        "required": true,
                        "description": "The contact ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`ContactResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ContactResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "patch": {
                "operationId": "contact.update",
                "summary": "Update the specified contact",
                "tags": [
                    "Contact"
                ],
                "parameters": [
                    {
                        "name": "contact",
                        "in": "path",
                        "required": true,
                        "description": "The contact ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateContactRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ContactResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ContactResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "put": {
                "operationId": "contact.update_2",
                "summary": "Update the specified contact",
                "tags": [
                    "Contact"
                ],
                "parameters": [
                    {
                        "name": "contact",
                        "in": "path",
                        "required": true,
                        "description": "The contact ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateContactRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ContactResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ContactResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "contact.destroy",
                "summary": "Remove the specified contact",
                "tags": [
                    "Contact"
                ],
                "parameters": [
                    {
                        "name": "contact",
                        "in": "path",
                        "required": true,
                        "description": "The contact ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/contact": {
            "get": {
                "operationId": "contact.index",
                "summary": "Display a listing of contacts",
                "tags": [
                    "Contact"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `ContactResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ContactResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "post": {
                "operationId": "contact.store",
                "summary": "Store a newly created contact",
                "tags": [
                    "Contact"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreContactRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "`ContactResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ContactResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/contact-translation/{contactTranslation}": {
            "get": {
                "operationId": "contact-translation.show",
                "summary": "Display the specified resource",
                "tags": [
                    "ContactTranslation"
                ],
                "parameters": [
                    {
                        "name": "contactTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The contact translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`ContactTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ContactTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "patch": {
                "operationId": "contact-translation.update",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "ContactTranslation"
                ],
                "parameters": [
                    {
                        "name": "contactTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The contact translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateContactTranslationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ContactTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ContactTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "put": {
                "operationId": "contactTranslation.update_2",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "ContactTranslation"
                ],
                "parameters": [
                    {
                        "name": "contactTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The contact translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateContactTranslationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ContactTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ContactTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "contact-translation.destroy",
                "summary": "Remove the specified resource from storage",
                "tags": [
                    "ContactTranslation"
                ],
                "parameters": [
                    {
                        "name": "contactTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The contact translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/contact-translation": {
            "get": {
                "operationId": "contact-translation.index",
                "summary": "Display a listing of the resource",
                "tags": [
                    "ContactTranslation"
                ],
                "responses": {
                    "200": {
                        "description": "Array of `ContactTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ContactTranslationResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "contact-translation.store",
                "summary": "Store a newly created resource in storage",
                "tags": [
                    "ContactTranslation"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreContactTranslationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ContactTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ContactTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/context/default": {
            "get": {
                "operationId": "context.getDefault",
                "summary": "Get the default context",
                "tags": [
                    "Context"
                ],
                "responses": {
                    "200": {
                        "description": "`ContextResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ContextResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "context.clearDefault",
                "summary": "Clear the default flag from any context",
                "tags": [
                    "Context"
                ],
                "responses": {
                    "200": {
                        "description": "`MessageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/MessageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/context/{context}": {
            "get": {
                "operationId": "context.show",
                "summary": "Display the specified resource",
                "tags": [
                    "Context"
                ],
                "parameters": [
                    {
                        "name": "context",
                        "in": "path",
                        "required": true,
                        "description": "The context ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`ContextResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ContextResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "patch": {
                "operationId": "context.update",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "Context"
                ],
                "parameters": [
                    {
                        "name": "context",
                        "in": "path",
                        "required": true,
                        "description": "The context ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateContextRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ContextResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ContextResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "put": {
                "operationId": "context.update_2",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "Context"
                ],
                "parameters": [
                    {
                        "name": "context",
                        "in": "path",
                        "required": true,
                        "description": "The context ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateContextRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ContextResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ContextResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "context.destroy",
                "summary": "Remove the specified resource from storage",
                "tags": [
                    "Context"
                ],
                "parameters": [
                    {
                        "name": "context",
                        "in": "path",
                        "required": true,
                        "description": "The context ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/context": {
            "get": {
                "operationId": "context.index",
                "summary": "Display a listing of the resource",
                "tags": [
                    "Context"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `ContextResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ContextResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "post": {
                "operationId": "context.store",
                "summary": "Store a newly created resource in storage",
                "tags": [
                    "Context"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreContextRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ContextResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ContextResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/context/{context}/default": {
            "patch": {
                "operationId": "context.setDefault",
                "summary": "Set or unset a context as the default one",
                "tags": [
                    "Context"
                ],
                "parameters": [
                    {
                        "name": "context",
                        "in": "path",
                        "required": true,
                        "description": "The context ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetDefaultContextRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ContextResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ContextResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/country/{country}": {
            "get": {
                "operationId": "country.show",
                "summary": "Display the specified resource",
                "tags": [
                    "Country"
                ],
                "parameters": [
                    {
                        "name": "country",
                        "in": "path",
                        "required": true,
                        "description": "The country ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`CountryResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CountryResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "patch": {
                "operationId": "country.update",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "Country"
                ],
                "parameters": [
                    {
                        "name": "country",
                        "in": "path",
                        "required": true,
                        "description": "The country ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCountryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`CountryResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CountryResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "put": {
                "operationId": "country.update_2",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "Country"
                ],
                "parameters": [
                    {
                        "name": "country",
                        "in": "path",
                        "required": true,
                        "description": "The country ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCountryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`CountryResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CountryResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "country.destroy",
                "summary": "Remove the specified resource from storage",
                "tags": [
                    "Country"
                ],
                "parameters": [
                    {
                        "name": "country",
                        "in": "path",
                        "required": true,
                        "description": "The country ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/country": {
            "get": {
                "operationId": "country.index",
                "summary": "Display a listing of the resource",
                "tags": [
                    "Country"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `CountryResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CountryResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "post": {
                "operationId": "country.store",
                "summary": "Store a newly created resource in storage",
                "tags": [
                    "Country"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreCountryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`CountryResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CountryResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/glossary/{glossary}": {
            "get": {
                "operationId": "glossary.show",
                "summary": "Display the specified resource",
                "tags": [
                    "Glossary"
                ],
                "parameters": [
                    {
                        "name": "glossary",
                        "in": "path",
                        "required": true,
                        "description": "The glossary ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`GlossaryResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/GlossaryResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "patch": {
                "operationId": "glossary.update",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "Glossary"
                ],
                "parameters": [
                    {
                        "name": "glossary",
                        "in": "path",
                        "required": true,
                        "description": "The glossary ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateGlossaryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`GlossaryResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/GlossaryResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "put": {
                "operationId": "glossary.update_2",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "Glossary"
                ],
                "parameters": [
                    {
                        "name": "glossary",
                        "in": "path",
                        "required": true,
                        "description": "The glossary ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateGlossaryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`GlossaryResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/GlossaryResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "glossary.destroy",
                "summary": "Remove the specified resource from storage",
                "tags": [
                    "Glossary"
                ],
                "parameters": [
                    {
                        "name": "glossary",
                        "in": "path",
                        "required": true,
                        "description": "The glossary ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/glossary": {
            "get": {
                "operationId": "glossary.index",
                "summary": "Display a listing of the resource",
                "tags": [
                    "Glossary"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `GlossaryResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/GlossaryResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "post": {
                "operationId": "glossary.store",
                "summary": "Store a newly created resource in storage",
                "tags": [
                    "Glossary"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreGlossaryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`GlossaryResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/GlossaryResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/glossary/{glossary}/attach-synonym": {
            "post": {
                "operationId": "glossary.attachSynonym",
                "summary": "Attach a synonym to the glossary entry",
                "tags": [
                    "Glossary"
                ],
                "parameters": [
                    {
                        "name": "glossary",
                        "in": "path",
                        "required": true,
                        "description": "The glossary ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AttachGlossarySynonymRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`GlossaryResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/GlossaryResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/glossary/{glossary}/detach-synonym": {
            "delete": {
                "operationId": "glossary.detachSynonym",
                "summary": "Detach a synonym from the glossary entry",
                "tags": [
                    "Glossary"
                ],
                "parameters": [
                    {
                        "name": "glossary",
                        "in": "path",
                        "required": true,
                        "description": "The glossary ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "synonym_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`GlossaryResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/GlossaryResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/glossary-spelling/{glossarySpelling}": {
            "get": {
                "operationId": "glossary-spelling.show",
                "summary": "Display the specified resource",
                "tags": [
                    "GlossarySpelling"
                ],
                "parameters": [
                    {
                        "name": "glossarySpelling",
                        "in": "path",
                        "required": true,
                        "description": "The glossary spelling ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`GlossarySpellingResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/GlossarySpellingResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "patch": {
                "operationId": "glossary-spelling.update",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "GlossarySpelling"
                ],
                "parameters": [
                    {
                        "name": "glossarySpelling",
                        "in": "path",
                        "required": true,
                        "description": "The glossary spelling ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateGlossarySpellingRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`GlossarySpellingResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/GlossarySpellingResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "put": {
                "operationId": "glossarySpelling.update_2",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "GlossarySpelling"
                ],
                "parameters": [
                    {
                        "name": "glossarySpelling",
                        "in": "path",
                        "required": true,
                        "description": "The glossary spelling ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateGlossarySpellingRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`GlossarySpellingResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/GlossarySpellingResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "glossary-spelling.destroy",
                "summary": "Remove the specified resource from storage",
                "tags": [
                    "GlossarySpelling"
                ],
                "parameters": [
                    {
                        "name": "glossarySpelling",
                        "in": "path",
                        "required": true,
                        "description": "The glossary spelling ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/glossary-spelling": {
            "get": {
                "operationId": "glossary-spelling.index",
                "summary": "Display a listing of the resource",
                "tags": [
                    "GlossarySpelling"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `GlossarySpellingResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/GlossarySpellingResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "post": {
                "operationId": "glossary-spelling.store",
                "summary": "Store a newly created resource in storage",
                "tags": [
                    "GlossarySpelling"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreGlossarySpellingRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`GlossarySpellingResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/GlossarySpellingResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/glossary-translation/{glossaryTranslation}": {
            "get": {
                "operationId": "glossary-translation.show",
                "summary": "Display the specified resource",
                "tags": [
                    "GlossaryTranslation"
                ],
                "parameters": [
                    {
                        "name": "glossaryTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The glossary translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`GlossaryTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/GlossaryTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "patch": {
                "operationId": "glossary-translation.update",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "GlossaryTranslation"
                ],
                "parameters": [
                    {
                        "name": "glossaryTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The glossary translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateGlossaryTranslationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`GlossaryTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/GlossaryTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "put": {
                "operationId": "glossaryTranslation.update_2",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "GlossaryTranslation"
                ],
                "parameters": [
                    {
                        "name": "glossaryTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The glossary translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateGlossaryTranslationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`GlossaryTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/GlossaryTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "glossary-translation.destroy",
                "summary": "Remove the specified resource from storage",
                "tags": [
                    "GlossaryTranslation"
                ],
                "parameters": [
                    {
                        "name": "glossaryTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The glossary translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/glossary-translation": {
            "get": {
                "operationId": "glossary-translation.index",
                "summary": "Display a listing of the resource",
                "tags": [
                    "GlossaryTranslation"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `GlossaryTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/GlossaryTranslationResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "post": {
                "operationId": "glossary-translation.store",
                "summary": "Store a newly created resource in storage",
                "tags": [
                    "GlossaryTranslation"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreGlossaryTranslationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`GlossaryTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/GlossaryTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/image-upload/{id}/status": {
            "get": {
                "operationId": "image-upload.status",
                "description": "Returns the processing status. If processing is complete, returns the AvailableImage details.\nIf the ImageUpload no longer exists, check if an AvailableImage exists with the same ID.",
                "summary": "Get the processing status of an image upload",
                "tags": [
                    "ImageUpload"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Neither exists - this could be an error state or the resource was never created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "available_image": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "available_image"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "`ImageUploadStatusResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ImageUploadStatusResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/image-upload/{imageUpload}": {
            "get": {
                "operationId": "image-upload.show",
                "summary": "Display the specified resource",
                "tags": [
                    "ImageUpload"
                ],
                "parameters": [
                    {
                        "name": "imageUpload",
                        "in": "path",
                        "required": true,
                        "description": "The image upload ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`ImageUploadResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ImageUploadResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "image-upload.destroy",
                "summary": "Remove the specified resource from storage",
                "tags": [
                    "ImageUpload"
                ],
                "parameters": [
                    {
                        "name": "imageUpload",
                        "in": "path",
                        "required": true,
                        "description": "The image upload ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/image-upload": {
            "get": {
                "operationId": "image-upload.index",
                "summary": "Display a listing of the resource",
                "tags": [
                    "ImageUpload"
                ],
                "responses": {
                    "200": {
                        "description": "Array of `ImageUploadResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ImageUploadResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "image-upload.store",
                "summary": "Store a newly created resource in storage",
                "tags": [
                    "ImageUpload"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreImageUploadRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ImageUploadResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ImageUploadResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/info": {
            "get": {
                "operationId": "info.index",
                "description": "Returns basic application information including:\n- Application name and version\n- Health check status for key services\n- Timestamp of the response",
                "summary": "Get application information including version and health status",
                "tags": [
                    "Info"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "operationId": "info.health",
                "description": "Lightweight endpoint for health monitoring that returns\nonly the essential health status information.",
                "summary": "Get only the health check status",
                "tags": [
                    "Info"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/version": {
            "get": {
                "operationId": "info.version",
                "description": "Simple endpoint that returns just the version information\nfor deployment tracking and API compatibility checks.",
                "summary": "Get application version information only",
                "tags": [
                    "Info"
                ],
                "responses": {
                    "200": {
                        "description": "Fallback to CI/CD structure with default/null values\n\n\n\n`VersionResource`\n\n`VersionResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/VersionResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/item/for-tag/{tag}": {
            "get": {
                "operationId": "item.forTag",
                "summary": "Get items for a specific tag",
                "tags": [
                    "Item"
                ],
                "parameters": [
                    {
                        "name": "tag",
                        "in": "path",
                        "required": true,
                        "description": "The tag ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `ItemResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ItemResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/item/with-all-tags": {
            "post": {
                "operationId": "item.withAllTags",
                "summary": "Get items that have ALL of the specified tags (AND condition)",
                "tags": [
                    "Item"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WithAllTagsItemRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Array of `ItemResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ItemResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/item/with-any-tags": {
            "post": {
                "operationId": "item.withAnyTags",
                "summary": "Get items that have ANY of the specified tags (OR condition)",
                "tags": [
                    "Item"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WithAnyTagsItemRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Array of `ItemResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ItemResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/item/type/{type}": {
            "get": {
                "operationId": "item.byType",
                "summary": "Get items by type",
                "tags": [
                    "Item"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "object",
                                "monument",
                                "detail",
                                "picture"
                            ]
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `ItemResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ItemResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/item/parents": {
            "get": {
                "operationId": "item.parents",
                "summary": "Get parent items (items with no parent)",
                "tags": [
                    "Item"
                ],
                "parameters": [
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `ItemResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ItemResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/item/children": {
            "get": {
                "operationId": "item.children",
                "summary": "Get child items (items with a parent)",
                "tags": [
                    "Item"
                ],
                "parameters": [
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `ItemResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ItemResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/item/{item}": {
            "get": {
                "operationId": "item.show",
                "summary": "Display the specified resource",
                "tags": [
                    "Item"
                ],
                "parameters": [
                    {
                        "name": "item",
                        "in": "path",
                        "required": true,
                        "description": "The item ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`ItemResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ItemResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "patch": {
                "operationId": "item.update",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "Item"
                ],
                "parameters": [
                    {
                        "name": "item",
                        "in": "path",
                        "required": true,
                        "description": "The item ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateItemRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ItemResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ItemResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "put": {
                "operationId": "item.update_2",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "Item"
                ],
                "parameters": [
                    {
                        "name": "item",
                        "in": "path",
                        "required": true,
                        "description": "The item ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateItemRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ItemResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ItemResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "item.destroy",
                "summary": "Remove the specified resource from storage",
                "tags": [
                    "Item"
                ],
                "parameters": [
                    {
                        "name": "item",
                        "in": "path",
                        "required": true,
                        "description": "The item ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/item": {
            "get": {
                "operationId": "item.index",
                "summary": "Display a listing of the resource",
                "tags": [
                    "Item"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `ItemResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ItemResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "post": {
                "operationId": "item.store",
                "summary": "Store a newly created resource in storage",
                "tags": [
                    "Item"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreItemRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ItemResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ItemResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/item/{item}/attach-tag": {
            "post": {
                "operationId": "item.attachTag",
                "summary": "Attach a single tag to an item",
                "tags": [
                    "Item"
                ],
                "parameters": [
                    {
                        "name": "item",
                        "in": "path",
                        "required": true,
                        "description": "The item ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AttachTagItemRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ItemResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ItemResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/item/{item}/attach-tags": {
            "post": {
                "operationId": "item.attachTags",
                "summary": "Attach multiple tags to an item",
                "tags": [
                    "Item"
                ],
                "parameters": [
                    {
                        "name": "item",
                        "in": "path",
                        "required": true,
                        "description": "The item ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AttachTagsItemRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ItemResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ItemResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/item/{item}/tags": {
            "patch": {
                "operationId": "item.updateTags",
                "summary": "Update the tags associated with an item.\nThis endpoint handles attaching and/or detaching tags from an item using a single operation.\nDesigned for granular tag management, allowing callers to perform specific tag attach/detach\noperations without requiring a full item update",
                "tags": [
                    "Item"
                ],
                "parameters": [
                    {
                        "name": "item",
                        "in": "path",
                        "required": true,
                        "description": "- The item to update tags for",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTagsItemRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ItemResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ItemResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/item/{item}/detach-tag": {
            "delete": {
                "operationId": "item.detachTag",
                "summary": "Detach a single tag from an item",
                "tags": [
                    "Item"
                ],
                "parameters": [
                    {
                        "name": "item",
                        "in": "path",
                        "required": true,
                        "description": "The item ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "tag_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`ItemResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ItemResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/item/{item}/detach-tags": {
            "delete": {
                "operationId": "item.detachTags",
                "summary": "Detach multiple tags from an item",
                "tags": [
                    "Item"
                ],
                "parameters": [
                    {
                        "name": "item",
                        "in": "path",
                        "required": true,
                        "description": "The item ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "tag_ids[]",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`ItemResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ItemResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/item-translation/{itemTranslation}": {
            "get": {
                "operationId": "item-translation.show",
                "summary": "Display the specified item translation",
                "tags": [
                    "Item Translations",
                    "ItemTranslation"
                ],
                "parameters": [
                    {
                        "name": "itemTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The item translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`ItemTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ItemTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "patch": {
                "operationId": "item-translation.update",
                "summary": "Update the specified item translation",
                "tags": [
                    "Item Translations",
                    "ItemTranslation"
                ],
                "parameters": [
                    {
                        "name": "itemTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The item translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateItemTranslationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ItemTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ItemTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "put": {
                "operationId": "itemTranslation.update_2",
                "summary": "Update the specified item translation",
                "tags": [
                    "Item Translations",
                    "ItemTranslation"
                ],
                "parameters": [
                    {
                        "name": "itemTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The item translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateItemTranslationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ItemTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ItemTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "item-translation.destroy",
                "summary": "Remove the specified item translation",
                "tags": [
                    "Item Translations",
                    "ItemTranslation"
                ],
                "parameters": [
                    {
                        "name": "itemTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The item translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/item-translation": {
            "get": {
                "operationId": "item-translation.index",
                "summary": "Display a listing of item translations",
                "tags": [
                    "Item Translations",
                    "ItemTranslation"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "item_id",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "language_id",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "minLength": 3,
                            "maxLength": 3
                        }
                    },
                    {
                        "name": "context_id",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "default_context",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `ItemTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ItemTranslationResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "post": {
                "operationId": "item-translation.store",
                "summary": "Store a newly created item translation",
                "tags": [
                    "Item Translations",
                    "ItemTranslation"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreItemTranslationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ItemTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ItemTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/item/{item}/images": {
            "get": {
                "operationId": "item.images.index",
                "summary": "Display a listing of item images for a specific item",
                "tags": [
                    "ItemImage"
                ],
                "parameters": [
                    {
                        "name": "item",
                        "in": "path",
                        "required": true,
                        "description": "The item ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `ItemImageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ItemImageResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "post": {
                "operationId": "item.images.store",
                "summary": "Store a newly created item image",
                "tags": [
                    "ItemImage"
                ],
                "parameters": [
                    {
                        "name": "item",
                        "in": "path",
                        "required": true,
                        "description": "The item ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreItemImageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ItemImageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ItemImageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/item-image/{itemImage}/download": {
            "get": {
                "operationId": "item-image.download",
                "summary": "Returns the file to the caller",
                "tags": [
                    "ItemImage"
                ],
                "parameters": [
                    {
                        "name": "itemImage",
                        "in": "path",
                        "required": true,
                        "description": "The item image ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/item-image/{itemImage}/view": {
            "get": {
                "operationId": "item-image.view",
                "summary": "Returns the image file for direct viewing (e.g., for use in <img> src attribute)",
                "tags": [
                    "ItemImage"
                ],
                "parameters": [
                    {
                        "name": "itemImage",
                        "in": "path",
                        "required": true,
                        "description": "The item image ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/item-image/{itemImage}": {
            "get": {
                "operationId": "item-image.show",
                "summary": "Display the specified item image",
                "tags": [
                    "ItemImage"
                ],
                "parameters": [
                    {
                        "name": "itemImage",
                        "in": "path",
                        "required": true,
                        "description": "The item image ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`ItemImageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ItemImageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "patch": {
                "operationId": "item-image.update",
                "summary": "Update the specified item image",
                "tags": [
                    "ItemImage"
                ],
                "parameters": [
                    {
                        "name": "itemImage",
                        "in": "path",
                        "required": true,
                        "description": "The item image ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateItemImageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ItemImageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ItemImageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "put": {
                "operationId": "itemImage.update_2",
                "summary": "Update the specified item image",
                "tags": [
                    "ItemImage"
                ],
                "parameters": [
                    {
                        "name": "itemImage",
                        "in": "path",
                        "required": true,
                        "description": "The item image ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateItemImageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ItemImageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ItemImageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "item-image.destroy",
                "summary": "Remove the specified item image",
                "tags": [
                    "ItemImage"
                ],
                "parameters": [
                    {
                        "name": "itemImage",
                        "in": "path",
                        "required": true,
                        "description": "The item image ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/item/{item}/attach-image": {
            "post": {
                "operationId": "item.attachImage",
                "summary": "Attach an available image to an item",
                "tags": [
                    "ItemImage"
                ],
                "parameters": [
                    {
                        "name": "item",
                        "in": "path",
                        "required": true,
                        "description": "The item ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AttachFromAvailableItemImageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ItemImageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ItemImageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/item-image/{itemImage}/move-up": {
            "patch": {
                "operationId": "item-image.moveUp",
                "summary": "Move item image up in display order",
                "tags": [
                    "ItemImage"
                ],
                "parameters": [
                    {
                        "name": "itemImage",
                        "in": "path",
                        "required": true,
                        "description": "The item image ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`ItemImageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ItemImageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/item-image/{itemImage}/move-down": {
            "patch": {
                "operationId": "item-image.moveDown",
                "summary": "Move item image down in display order",
                "tags": [
                    "ItemImage"
                ],
                "parameters": [
                    {
                        "name": "itemImage",
                        "in": "path",
                        "required": true,
                        "description": "The item image ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`ItemImageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ItemImageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/item-image/{itemImage}/tighten-ordering": {
            "patch": {
                "operationId": "item-image.tightenOrdering",
                "summary": "Tighten ordering for all images of the item",
                "tags": [
                    "ItemImage"
                ],
                "parameters": [
                    {
                        "name": "itemImage",
                        "in": "path",
                        "required": true,
                        "description": "The item image ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`OperationSuccessResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/OperationSuccessResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/item-image/{itemImage}/detach": {
            "post": {
                "operationId": "item-image.detach",
                "summary": "Detach an item image and convert it back to available image",
                "tags": [
                    "ItemImage"
                ],
                "parameters": [
                    {
                        "name": "itemImage",
                        "in": "path",
                        "required": true,
                        "description": "The item image ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`OperationSuccessResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/OperationSuccessResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/language/default": {
            "get": {
                "operationId": "language.getDefault",
                "summary": "Get the default Language",
                "tags": [
                    "Language"
                ],
                "responses": {
                    "200": {
                        "description": "`LanguageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LanguageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "language.clearDefault",
                "summary": "Clear the default flag from any language",
                "tags": [
                    "Language"
                ],
                "responses": {
                    "200": {
                        "description": "`MessageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/MessageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/language/english": {
            "get": {
                "operationId": "language.getEnglish",
                "summary": "Get the english Language",
                "tags": [
                    "Language"
                ],
                "responses": {
                    "200": {
                        "description": "`LanguageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LanguageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/language/{language}": {
            "get": {
                "operationId": "language.show",
                "summary": "Display the specified resource",
                "tags": [
                    "Language"
                ],
                "parameters": [
                    {
                        "name": "language",
                        "in": "path",
                        "required": true,
                        "description": "The language ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`LanguageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LanguageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "patch": {
                "operationId": "language.update",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "Language"
                ],
                "parameters": [
                    {
                        "name": "language",
                        "in": "path",
                        "required": true,
                        "description": "The language ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateLanguageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`LanguageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LanguageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "put": {
                "operationId": "language.update_2",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "Language"
                ],
                "parameters": [
                    {
                        "name": "language",
                        "in": "path",
                        "required": true,
                        "description": "The language ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateLanguageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`LanguageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LanguageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "language.destroy",
                "summary": "Remove the specified resource from storage",
                "tags": [
                    "Language"
                ],
                "parameters": [
                    {
                        "name": "language",
                        "in": "path",
                        "required": true,
                        "description": "The language ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/language": {
            "get": {
                "operationId": "language.index",
                "summary": "Display a listing of the resource",
                "tags": [
                    "Language"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `LanguageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/LanguageResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "post": {
                "operationId": "language.store",
                "summary": "Store a newly created resource in storage",
                "tags": [
                    "Language"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreLanguageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`LanguageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LanguageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/language/{language}/default": {
            "patch": {
                "operationId": "language.setDefault",
                "summary": "Set or unset a Language as the default one",
                "tags": [
                    "Language"
                ],
                "parameters": [
                    {
                        "name": "language",
                        "in": "path",
                        "required": true,
                        "description": "The language ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetDefaultLanguageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`LanguageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LanguageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/location/{location}": {
            "get": {
                "operationId": "location.show",
                "summary": "Display the specified location",
                "tags": [
                    "Location"
                ],
                "parameters": [
                    {
                        "name": "location",
                        "in": "path",
                        "required": true,
                        "description": "The location ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`LocationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LocationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "patch": {
                "operationId": "location.update",
                "summary": "Update the specified location",
                "tags": [
                    "Location"
                ],
                "parameters": [
                    {
                        "name": "location",
                        "in": "path",
                        "required": true,
                        "description": "The location ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateLocationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`LocationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LocationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "put": {
                "operationId": "location.update_2",
                "summary": "Update the specified location",
                "tags": [
                    "Location"
                ],
                "parameters": [
                    {
                        "name": "location",
                        "in": "path",
                        "required": true,
                        "description": "The location ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateLocationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`LocationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LocationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "location.destroy",
                "summary": "Remove the specified location",
                "tags": [
                    "Location"
                ],
                "parameters": [
                    {
                        "name": "location",
                        "in": "path",
                        "required": true,
                        "description": "The location ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/location": {
            "get": {
                "operationId": "location.index",
                "summary": "Display a listing of locations",
                "tags": [
                    "Location"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `LocationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/LocationResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "post": {
                "operationId": "location.store",
                "summary": "Store a newly created location",
                "tags": [
                    "Location"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreLocationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "`LocationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LocationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/location-translation/{locationTranslation}": {
            "get": {
                "operationId": "location-translation.show",
                "summary": "Display the specified resource",
                "tags": [
                    "LocationTranslation"
                ],
                "parameters": [
                    {
                        "name": "locationTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The location translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`LocationTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LocationTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "patch": {
                "operationId": "location-translation.update",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "LocationTranslation"
                ],
                "parameters": [
                    {
                        "name": "locationTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The location translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateLocationTranslationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`LocationTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LocationTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "put": {
                "operationId": "locationTranslation.update_2",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "LocationTranslation"
                ],
                "parameters": [
                    {
                        "name": "locationTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The location translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateLocationTranslationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`LocationTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LocationTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "location-translation.destroy",
                "summary": "Remove the specified resource from storage",
                "tags": [
                    "LocationTranslation"
                ],
                "parameters": [
                    {
                        "name": "locationTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The location translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/location-translation": {
            "get": {
                "operationId": "location-translation.index",
                "summary": "Display a listing of the resource",
                "tags": [
                    "LocationTranslation"
                ],
                "responses": {
                    "200": {
                        "description": "Array of `LocationTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/LocationTranslationResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "location-translation.store",
                "summary": "Store a newly created resource in storage",
                "tags": [
                    "LocationTranslation"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreLocationTranslationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`LocationTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LocationTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/markdown/to-html": {
            "post": {
                "operationId": "markdown.toHtml",
                "description": "Converts Markdown formatted text to HTML for display purposes.\nThe input is validated to ensure it contains safe Markdown content.",
                "summary": "Convert Markdown to HTML",
                "tags": [
                    "Markdown\n\nAPI endpoints for Markdown processing and conversion",
                    "Markdown"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "markdown": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "markdown"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                },
                "security": []
            }
        },
        "/markdown/from-html": {
            "post": {
                "operationId": "markdown.fromHtml",
                "description": "Converts HTML content to Markdown format with controlled tag support.\nOnly allowed HTML tags will be processed, others will be stripped.",
                "summary": "Convert HTML to Markdown",
                "tags": [
                    "Markdown\n\nAPI endpoints for Markdown processing and conversion",
                    "Markdown"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "html": {
                                        "type": "string",
                                        "maxLength": 65535
                                    }
                                },
                                "required": [
                                    "html"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/markdown/validate": {
            "post": {
                "operationId": "markdown.validate",
                "description": "Validates Markdown content without converting it, useful for form validation.",
                "summary": "Validate Markdown content",
                "tags": [
                    "Markdown\n\nAPI endpoints for Markdown processing and conversion",
                    "Markdown"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "markdown": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "markdown"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/markdown/preview": {
            "post": {
                "operationId": "markdown.preview",
                "description": "Generates an HTML preview of Markdown content for display purposes.\nThis is essentially the same as markdownToHtml but with a different semantic meaning.",
                "summary": "Preview Markdown content",
                "tags": [
                    "Markdown\n\nAPI endpoints for Markdown processing and conversion",
                    "Markdown"
                ],
                "responses": {
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data",
                                        "error",
                                        "errors"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "`ConversionResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConversionResource"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/markdown/is-markdown": {
            "post": {
                "operationId": "markdown.isMarkdown",
                "description": "Analyzes content to determine if it appears to contain Markdown formatting.\nUseful for automatic detection of content type.",
                "summary": "Check if content is Markdown",
                "tags": [
                    "Markdown\n\nAPI endpoints for Markdown processing and conversion",
                    "Markdown"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "content": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "content"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/markdown/allowed-elements": {
            "get": {
                "operationId": "markdown.allowedElements",
                "description": "Returns the list of HTML tags that are supported for HTML-to-Markdown conversion.",
                "summary": "Get allowed HTML tags",
                "tags": [
                    "Markdown\n\nAPI endpoints for Markdown processing and conversion",
                    "Markdown"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/mobile/acquire-token": {
            "post": {
                "operationId": "token.acquire",
                "summary": "Acquire a token for the user",
                "tags": [
                    "MobileAppAuthentication"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AcquireTokenMobileAppAuthenticationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "token",
                                        "user"
                                    ]
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "No 2FA code provided, require 2FA",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "requires_two_factor": {
                                            "type": "string"
                                        },
                                        "available_methods": {
                                            "type": "string"
                                        },
                                        "primary_method": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "requires_two_factor",
                                        "available_methods",
                                        "primary_method",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                },
                "security": []
            }
        },
        "/mobile/verify-two-factor": {
            "post": {
                "operationId": "token.verify_two_factor",
                "summary": "Verify two-factor authentication and acquire token",
                "tags": [
                    "MobileAppAuthentication"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VerifyTwoFactorMobileAppAuthenticationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "token",
                                        "user"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                },
                "security": []
            }
        },
        "/mobile/two-factor-status": {
            "post": {
                "operationId": "token.two_factor_status",
                "summary": "Get user's 2FA status",
                "tags": [
                    "MobileAppAuthentication"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TwoFactorStatusMobileAppAuthenticationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`TwoFactorStatusResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/TwoFactorStatusResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                },
                "security": []
            }
        },
        "/mobile/wipe": {
            "get": {
                "operationId": "token.wipe",
                "summary": "Revoke all the token for the current user",
                "tags": [
                    "MobileAppAuthentication"
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/partner/{partner}": {
            "get": {
                "operationId": "partner.show",
                "summary": "Display the specified resource",
                "tags": [
                    "Partner"
                ],
                "parameters": [
                    {
                        "name": "partner",
                        "in": "path",
                        "required": true,
                        "description": "The partner ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`PartnerResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PartnerResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "patch": {
                "operationId": "partner.update",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "Partner"
                ],
                "parameters": [
                    {
                        "name": "partner",
                        "in": "path",
                        "required": true,
                        "description": "The partner ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePartnerRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`PartnerResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PartnerResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "put": {
                "operationId": "partner.update_2",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "Partner"
                ],
                "parameters": [
                    {
                        "name": "partner",
                        "in": "path",
                        "required": true,
                        "description": "The partner ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePartnerRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`PartnerResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PartnerResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "partner.destroy",
                "summary": "Remove the specified resource from storage",
                "tags": [
                    "Partner"
                ],
                "parameters": [
                    {
                        "name": "partner",
                        "in": "path",
                        "required": true,
                        "description": "The partner ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/partner": {
            "get": {
                "operationId": "partner.index",
                "summary": "Display a listing of the resource",
                "tags": [
                    "Partner"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `PartnerResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PartnerResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "post": {
                "operationId": "partner.store",
                "summary": "Store a newly created resource in storage",
                "tags": [
                    "Partner"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StorePartnerRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`PartnerResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PartnerResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/partner-image/{partnerImage}": {
            "get": {
                "operationId": "partner-image.show",
                "summary": "Display the specified resource",
                "tags": [
                    "PartnerImage"
                ],
                "parameters": [
                    {
                        "name": "partnerImage",
                        "in": "path",
                        "required": true,
                        "description": "The partner image ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`PartnerImageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PartnerImageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "patch": {
                "operationId": "partner-image.update",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "PartnerImage"
                ],
                "parameters": [
                    {
                        "name": "partnerImage",
                        "in": "path",
                        "required": true,
                        "description": "The partner image ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePartnerImageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`PartnerImageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PartnerImageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "put": {
                "operationId": "partnerImage.update_2",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "PartnerImage"
                ],
                "parameters": [
                    {
                        "name": "partnerImage",
                        "in": "path",
                        "required": true,
                        "description": "The partner image ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePartnerImageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`PartnerImageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PartnerImageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "partner-image.destroy",
                "summary": "Remove the specified resource from storage",
                "tags": [
                    "PartnerImage"
                ],
                "parameters": [
                    {
                        "name": "partnerImage",
                        "in": "path",
                        "required": true,
                        "description": "The partner image ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/partner-image": {
            "get": {
                "operationId": "partner-image.index",
                "summary": "Display a listing of the resource",
                "tags": [
                    "PartnerImage"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `PartnerImageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PartnerImageResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "post": {
                "operationId": "partner-image.store",
                "summary": "Store a newly created resource in storage",
                "tags": [
                    "PartnerImage"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StorePartnerImageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`PartnerImageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PartnerImageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/partner-translation/{partnerTranslation}": {
            "get": {
                "operationId": "partner-translation.show",
                "summary": "Display the specified resource",
                "tags": [
                    "PartnerTranslation"
                ],
                "parameters": [
                    {
                        "name": "partnerTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The partner translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`PartnerTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PartnerTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "patch": {
                "operationId": "partner-translation.update",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "PartnerTranslation"
                ],
                "parameters": [
                    {
                        "name": "partnerTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The partner translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePartnerTranslationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`PartnerTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PartnerTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "put": {
                "operationId": "partnerTranslation.update_2",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "PartnerTranslation"
                ],
                "parameters": [
                    {
                        "name": "partnerTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The partner translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePartnerTranslationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`PartnerTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PartnerTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "partner-translation.destroy",
                "summary": "Remove the specified resource from storage",
                "tags": [
                    "PartnerTranslation"
                ],
                "parameters": [
                    {
                        "name": "partnerTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The partner translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/partner-translation": {
            "get": {
                "operationId": "partner-translation.index",
                "summary": "Display a listing of the resource",
                "tags": [
                    "PartnerTranslation"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `PartnerTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PartnerTranslationResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "post": {
                "operationId": "partner-translation.store",
                "summary": "Store a newly created resource in storage",
                "tags": [
                    "PartnerTranslation"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StorePartnerTranslationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`PartnerTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PartnerTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/partner-translation-image/{partnerTranslationImage}": {
            "get": {
                "operationId": "partner-translation-image.show",
                "summary": "Display the specified resource",
                "tags": [
                    "PartnerTranslationImage"
                ],
                "parameters": [
                    {
                        "name": "partnerTranslationImage",
                        "in": "path",
                        "required": true,
                        "description": "The partner translation image ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`PartnerTranslationImageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PartnerTranslationImageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "patch": {
                "operationId": "partner-translation-image.update",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "PartnerTranslationImage"
                ],
                "parameters": [
                    {
                        "name": "partnerTranslationImage",
                        "in": "path",
                        "required": true,
                        "description": "The partner translation image ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePartnerTranslationImageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`PartnerTranslationImageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PartnerTranslationImageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "put": {
                "operationId": "partnerTranslationImage.update_2",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "PartnerTranslationImage"
                ],
                "parameters": [
                    {
                        "name": "partnerTranslationImage",
                        "in": "path",
                        "required": true,
                        "description": "The partner translation image ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePartnerTranslationImageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`PartnerTranslationImageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PartnerTranslationImageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "partner-translation-image.destroy",
                "summary": "Remove the specified resource from storage",
                "tags": [
                    "PartnerTranslationImage"
                ],
                "parameters": [
                    {
                        "name": "partnerTranslationImage",
                        "in": "path",
                        "required": true,
                        "description": "The partner translation image ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/partner-translation-image": {
            "get": {
                "operationId": "partner-translation-image.index",
                "summary": "Display a listing of the resource",
                "tags": [
                    "PartnerTranslationImage"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `PartnerTranslationImageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PartnerTranslationImageResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "post": {
                "operationId": "partner-translation-image.store",
                "summary": "Store a newly created resource in storage",
                "tags": [
                    "PartnerTranslationImage"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StorePartnerTranslationImageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`PartnerTranslationImageResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PartnerTranslationImageResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/project/enabled": {
            "get": {
                "operationId": "project.enabled",
                "summary": "Get all visible projects.\nThe project becomes \"visible\" when all conditions are matched:\n- is_enabled is true\n- is_launched is true\n- current date >= launch_date",
                "tags": [
                    "Project"
                ],
                "responses": {
                    "200": {
                        "description": "Array of `ProjectResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProjectResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/project/{project}": {
            "get": {
                "operationId": "project.show",
                "summary": "Display the specified resource",
                "tags": [
                    "Project"
                ],
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "required": true,
                        "description": "The project ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`ProjectResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ProjectResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "patch": {
                "operationId": "project.update",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "Project"
                ],
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "required": true,
                        "description": "The project ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProjectRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ProjectResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ProjectResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "put": {
                "operationId": "project.update_2",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "Project"
                ],
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "required": true,
                        "description": "The project ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProjectRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ProjectResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ProjectResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "project.destroy",
                "summary": "Remove the specified resource from storage",
                "tags": [
                    "Project"
                ],
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "required": true,
                        "description": "The project ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/project": {
            "get": {
                "operationId": "project.index",
                "summary": "Display a listing of the resource",
                "tags": [
                    "Project"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `ProjectResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProjectResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "post": {
                "operationId": "project.store",
                "summary": "Store a newly created resource in storage",
                "tags": [
                    "Project"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreProjectRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ProjectResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ProjectResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/project/{project}/launched": {
            "patch": {
                "operationId": "project.setLaunched",
                "summary": "Toggle Launched/not-launched on a project.\nImportant: It is independant from the `launch_date` value. It is an idicator showing that\nthe project is to be considered 'laucnhed' as soon as the launch date it reached",
                "tags": [
                    "Project"
                ],
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "required": true,
                        "description": "The project ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLaunchedProjectRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ProjectResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ProjectResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/project/{project}/enabled": {
            "patch": {
                "operationId": "project.setEnabled",
                "summary": "Toggle Enable/disable on a project",
                "tags": [
                    "Project"
                ],
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "required": true,
                        "description": "The project ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetEnabledProjectRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ProjectResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ProjectResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/province/{province}": {
            "get": {
                "operationId": "province.show",
                "summary": "Display the specified province",
                "tags": [
                    "Province"
                ],
                "parameters": [
                    {
                        "name": "province",
                        "in": "path",
                        "required": true,
                        "description": "The province ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`ProvinceResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ProvinceResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "patch": {
                "operationId": "province.update",
                "summary": "Update the specified province",
                "tags": [
                    "Province"
                ],
                "parameters": [
                    {
                        "name": "province",
                        "in": "path",
                        "required": true,
                        "description": "The province ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProvinceRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ProvinceResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ProvinceResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "put": {
                "operationId": "province.update_2",
                "summary": "Update the specified province",
                "tags": [
                    "Province"
                ],
                "parameters": [
                    {
                        "name": "province",
                        "in": "path",
                        "required": true,
                        "description": "The province ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProvinceRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ProvinceResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ProvinceResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "province.destroy",
                "summary": "Remove the specified province",
                "tags": [
                    "Province"
                ],
                "parameters": [
                    {
                        "name": "province",
                        "in": "path",
                        "required": true,
                        "description": "The province ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/province": {
            "get": {
                "operationId": "province.index",
                "summary": "Display a listing of provinces",
                "tags": [
                    "Province"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `ProvinceResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProvinceResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "post": {
                "operationId": "province.store",
                "summary": "Store a newly created province",
                "tags": [
                    "Province"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreProvinceRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "`ProvinceResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ProvinceResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/province-translation/{provinceTranslation}": {
            "get": {
                "operationId": "province-translation.show",
                "summary": "Display the specified resource",
                "tags": [
                    "ProvinceTranslation"
                ],
                "parameters": [
                    {
                        "name": "provinceTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The province translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`ProvinceTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ProvinceTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "patch": {
                "operationId": "province-translation.update",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "ProvinceTranslation"
                ],
                "parameters": [
                    {
                        "name": "provinceTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The province translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProvinceTranslationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ProvinceTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ProvinceTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "put": {
                "operationId": "provinceTranslation.update_2",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "ProvinceTranslation"
                ],
                "parameters": [
                    {
                        "name": "provinceTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The province translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProvinceTranslationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ProvinceTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ProvinceTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "province-translation.destroy",
                "summary": "Remove the specified resource from storage",
                "tags": [
                    "ProvinceTranslation"
                ],
                "parameters": [
                    {
                        "name": "provinceTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The province translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/province-translation": {
            "get": {
                "operationId": "province-translation.index",
                "summary": "Display a listing of the resource",
                "tags": [
                    "ProvinceTranslation"
                ],
                "responses": {
                    "200": {
                        "description": "Array of `ProvinceTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProvinceTranslationResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "province-translation.store",
                "summary": "Store a newly created resource in storage",
                "tags": [
                    "ProvinceTranslation"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreProvinceTranslationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ProvinceTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ProvinceTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/tag/for-item/{item}": {
            "get": {
                "operationId": "tag.forItem",
                "summary": "Get tags for a specific item",
                "tags": [
                    "Tag"
                ],
                "parameters": [
                    {
                        "name": "item",
                        "in": "path",
                        "required": true,
                        "description": "The item ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `TagResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TagResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/tag/{tag}": {
            "get": {
                "operationId": "tag.show",
                "summary": "Display the specified resource",
                "tags": [
                    "Tag"
                ],
                "parameters": [
                    {
                        "name": "tag",
                        "in": "path",
                        "required": true,
                        "description": "The tag ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`TagResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/TagResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "patch": {
                "operationId": "tag.update",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "Tag"
                ],
                "parameters": [
                    {
                        "name": "tag",
                        "in": "path",
                        "required": true,
                        "description": "The tag ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTagRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`TagResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/TagResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "put": {
                "operationId": "tag.update_2",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "Tag"
                ],
                "parameters": [
                    {
                        "name": "tag",
                        "in": "path",
                        "required": true,
                        "description": "The tag ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTagRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`TagResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/TagResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "tag.destroy",
                "summary": "Remove the specified resource from storage",
                "tags": [
                    "Tag"
                ],
                "parameters": [
                    {
                        "name": "tag",
                        "in": "path",
                        "required": true,
                        "description": "The tag ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/tag": {
            "get": {
                "operationId": "tag.index",
                "summary": "Display a listing of the resource",
                "tags": [
                    "Tag"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `TagResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TagResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "post": {
                "operationId": "tag.store",
                "summary": "Store a newly created resource in storage",
                "tags": [
                    "Tag"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreTagRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`TagResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/TagResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/theme/{theme}": {
            "get": {
                "operationId": "theme.show",
                "summary": "Display the specified resource",
                "tags": [
                    "Theme"
                ],
                "parameters": [
                    {
                        "name": "theme",
                        "in": "path",
                        "required": true,
                        "description": "The theme ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`ThemeResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ThemeResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "patch": {
                "operationId": "theme.update",
                "summary": "Update the specified theme in storage",
                "tags": [
                    "Theme"
                ],
                "parameters": [
                    {
                        "name": "theme",
                        "in": "path",
                        "required": true,
                        "description": "The theme ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateThemeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ThemeResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ThemeResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "put": {
                "operationId": "theme.update_2",
                "summary": "Update the specified theme in storage",
                "tags": [
                    "Theme"
                ],
                "parameters": [
                    {
                        "name": "theme",
                        "in": "path",
                        "required": true,
                        "description": "The theme ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateThemeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ThemeResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ThemeResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "theme.destroy",
                "summary": "Remove the specified theme from storage",
                "tags": [
                    "Theme"
                ],
                "parameters": [
                    {
                        "name": "theme",
                        "in": "path",
                        "required": true,
                        "description": "The theme ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/theme": {
            "get": {
                "operationId": "theme.index",
                "summary": "Display a listing of the resource",
                "tags": [
                    "Theme"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `ThemeResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ThemeResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "post": {
                "operationId": "theme.store",
                "summary": "Store a newly created theme in storage",
                "tags": [
                    "Theme"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreThemeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ThemeResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ThemeResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/theme-translation/{themeTranslation}": {
            "get": {
                "operationId": "theme-translation.show",
                "summary": "Display the specified theme translation",
                "tags": [
                    "Theme Translations",
                    "ThemeTranslation"
                ],
                "parameters": [
                    {
                        "name": "themeTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The theme translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`ThemeTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ThemeTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "patch": {
                "operationId": "theme-translation.update",
                "summary": "Update the specified theme translation",
                "tags": [
                    "Theme Translations",
                    "ThemeTranslation"
                ],
                "parameters": [
                    {
                        "name": "themeTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The theme translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateThemeTranslationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ThemeTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ThemeTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "put": {
                "operationId": "themeTranslation.update_2",
                "summary": "Update the specified theme translation",
                "tags": [
                    "Theme Translations",
                    "ThemeTranslation"
                ],
                "parameters": [
                    {
                        "name": "themeTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The theme translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateThemeTranslationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ThemeTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ThemeTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "theme-translation.destroy",
                "summary": "Remove the specified theme translation",
                "tags": [
                    "Theme Translations",
                    "ThemeTranslation"
                ],
                "parameters": [
                    {
                        "name": "themeTranslation",
                        "in": "path",
                        "required": true,
                        "description": "The theme translation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        204
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/theme-translation": {
            "get": {
                "operationId": "theme-translation.index",
                "summary": "Display a listing of theme translations",
                "tags": [
                    "Theme Translations",
                    "ThemeTranslation"
                ],
                "parameters": [
                    {
                        "name": "theme_id",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "language_id",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "minLength": 3,
                            "maxLength": 3
                        }
                    },
                    {
                        "name": "context_id",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "default_context",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ThemeTranslationResource"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "post": {
                "operationId": "theme-translation.store",
                "summary": "Store a newly created theme translation",
                "tags": [
                    "Theme Translations",
                    "ThemeTranslation"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreThemeTranslationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ThemeTranslationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ThemeTranslationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/user/permissions": {
            "get": {
                "operationId": "user.permissions",
                "description": "Returns a list of permission names that the authenticated user has.\nThis is a read-only endpoint for UI clients to determine what features\nto show to the user.",
                "summary": "Get the authenticated user's permissions",
                "tags": [
                    "UserPermissions"
                ],
                "responses": {
                    "200": {
                        "description": "`UserPermissionsResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/UserPermissionsResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "http": {
                "type": "http",
                "scheme": "bearer"
            }
        },
        "schemas": {
            "AcquireTokenMobileAppAuthenticationRequest": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "type": "string"
                    },
                    "device_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "wipe_tokens": {
                        "type": "boolean"
                    },
                    "two_factor_code": {
                        "type": "string"
                    },
                    "recovery_code": {
                        "type": "string"
                    }
                },
                "required": [
                    "email",
                    "password",
                    "device_name"
                ],
                "title": "AcquireTokenMobileAppAuthenticationRequest"
            },
            "AddressResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "internal_name": {
                        "type": "string",
                        "description": "A name for this resource, for internal use only."
                    },
                    "country_id": {
                        "type": "string",
                        "description": "The country this address belongs to (CountryResource id)"
                    },
                    "translations": {
                        "type": "array",
                        "description": "Translations for this address (AddressTranslationResource[])",
                        "items": {
                            "$ref": "#/components/schemas/AddressTranslationResource"
                        }
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    }
                },
                "required": [
                    "id",
                    "internal_name",
                    "country_id",
                    "created_at",
                    "updated_at"
                ],
                "title": "AddressResource"
            },
            "AddressTranslationResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "address_id": {
                        "type": "string",
                        "description": "The address this translation belongs to (AddressResource id)"
                    },
                    "language_id": {
                        "type": "string",
                        "description": "The language of this translation (LanguageResource id)"
                    },
                    "address": {
                        "type": "string",
                        "description": "The address translation text"
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The description of the address translation"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    }
                },
                "required": [
                    "id",
                    "address_id",
                    "language_id",
                    "address",
                    "description",
                    "created_at",
                    "updated_at"
                ],
                "title": "AddressTranslationResource"
            },
            "ArtistResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the artist"
                    },
                    "place_of_birth": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The place of birth of the artist"
                    },
                    "place_of_death": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The place of death of the artist"
                    },
                    "date_of_birth": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The date of birth of the artist"
                    },
                    "date_of_death": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The date of death of the artist"
                    },
                    "period_of_activity": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The period of activity of the artist"
                    },
                    "internal_name": {
                        "type": "string",
                        "description": "A name for this resource, for internal use only."
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The Id(s) of matching resource in the legacy system (if any)."
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    },
                    "items": {
                        "type": "array",
                        "description": "Items associated with this artist (ItemResource[])",
                        "items": {
                            "$ref": "#/components/schemas/ItemResource"
                        }
                    }
                },
                "required": [
                    "id",
                    "name",
                    "place_of_birth",
                    "place_of_death",
                    "date_of_birth",
                    "date_of_death",
                    "period_of_activity",
                    "internal_name",
                    "backward_compatibility",
                    "created_at",
                    "updated_at"
                ],
                "title": "ArtistResource"
            },
            "AttachFromAvailableCollectionImageRequest": {
                "type": "object",
                "properties": {
                    "available_image_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "alt_text": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "include": {
                        "type": "string"
                    }
                },
                "required": [
                    "available_image_id"
                ],
                "title": "AttachFromAvailableCollectionImageRequest"
            },
            "AttachFromAvailableItemImageRequest": {
                "type": "object",
                "properties": {
                    "available_image_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "alt_text": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "include": {
                        "type": "string"
                    }
                },
                "required": [
                    "available_image_id"
                ],
                "title": "AttachFromAvailableItemImageRequest"
            },
            "AttachGlossarySynonymRequest": {
                "type": "object",
                "properties": {
                    "synonym_id": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "required": [
                    "synonym_id"
                ],
                "title": "AttachGlossarySynonymRequest"
            },
            "AttachItemCollectionRequest": {
                "type": "object",
                "properties": {
                    "item_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "include": {
                        "type": "string"
                    }
                },
                "required": [
                    "item_id"
                ],
                "title": "AttachItemCollectionRequest"
            },
            "AttachItemsCollectionRequest": {
                "type": "object",
                "properties": {
                    "include": {
                        "type": "string"
                    },
                    "item_ids": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "minItems": 1
                    }
                },
                "required": [
                    "item_ids"
                ],
                "title": "AttachItemsCollectionRequest"
            },
            "AttachTagItemRequest": {
                "type": "object",
                "properties": {
                    "tag_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "include": {
                        "type": "string"
                    }
                },
                "required": [
                    "tag_id"
                ],
                "title": "AttachTagItemRequest"
            },
            "AttachTagsItemRequest": {
                "type": "object",
                "properties": {
                    "include": {
                        "type": "string"
                    },
                    "tag_ids": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "minItems": 1
                    }
                },
                "required": [
                    "tag_ids"
                ],
                "title": "AttachTagsItemRequest"
            },
            "AuthorResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the author"
                    },
                    "internal_name": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "A name for this resource, for internal use only."
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The Id(s) of matching resource in the legacy system (if any)."
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "internal_name",
                    "backward_compatibility",
                    "created_at",
                    "updated_at"
                ],
                "title": "AuthorResource"
            },
            "AvailableImageResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "path": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The path to the picture file"
                    },
                    "comment": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "A user defined comment associated with the file"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    }
                },
                "required": [
                    "id",
                    "path",
                    "comment",
                    "created_at",
                    "updated_at"
                ],
                "title": "AvailableImageResource"
            },
            "CollectionImageResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "collection_id": {
                        "type": "string",
                        "description": "The collection this image belongs to"
                    },
                    "path": {
                        "type": "string",
                        "description": "The path to the image file"
                    },
                    "original_name": {
                        "type": "string",
                        "description": "The original filename when uploaded"
                    },
                    "mime_type": {
                        "type": "string",
                        "description": "The MIME type of the image"
                    },
                    "size": {
                        "type": "integer",
                        "description": "The file size in bytes"
                    },
                    "alt_text": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Alternative text for accessibility"
                    },
                    "display_order": {
                        "type": "integer",
                        "description": "Display order for sorting images"
                    },
                    "collection": {
                        "description": "The collection this image belongs to (CollectionResource)",
                        "$ref": "#/components/schemas/CollectionResource"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    }
                },
                "required": [
                    "id",
                    "collection_id",
                    "path",
                    "original_name",
                    "mime_type",
                    "size",
                    "alt_text",
                    "display_order",
                    "created_at",
                    "updated_at"
                ],
                "title": "CollectionImageResource"
            },
            "CollectionResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "internal_name": {
                        "type": "string",
                        "description": "A name for this resource, for internal use only."
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of collection: 'collection', 'exhibition', or 'gallery'"
                    },
                    "language_id": {
                        "type": "string",
                        "description": "The language this collection belongs to (LanguageResource id)"
                    },
                    "context_id": {
                        "type": "string",
                        "description": "The context this collection belongs to (ContextResource id)"
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The Id(s) of matching resource in the legacy system (if any)."
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    },
                    "language": {
                        "description": "The language relationship (LanguageResource)",
                        "$ref": "#/components/schemas/LanguageResource"
                    },
                    "context": {
                        "description": "The context relationship (ContextResource)",
                        "$ref": "#/components/schemas/ContextResource"
                    },
                    "translations": {
                        "type": "array",
                        "description": "Translations for this collection (CollectionTranslationResource[])",
                        "items": {
                            "$ref": "#/components/schemas/CollectionTranslationResource"
                        }
                    },
                    "partners": {
                        "type": "array",
                        "description": "Partners associated with this collection (PartnerResource[])",
                        "items": {
                            "$ref": "#/components/schemas/PartnerResource"
                        }
                    },
                    "items": {
                        "type": "array",
                        "description": "Items associated with this collection - primary relationship (ItemResource[])",
                        "items": {
                            "$ref": "#/components/schemas/ItemResource"
                        }
                    },
                    "attachedItems": {
                        "type": "array",
                        "description": "Items attached to this collection via many-to-many relationship (ItemResource[])",
                        "items": {
                            "$ref": "#/components/schemas/ItemResource"
                        }
                    },
                    "items_count": {
                        "type": "string",
                        "description": "The number of items in this collection (computed)"
                    },
                    "attached_items_count": {
                        "type": "string"
                    },
                    "partners_count": {
                        "type": "string"
                    },
                    "translations_count": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "internal_name",
                    "type",
                    "language_id",
                    "context_id",
                    "backward_compatibility",
                    "created_at",
                    "updated_at"
                ],
                "title": "CollectionResource"
            },
            "CollectionTranslationResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "collection_id": {
                        "type": "string",
                        "description": "The collection this translation belongs to (CollectionResource id)"
                    },
                    "language_id": {
                        "type": "string",
                        "description": "The language of this translation (LanguageResource id)"
                    },
                    "context_id": {
                        "type": "string",
                        "description": "The context of this translation (ContextResource id)"
                    },
                    "title": {
                        "type": "string",
                        "description": "The title of the collection translation"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the collection translation"
                    },
                    "url": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The URL for the collection translation"
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The Id(s) of matching resource in the legacy system (if any)."
                    },
                    "extra": {
                        "type": [
                            "object",
                            "null"
                        ],
                        "description": "Extra data for translation (object, may be null)"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    },
                    "collection": {
                        "description": "The collection relationship (CollectionResource)",
                        "$ref": "#/components/schemas/CollectionResource"
                    },
                    "language": {
                        "description": "The language relationship (LanguageResource)",
                        "$ref": "#/components/schemas/LanguageResource"
                    },
                    "context": {
                        "description": "The context relationship (ContextResource)",
                        "$ref": "#/components/schemas/ContextResource"
                    }
                },
                "required": [
                    "id",
                    "collection_id",
                    "language_id",
                    "context_id",
                    "title",
                    "description",
                    "url",
                    "backward_compatibility",
                    "extra",
                    "created_at",
                    "updated_at"
                ],
                "title": "CollectionTranslationResource"
            },
            "ContactResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "internal_name": {
                        "type": "string",
                        "description": "A name for this resource, for internal use only."
                    },
                    "phone_number": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The phone number of the contact"
                    },
                    "formatted_phone_number": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The formatted phone number of the contact"
                    },
                    "fax_number": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The fax number of the contact"
                    },
                    "formatted_fax_number": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The formatted fax number of the contact"
                    },
                    "email": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The email address of the contact"
                    },
                    "translations": {
                        "type": "array",
                        "description": "Translations for this contact (ContactTranslationResource[])",
                        "items": {
                            "$ref": "#/components/schemas/ContactTranslationResource"
                        }
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    }
                },
                "required": [
                    "id",
                    "internal_name",
                    "phone_number",
                    "formatted_phone_number",
                    "fax_number",
                    "formatted_fax_number",
                    "email",
                    "created_at",
                    "updated_at"
                ],
                "title": "ContactResource"
            },
            "ContactTranslationResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "contact_id": {
                        "type": "string",
                        "description": "The contact this translation belongs to (ContactResource id)"
                    },
                    "language_id": {
                        "type": "string",
                        "description": "The language of this translation (LanguageResource id)"
                    },
                    "label": {
                        "type": "string",
                        "description": "The label for the contact translation"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    }
                },
                "required": [
                    "id",
                    "contact_id",
                    "language_id",
                    "label",
                    "created_at",
                    "updated_at"
                ],
                "title": "ContactTranslationResource"
            },
            "ContextResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "internal_name": {
                        "type": "string",
                        "description": "A name for this resource, for internal use only."
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The Id(s) of matching resource in the legacy system (if any)."
                    },
                    "is_default": {
                        "type": "boolean",
                        "description": "Indicates if this context is the default one. There is one single default context for the entire database."
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    }
                },
                "required": [
                    "id",
                    "internal_name",
                    "backward_compatibility",
                    "is_default",
                    "created_at",
                    "updated_at"
                ],
                "title": "ContextResource"
            },
            "ConversionResource": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "data": {
                        "type": "string"
                    },
                    "error": {
                        "type": "string"
                    },
                    "errors": {
                        "type": "string"
                    }
                },
                "required": [
                    "success",
                    "message",
                    "data",
                    "error",
                    "errors"
                ],
                "title": "ConversionResource"
            },
            "CountryResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (ISO 3166-1 alpha-3 code)"
                    },
                    "internal_name": {
                        "type": "string",
                        "description": "A name for this resource, for internal use only."
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The Id(s) of matching resource in the legacy system (if any)."
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    }
                },
                "required": [
                    "id",
                    "internal_name",
                    "backward_compatibility",
                    "created_at",
                    "updated_at"
                ],
                "title": "CountryResource"
            },
            "GlossaryResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "internal_name": {
                        "type": "string",
                        "description": "A name for this resource, for internal use only."
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The Id(s) of matching resource in the legacy system (if any)."
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    },
                    "translations": {
                        "type": "array",
                        "description": "Relationships (only included if loaded)",
                        "items": {
                            "$ref": "#/components/schemas/GlossaryTranslationResource"
                        }
                    },
                    "spellings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GlossarySpellingResource"
                        }
                    },
                    "synonyms": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GlossaryResource"
                        }
                    }
                },
                "required": [
                    "id",
                    "internal_name",
                    "backward_compatibility",
                    "created_at",
                    "updated_at"
                ],
                "title": "GlossaryResource"
            },
            "GlossarySpellingResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "glossary_id": {
                        "type": "string",
                        "description": "The glossary this spelling belongs to"
                    },
                    "language_id": {
                        "type": "string",
                        "description": "The language of this spelling"
                    },
                    "spelling": {
                        "type": "string",
                        "description": "The spelling variation"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    },
                    "glossary": {
                        "description": "Relationships (only included if loaded)",
                        "$ref": "#/components/schemas/GlossaryResource"
                    },
                    "language": {
                        "$ref": "#/components/schemas/LanguageResource"
                    },
                    "item_translations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ItemTranslationResource"
                        }
                    }
                },
                "required": [
                    "id",
                    "glossary_id",
                    "language_id",
                    "spelling",
                    "created_at",
                    "updated_at"
                ],
                "title": "GlossarySpellingResource"
            },
            "GlossaryTranslationResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "glossary_id": {
                        "type": "string",
                        "description": "The glossary this translation belongs to"
                    },
                    "language_id": {
                        "type": "string",
                        "description": "The language of this translation"
                    },
                    "definition": {
                        "type": "string",
                        "description": "The definition/translation text"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    },
                    "glossary": {
                        "description": "Relationships (only included if loaded)",
                        "$ref": "#/components/schemas/GlossaryResource"
                    },
                    "language": {
                        "$ref": "#/components/schemas/LanguageResource"
                    }
                },
                "required": [
                    "id",
                    "glossary_id",
                    "language_id",
                    "definition",
                    "created_at",
                    "updated_at"
                ],
                "title": "GlossaryTranslationResource"
            },
            "ImageUploadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "path": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The path to the picture file"
                    },
                    "name": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The original name of the uploaded file"
                    },
                    "extension": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The file extension of the uploaded file"
                    },
                    "mime_type": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The MIME type of the uploaded file"
                    },
                    "size": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "description": "The size of the uploaded file in bytes"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    }
                },
                "required": [
                    "id",
                    "path",
                    "name",
                    "extension",
                    "mime_type",
                    "size",
                    "created_at",
                    "updated_at"
                ],
                "title": "ImageUploadResource"
            },
            "ImageUploadStatusResource": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "available_image": {
                        "type": "string"
                    }
                },
                "required": [
                    "status",
                    "available_image"
                ],
                "title": "ImageUploadStatusResource"
            },
            "ItemImageResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "item_id": {
                        "type": "string",
                        "description": "The item this image belongs to"
                    },
                    "path": {
                        "type": "string",
                        "description": "The path to the image file"
                    },
                    "original_name": {
                        "type": "string",
                        "description": "The original filename when uploaded"
                    },
                    "mime_type": {
                        "type": "string",
                        "description": "The MIME type of the image"
                    },
                    "size": {
                        "type": "integer",
                        "description": "The file size in bytes"
                    },
                    "alt_text": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Alternative text for accessibility"
                    },
                    "display_order": {
                        "type": "integer",
                        "description": "Display order for sorting images"
                    },
                    "item": {
                        "description": "The item this image belongs to (ItemResource)",
                        "$ref": "#/components/schemas/ItemResource"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    }
                },
                "required": [
                    "id",
                    "item_id",
                    "path",
                    "original_name",
                    "mime_type",
                    "size",
                    "alt_text",
                    "display_order",
                    "created_at",
                    "updated_at"
                ],
                "title": "ItemImageResource"
            },
            "ItemResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "internal_name": {
                        "type": "string",
                        "description": "A name for this resource, for internal use only."
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The Id(s) of matching resource in the legacy system (if any)."
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the item: 'object', 'monument', 'detail', or 'picture'."
                    },
                    "parent_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The parent item ID (for hierarchical relationships), nullable"
                    },
                    "owner_reference": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Owner's reference number for the item (external reference from owner)"
                    },
                    "mwnf_reference": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "MWNF reference number for the item (reference from MWNF system)"
                    },
                    "parent": {
                        "description": "The parent item (for hierarchical relationships), nullable (ItemResource)",
                        "$ref": "#/components/schemas/ItemResource"
                    },
                    "children": {
                        "type": "array",
                        "description": "The child items (for hierarchical relationships) (ItemResource[])",
                        "items": {
                            "$ref": "#/components/schemas/ItemResource"
                        }
                    },
                    "partner": {
                        "description": "The partner owning the item (PartnerResource)",
                        "$ref": "#/components/schemas/PartnerResource"
                    },
                    "project": {
                        "description": "The project this item belongs to, nullable (ProjectResource)",
                        "$ref": "#/components/schemas/ProjectResource"
                    },
                    "country": {
                        "description": "The country this item is associated with, nullable (CountryResource)",
                        "$ref": "#/components/schemas/CountryResource"
                    },
                    "collection": {
                        "description": "The collection that contains this item (CollectionResource)",
                        "$ref": "#/components/schemas/CollectionResource"
                    },
                    "artists": {
                        "type": "array",
                        "description": "Artists associated with this item (ArtistResource[])",
                        "items": {
                            "$ref": "#/components/schemas/ArtistResource"
                        }
                    },
                    "workshops": {
                        "type": "array",
                        "description": "Workshops associated with this item (WorkshopResource[])",
                        "items": {
                            "$ref": "#/components/schemas/WorkshopResource"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "description": "Tags associated with this item (TagResource[])",
                        "items": {
                            "$ref": "#/components/schemas/TagResource"
                        }
                    },
                    "translations": {
                        "type": "array",
                        "description": "Translations for this item (internationalization and contextualization) (ItemTranslationResource[])",
                        "items": {
                            "$ref": "#/components/schemas/ItemTranslationResource"
                        }
                    },
                    "itemImages": {
                        "type": "array",
                        "description": "Item images attached to this item with display ordering (ItemImageResource[])",
                        "items": {
                            "$ref": "#/components/schemas/ItemImageResource"
                        }
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    }
                },
                "required": [
                    "id",
                    "internal_name",
                    "backward_compatibility",
                    "type",
                    "parent_id",
                    "owner_reference",
                    "mwnf_reference",
                    "created_at",
                    "updated_at"
                ],
                "title": "ItemResource"
            },
            "ItemTranslationResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "item_id": {
                        "type": "string",
                        "description": "The item this translation belongs to (ItemResource id)"
                    },
                    "language_id": {
                        "type": "string",
                        "description": "The language of this translation (LanguageResource id)"
                    },
                    "context_id": {
                        "type": "string",
                        "description": "The context of this translation (ContextResource id)"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the item translation"
                    },
                    "alternate_name": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The alternate name of the item translation"
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The description of the item translation"
                    },
                    "type": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The type of the item translation"
                    },
                    "holder": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The holder of the item"
                    },
                    "owner": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The owner of the item"
                    },
                    "initial_owner": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The initial owner of the item"
                    },
                    "dates": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The dates associated with the item"
                    },
                    "location": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The location associated with the item"
                    },
                    "dimensions": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The dimensions of the item"
                    },
                    "place_of_production": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The place of production of the item"
                    },
                    "method_for_datation": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The method for datation of the item"
                    },
                    "method_for_provenance": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The method for provenance of the item"
                    },
                    "obtention": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The obtention of the item"
                    },
                    "bibliography": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The bibliography for the item"
                    },
                    "author_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The author of the item (AuthorResource id)"
                    },
                    "text_copy_editor_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The copy-editor of the item (AuthorResource id)"
                    },
                    "translator_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The translator of the item translation (AuthorResource id)"
                    },
                    "translation_copy_editor_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The copy-editor of the item translation (AuthorResource id)"
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The Id(s) of matching resource in the legacy system (if any)."
                    },
                    "extra": {
                        "type": [
                            "object",
                            "null"
                        ],
                        "description": "Extra data for translation (object, may be null)"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    },
                    "item": {
                        "description": "The item relationship (ItemResource)",
                        "$ref": "#/components/schemas/ItemResource"
                    },
                    "language": {
                        "description": "The language relationship (LanguageResource)",
                        "$ref": "#/components/schemas/LanguageResource"
                    },
                    "context": {
                        "description": "The context relationship (ContextResource)",
                        "$ref": "#/components/schemas/ContextResource"
                    },
                    "author": {
                        "description": "The author relationship (AuthorResource)",
                        "$ref": "#/components/schemas/AuthorResource"
                    },
                    "text_copy_editor": {
                        "description": "The copy-editor relationship (AuthorResource)",
                        "$ref": "#/components/schemas/AuthorResource"
                    },
                    "translator": {
                        "description": "The translator relationship (AuthorResource)",
                        "$ref": "#/components/schemas/AuthorResource"
                    },
                    "translation_copy_editor": {
                        "description": "The translation copy-editor relationship (AuthorResource)",
                        "$ref": "#/components/schemas/AuthorResource"
                    }
                },
                "required": [
                    "id",
                    "item_id",
                    "language_id",
                    "context_id",
                    "name",
                    "alternate_name",
                    "description",
                    "type",
                    "holder",
                    "owner",
                    "initial_owner",
                    "dates",
                    "location",
                    "dimensions",
                    "place_of_production",
                    "method_for_datation",
                    "method_for_provenance",
                    "obtention",
                    "bibliography",
                    "author_id",
                    "text_copy_editor_id",
                    "translator_id",
                    "translation_copy_editor_id",
                    "backward_compatibility",
                    "extra",
                    "created_at",
                    "updated_at"
                ],
                "title": "ItemTranslationResource"
            },
            "LanguageResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (ISO 639-1 code)"
                    },
                    "internal_name": {
                        "type": "string",
                        "description": "A name for this resource, for internal use only."
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The Id(s) of matching resource in the legacy system (if any)."
                    },
                    "is_default": {
                        "type": "boolean",
                        "description": "Indicates if this language is the default one. There is one single default language for the entire database."
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    }
                },
                "required": [
                    "id",
                    "internal_name",
                    "backward_compatibility",
                    "is_default",
                    "created_at",
                    "updated_at"
                ],
                "title": "LanguageResource"
            },
            "LocationResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "internal_name": {
                        "type": "string",
                        "description": "A name for this resource, for internal use only."
                    },
                    "country_id": {
                        "type": "string",
                        "description": "The country this location belongs to (CountryResource id)"
                    },
                    "translations": {
                        "type": "array",
                        "description": "Translations for this location (LocationTranslationResource[])",
                        "items": {
                            "$ref": "#/components/schemas/LocationTranslationResource"
                        }
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    }
                },
                "required": [
                    "id",
                    "internal_name",
                    "country_id",
                    "created_at",
                    "updated_at"
                ],
                "title": "LocationResource"
            },
            "LocationTranslationResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "location_id": {
                        "type": "string",
                        "description": "The location this translation belongs to (LocationResource id)"
                    },
                    "language_id": {
                        "type": "string",
                        "description": "The language of this translation (LanguageResource id)"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the location translation"
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The description of the location translation"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    }
                },
                "required": [
                    "id",
                    "location_id",
                    "language_id",
                    "name",
                    "description",
                    "created_at",
                    "updated_at"
                ],
                "title": "LocationTranslationResource"
            },
            "MessageResource": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                },
                "required": [
                    "message"
                ],
                "title": "MessageResource"
            },
            "OperationSuccessResource": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "required": [
                    "success",
                    "message"
                ],
                "title": "OperationSuccessResource"
            },
            "PartnerImageResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "partner_id": {
                        "type": "string",
                        "description": "Foreign key"
                    },
                    "path": {
                        "type": "string",
                        "description": "Image information"
                    },
                    "original_name": {
                        "type": "string"
                    },
                    "mime_type": {
                        "type": "string"
                    },
                    "size": {
                        "type": "string"
                    },
                    "alt_text": {
                        "type": "string"
                    },
                    "display_order": {
                        "type": "string"
                    },
                    "partner": {
                        "description": "Relationships",
                        "$ref": "#/components/schemas/PartnerResource"
                    },
                    "created_at": {
                        "type": "string",
                        "description": "Timestamps"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "partner_id",
                    "path",
                    "original_name",
                    "mime_type",
                    "size",
                    "alt_text",
                    "display_order",
                    "created_at",
                    "updated_at"
                ],
                "title": "PartnerImageResource"
            },
            "PartnerResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "internal_name": {
                        "type": "string",
                        "description": "A name for this resource, for internal use only."
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The Id(s) of matching resource in the legacy system (if any)."
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the partner, either 'museum', 'institution' or 'individual'."
                    },
                    "country": {
                        "description": "The country this partner is associated with, nullable (CountryResource)",
                        "$ref": "#/components/schemas/CountryResource"
                    },
                    "latitude": {
                        "type": "string",
                        "description": "GPS Location"
                    },
                    "longitude": {
                        "type": "string"
                    },
                    "map_zoom": {
                        "type": "string"
                    },
                    "project": {
                        "description": "Relationships",
                        "$ref": "#/components/schemas/ProjectResource"
                    },
                    "monument_item": {
                        "$ref": "#/components/schemas/ItemResource"
                    },
                    "translations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PartnerTranslationResource"
                        }
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PartnerImageResource"
                        }
                    },
                    "collections": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CollectionResource"
                        }
                    },
                    "visible": {
                        "type": "string",
                        "description": "Visibility"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    }
                },
                "required": [
                    "id",
                    "internal_name",
                    "backward_compatibility",
                    "type",
                    "latitude",
                    "longitude",
                    "map_zoom",
                    "visible",
                    "created_at",
                    "updated_at"
                ],
                "title": "PartnerResource"
            },
            "PartnerTranslationImageResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "partner_translation_id": {
                        "type": "string",
                        "description": "Foreign key"
                    },
                    "path": {
                        "type": "string",
                        "description": "Image information"
                    },
                    "original_name": {
                        "type": "string"
                    },
                    "mime_type": {
                        "type": "string"
                    },
                    "size": {
                        "type": "string"
                    },
                    "alt_text": {
                        "type": "string"
                    },
                    "display_order": {
                        "type": "string"
                    },
                    "partner_translation": {
                        "description": "Relationships",
                        "$ref": "#/components/schemas/PartnerTranslationResource"
                    },
                    "created_at": {
                        "type": "string",
                        "description": "Timestamps"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "partner_translation_id",
                    "path",
                    "original_name",
                    "mime_type",
                    "size",
                    "alt_text",
                    "display_order",
                    "created_at",
                    "updated_at"
                ],
                "title": "PartnerTranslationImageResource"
            },
            "PartnerTranslationResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "partner_id": {
                        "type": "string",
                        "description": "Foreign keys"
                    },
                    "language_id": {
                        "type": "string"
                    },
                    "context_id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Core partner info"
                    },
                    "description": {
                        "type": "string"
                    },
                    "city_display": {
                        "type": "string",
                        "description": "Address fields (embedded)"
                    },
                    "address_line_1": {
                        "type": "string"
                    },
                    "address_line_2": {
                        "type": "string"
                    },
                    "postal_code": {
                        "type": "string"
                    },
                    "address_notes": {
                        "type": "string"
                    },
                    "contact_name": {
                        "type": "string",
                        "description": "Contact fields (semi-structured)"
                    },
                    "contact_email_general": {
                        "type": "string"
                    },
                    "contact_email_press": {
                        "type": "string"
                    },
                    "contact_phone": {
                        "type": "string"
                    },
                    "contact_website": {
                        "type": "string"
                    },
                    "contact_notes": {
                        "type": "string"
                    },
                    "contact_emails": {
                        "type": "string"
                    },
                    "contact_phones": {
                        "type": "string"
                    },
                    "partner": {
                        "description": "Relationships",
                        "$ref": "#/components/schemas/PartnerResource"
                    },
                    "language": {
                        "$ref": "#/components/schemas/LanguageResource"
                    },
                    "context": {
                        "$ref": "#/components/schemas/ContextResource"
                    },
                    "partner_translation_images": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PartnerTranslationImageResource"
                        }
                    },
                    "backward_compatibility": {
                        "type": "string",
                        "description": "Metadata"
                    },
                    "extra": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "description": "Timestamps"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "partner_id",
                    "language_id",
                    "context_id",
                    "name",
                    "description",
                    "city_display",
                    "address_line_1",
                    "address_line_2",
                    "postal_code",
                    "address_notes",
                    "contact_name",
                    "contact_email_general",
                    "contact_email_press",
                    "contact_phone",
                    "contact_website",
                    "contact_notes",
                    "contact_emails",
                    "contact_phones",
                    "backward_compatibility",
                    "extra",
                    "created_at",
                    "updated_at"
                ],
                "title": "PartnerTranslationResource"
            },
            "ProjectResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "internal_name": {
                        "type": "string",
                        "description": "A name for this resource, for internal use only."
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The Id(s) of matching resource in the legacy system (if any)."
                    },
                    "launch_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "Launch date of the project, nullable"
                    },
                    "is_launched": {
                        "type": "boolean",
                        "description": "Indicates if the project has been launched already"
                    },
                    "is_enabled": {
                        "type": "boolean",
                        "description": "Indicates if the project is enabled (active)"
                    },
                    "context": {
                        "description": "The default context used within the project (ContextResource)",
                        "$ref": "#/components/schemas/ContextResource"
                    },
                    "language": {
                        "description": "The default language used within the project (LanguageResource)",
                        "$ref": "#/components/schemas/LanguageResource"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    }
                },
                "required": [
                    "id",
                    "internal_name",
                    "backward_compatibility",
                    "launch_date",
                    "is_launched",
                    "is_enabled",
                    "created_at",
                    "updated_at"
                ],
                "title": "ProjectResource"
            },
            "ProvinceResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "internal_name": {
                        "type": "string",
                        "description": "A name for this resource, for internal use only."
                    },
                    "country_id": {
                        "type": "string",
                        "description": "The country this province belongs to (CountryResource id)"
                    },
                    "translations": {
                        "type": "array",
                        "description": "Translations for this province (ProvinceTranslationResource[])",
                        "items": {
                            "$ref": "#/components/schemas/ProvinceTranslationResource"
                        }
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    }
                },
                "required": [
                    "id",
                    "internal_name",
                    "country_id",
                    "created_at",
                    "updated_at"
                ],
                "title": "ProvinceResource"
            },
            "ProvinceTranslationResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "province_id": {
                        "type": "string",
                        "description": "The province this translation belongs to (ProvinceResource id)"
                    },
                    "language_id": {
                        "type": "string",
                        "description": "The language of this translation (LanguageResource id)"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the province translation"
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The description of the province translation"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    }
                },
                "required": [
                    "id",
                    "province_id",
                    "language_id",
                    "name",
                    "description",
                    "created_at",
                    "updated_at"
                ],
                "title": "ProvinceTranslationResource"
            },
            "SetDefaultContextRequest": {
                "type": "object",
                "properties": {
                    "is_default": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "is_default"
                ],
                "title": "SetDefaultContextRequest"
            },
            "SetDefaultLanguageRequest": {
                "type": "object",
                "properties": {
                    "is_default": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "is_default"
                ],
                "title": "SetDefaultLanguageRequest"
            },
            "SetEnabledProjectRequest": {
                "type": "object",
                "properties": {
                    "is_enabled": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "is_enabled"
                ],
                "title": "SetEnabledProjectRequest"
            },
            "SetLaunchedProjectRequest": {
                "type": "object",
                "properties": {
                    "is_launched": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "is_launched"
                ],
                "title": "SetLaunchedProjectRequest"
            },
            "StoreAddressRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "internal_name": {
                        "type": "string"
                    },
                    "country_id": {
                        "type": "integer"
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "translations": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "language_id": {
                                    "type": "integer"
                                },
                                "address": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": [
                                        "string",
                                        "null"
                                    ]
                                }
                            },
                            "required": [
                                "language_id",
                                "address"
                            ]
                        },
                        "minItems": 1
                    }
                },
                "required": [
                    "internal_name",
                    "country_id"
                ],
                "title": "StoreAddressRequest"
            },
            "StoreAddressTranslationRequest": {
                "type": "object",
                "properties": {
                    "address_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "language_id": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "address_id",
                    "language_id",
                    "address"
                ],
                "title": "StoreAddressTranslationRequest"
            },
            "StoreCollectionImageRequest": {
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string",
                        "maxLength": 500
                    },
                    "original_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "mime_type": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "size": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "alt_text": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 500
                    },
                    "display_order": {
                        "type": "integer",
                        "minimum": 1
                    }
                },
                "required": [
                    "path",
                    "original_name",
                    "mime_type",
                    "size"
                ],
                "title": "StoreCollectionImageRequest"
            },
            "StoreCollectionRequest": {
                "type": "object",
                "properties": {
                    "internal_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "collection",
                            "exhibition",
                            "gallery"
                        ]
                    },
                    "language_id": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 3
                    },
                    "context_id": {
                        "type": "string"
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    }
                },
                "required": [
                    "internal_name",
                    "type",
                    "language_id",
                    "context_id"
                ],
                "title": "StoreCollectionRequest"
            },
            "StoreCollectionTranslationRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "collection_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "language_id": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 3
                    },
                    "context_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string"
                    },
                    "url": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri",
                        "maxLength": 2048
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "extra": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "collection_id",
                    "language_id",
                    "context_id",
                    "title",
                    "description"
                ],
                "title": "StoreCollectionTranslationRequest"
            },
            "StoreContactRequest": {
                "type": "object",
                "properties": {
                    "internal_name": {
                        "type": "string"
                    },
                    "phone_number": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "fax_number": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "email": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "email"
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "translations": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "language_id": {
                                    "type": "integer"
                                },
                                "label": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "language_id",
                                "label"
                            ]
                        },
                        "minItems": 1
                    }
                },
                "required": [
                    "internal_name",
                    "translations"
                ],
                "title": "StoreContactRequest"
            },
            "StoreContactTranslationRequest": {
                "type": "object",
                "properties": {
                    "contact_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "language_id": {
                        "type": "string"
                    },
                    "label": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "contact_id",
                    "language_id",
                    "label"
                ],
                "title": "StoreContactTranslationRequest"
            },
            "StoreContextRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "internal_name": {
                        "type": "string"
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "is_default": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "internal_name"
                ],
                "title": "StoreContextRequest"
            },
            "StoreCountryRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 3
                    },
                    "internal_name": {
                        "type": "string"
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "minLength": 2,
                        "maxLength": 2
                    }
                },
                "required": [
                    "id",
                    "internal_name"
                ],
                "title": "StoreCountryRequest"
            },
            "StoreGlossaryRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "internal_name": {
                        "type": "string"
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "internal_name"
                ],
                "title": "StoreGlossaryRequest"
            },
            "StoreGlossarySpellingRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "glossary_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "language_id": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 3
                    },
                    "spelling": {
                        "type": "string"
                    }
                },
                "required": [
                    "glossary_id",
                    "language_id",
                    "spelling"
                ],
                "title": "StoreGlossarySpellingRequest"
            },
            "StoreGlossaryTranslationRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "glossary_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "language_id": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 3
                    },
                    "definition": {
                        "type": "string"
                    }
                },
                "required": [
                    "glossary_id",
                    "language_id",
                    "definition"
                ],
                "title": "StoreGlossaryTranslationRequest"
            },
            "StoreImageUploadRequest": {
                "type": "object",
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "contentMediaType": "application/octet-stream",
                        "maxLength": 20480
                    }
                },
                "required": [
                    "file"
                ],
                "title": "StoreImageUploadRequest"
            },
            "StoreItemImageRequest": {
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string",
                        "maxLength": 500
                    },
                    "original_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "mime_type": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "size": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "alt_text": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 500
                    },
                    "display_order": {
                        "type": "integer",
                        "minimum": 1
                    }
                },
                "required": [
                    "path",
                    "original_name",
                    "mime_type",
                    "size"
                ],
                "title": "StoreItemImageRequest"
            },
            "StoreItemRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "internal_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "object",
                            "monument",
                            "detail",
                            "picture"
                        ]
                    },
                    "parent_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "country_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "minLength": 3,
                        "maxLength": 3
                    },
                    "partner_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "project_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "collection_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "owner_reference": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "mwnf_reference": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    }
                },
                "required": [
                    "internal_name",
                    "type"
                ],
                "title": "StoreItemRequest"
            },
            "StoreItemTranslationRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "item_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "language_id": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 3
                    },
                    "context_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "alternate_name": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string"
                    },
                    "type": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "holder": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "owner": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "initial_owner": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "dates": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "location": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "dimensions": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "place_of_production": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "method_for_datation": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "method_for_provenance": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "obtention": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "bibliography": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "author_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "text_copy_editor_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "translator_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "translation_copy_editor_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "extra": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "item_id",
                    "language_id",
                    "context_id",
                    "name",
                    "description"
                ],
                "title": "StoreItemTranslationRequest"
            },
            "StoreLanguageRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 3
                    },
                    "internal_name": {
                        "type": "string"
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "minLength": 2,
                        "maxLength": 2
                    },
                    "is_default": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "id",
                    "internal_name"
                ],
                "title": "StoreLanguageRequest"
            },
            "StoreLocationRequest": {
                "type": "object",
                "properties": {
                    "internal_name": {
                        "type": "string"
                    },
                    "country_id": {
                        "type": "integer"
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "translations": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "language_id": {
                                    "type": "integer"
                                },
                                "name": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "language_id",
                                "name"
                            ]
                        },
                        "minItems": 1
                    }
                },
                "required": [
                    "internal_name",
                    "country_id",
                    "translations"
                ],
                "title": "StoreLocationRequest"
            },
            "StoreLocationTranslationRequest": {
                "type": "object",
                "properties": {
                    "location_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "language_id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "location_id",
                    "language_id",
                    "name"
                ],
                "title": "StoreLocationTranslationRequest"
            },
            "StorePartnerImageRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "partner_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "path": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "original_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "mime_type": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "size": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "alt_text": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "display_order": {
                        "type": "integer",
                        "minimum": 1
                    }
                },
                "required": [
                    "partner_id",
                    "path",
                    "original_name",
                    "mime_type",
                    "size",
                    "display_order"
                ],
                "title": "StorePartnerImageRequest"
            },
            "StorePartnerRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "internal_name": {
                        "type": "string"
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "museum",
                            "institution",
                            "individual"
                        ]
                    },
                    "country_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "minLength": 3,
                        "maxLength": 3
                    },
                    "latitude": {
                        "type": [
                            "number",
                            "null"
                        ],
                        "description": "GPS Location",
                        "minimum": -90,
                        "maximum": 90
                    },
                    "longitude": {
                        "type": [
                            "number",
                            "null"
                        ],
                        "minimum": -180,
                        "maximum": 180
                    },
                    "map_zoom": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "minimum": 1,
                        "maximum": 20
                    },
                    "project_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid",
                        "description": "Relationships"
                    },
                    "monument_item_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "visible": {
                        "type": "boolean",
                        "description": "Visibility"
                    }
                },
                "required": [
                    "internal_name",
                    "type"
                ],
                "title": "StorePartnerRequest"
            },
            "StorePartnerTranslationImageRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "partner_translation_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "path": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "original_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "mime_type": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "size": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "alt_text": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "display_order": {
                        "type": "integer",
                        "minimum": 1
                    }
                },
                "required": [
                    "partner_translation_id",
                    "path",
                    "original_name",
                    "mime_type",
                    "size",
                    "display_order"
                ],
                "title": "StorePartnerTranslationImageRequest"
            },
            "StorePartnerTranslationRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "partner_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "language_id": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 3
                    },
                    "context_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "city_display": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Address fields",
                        "maxLength": 255
                    },
                    "address_line_1": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "address_line_2": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "postal_code": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 20
                    },
                    "address_notes": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "contact_name": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Contact fields",
                        "maxLength": 255
                    },
                    "contact_email_general": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "email",
                        "maxLength": 255
                    },
                    "contact_email_press": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "email",
                        "maxLength": 255
                    },
                    "contact_phone": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 50
                    },
                    "contact_website": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri",
                        "maxLength": 255
                    },
                    "contact_notes": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Metadata",
                        "maxLength": 255
                    },
                    "extra": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "contact_emails": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "string",
                            "format": "email",
                            "maxLength": 255
                        }
                    },
                    "contact_phones": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "string",
                            "maxLength": 50
                        }
                    }
                },
                "required": [
                    "partner_id",
                    "language_id",
                    "context_id",
                    "name"
                ],
                "title": "StorePartnerTranslationRequest"
            },
            "StoreProjectRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "internal_name": {
                        "type": "string"
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "launch_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "is_launched": {
                        "type": "boolean"
                    },
                    "is_enabled": {
                        "type": "boolean"
                    },
                    "context_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "language_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "minLength": 3,
                        "maxLength": 3
                    }
                },
                "required": [
                    "internal_name"
                ],
                "title": "StoreProjectRequest"
            },
            "StoreProvinceRequest": {
                "type": "object",
                "properties": {
                    "internal_name": {
                        "type": "string"
                    },
                    "country_id": {
                        "type": "integer"
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "translations": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "language_id": {
                                    "type": "integer"
                                },
                                "name": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "language_id",
                                "name"
                            ]
                        },
                        "minItems": 1
                    }
                },
                "required": [
                    "internal_name",
                    "country_id",
                    "translations"
                ],
                "title": "StoreProvinceRequest"
            },
            "StoreProvinceTranslationRequest": {
                "type": "object",
                "properties": {
                    "province_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "language_id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "province_id",
                    "language_id",
                    "name"
                ],
                "title": "StoreProvinceTranslationRequest"
            },
            "StoreTagRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "internal_name": {
                        "type": "string"
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "required": [
                    "internal_name",
                    "description"
                ],
                "title": "StoreTagRequest"
            },
            "StoreThemeRequest": {
                "type": "object",
                "properties": {
                    "exhibition_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "parent_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "internal_name": {
                        "type": "string"
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "exhibition_id",
                    "internal_name"
                ],
                "title": "StoreThemeRequest"
            },
            "StoreThemeTranslationRequest": {
                "type": "object",
                "properties": {
                    "theme_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "language_id": {
                        "type": "string"
                    },
                    "context_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string"
                    },
                    "introduction": {
                        "type": "string"
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "extra": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "theme_id",
                    "language_id",
                    "context_id",
                    "title",
                    "description",
                    "introduction"
                ],
                "title": "StoreThemeTranslationRequest"
            },
            "TagResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier of the tag (GUID)"
                    },
                    "internal_name": {
                        "type": "string",
                        "description": "The name of the tag, it shall only be used internally"
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The legacy Id when this tag corresponds to a legacy tag from the previous database, nullable"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the tag"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "Date of creation"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "Date of last modification"
                    }
                },
                "required": [
                    "id",
                    "internal_name",
                    "backward_compatibility",
                    "description",
                    "created_at",
                    "updated_at"
                ],
                "title": "TagResource"
            },
            "ThemeResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "exhibition_id": {
                        "type": "string",
                        "description": "The exhibition this theme belongs to (ExhibitionResource id)"
                    },
                    "parent_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The parent theme of this theme (ThemeResource id)"
                    },
                    "internal_name": {
                        "type": "string",
                        "description": "A name for this resource, for internal use only."
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The Id(s) of matching resource in the legacy system (if any)."
                    },
                    "translations": {
                        "type": "array",
                        "description": "Translations for this theme (ThemeTranslationResource[])",
                        "items": {
                            "$ref": "#/components/schemas/ThemeTranslationResource"
                        }
                    },
                    "subthemes": {
                        "type": "array",
                        "description": "Subthemes of this theme (ThemeResource[])",
                        "items": {
                            "$ref": "#/components/schemas/ThemeResource"
                        }
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    }
                },
                "required": [
                    "id",
                    "exhibition_id",
                    "parent_id",
                    "internal_name",
                    "backward_compatibility",
                    "created_at",
                    "updated_at"
                ],
                "title": "ThemeResource"
            },
            "ThemeTranslationResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "theme_id": {
                        "type": "string",
                        "description": "The theme this translation belongs to (ThemeResource id)"
                    },
                    "language_id": {
                        "type": "string",
                        "description": "The language of this translation (LanguageResource id)"
                    },
                    "context_id": {
                        "type": "string",
                        "description": "The context of this translation (ContextResource id)"
                    },
                    "title": {
                        "type": "string",
                        "description": "The title of the theme translation"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the theme translation"
                    },
                    "introduction": {
                        "type": "string",
                        "description": "The introduction of the theme translation"
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The Id(s) of matching resource in the legacy system (if any)."
                    },
                    "extra": {
                        "type": [
                            "object",
                            "null"
                        ],
                        "description": "Extra data for translation (object, may be null)"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    }
                },
                "required": [
                    "id",
                    "theme_id",
                    "language_id",
                    "context_id",
                    "title",
                    "description",
                    "introduction",
                    "backward_compatibility",
                    "extra",
                    "created_at",
                    "updated_at"
                ],
                "title": "ThemeTranslationResource"
            },
            "TwoFactorStatusMobileAppAuthenticationRequest": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "required": [
                    "email",
                    "password"
                ],
                "title": "TwoFactorStatusMobileAppAuthenticationRequest"
            },
            "TwoFactorStatusResource": {
                "type": "object",
                "properties": {
                    "two_factor_enabled": {
                        "type": "string"
                    },
                    "available_methods": {
                        "type": "string"
                    },
                    "primary_method": {
                        "type": "string"
                    },
                    "requires_two_factor": {
                        "type": "string"
                    }
                },
                "required": [
                    "two_factor_enabled",
                    "available_methods",
                    "primary_method",
                    "requires_two_factor"
                ],
                "title": "TwoFactorStatusResource"
            },
            "UpdateAddressRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "internal_name": {
                        "type": "string"
                    },
                    "country_id": {
                        "type": "integer"
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "translations": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "language_id": {
                                    "type": "integer"
                                },
                                "address": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": [
                                        "string",
                                        "null"
                                    ]
                                }
                            }
                        },
                        "minItems": 1
                    }
                },
                "required": [
                    "internal_name",
                    "country_id"
                ],
                "title": "UpdateAddressRequest"
            },
            "UpdateAddressTranslationRequest": {
                "type": "object",
                "properties": {
                    "address_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "language_id": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "title": "UpdateAddressTranslationRequest"
            },
            "UpdateAvailableImageRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "comment": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "title": "UpdateAvailableImageRequest"
            },
            "UpdateCollectionImageRequest": {
                "type": "object",
                "properties": {
                    "original_name": {
                        "type": "string",
                        "description": "Path and collection_id are immutable - not allowed in updates",
                        "maxLength": 255
                    },
                    "mime_type": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "size": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "alt_text": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 500
                    },
                    "display_order": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "include": {
                        "type": "string"
                    }
                },
                "title": "UpdateCollectionImageRequest"
            },
            "UpdateCollectionRequest": {
                "type": "object",
                "properties": {
                    "internal_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "collection",
                            "exhibition",
                            "gallery"
                        ]
                    },
                    "language_id": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 3
                    },
                    "context_id": {
                        "type": "string"
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    }
                },
                "title": "UpdateCollectionRequest"
            },
            "UpdateCollectionTranslationRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "collection_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "language_id": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 3
                    },
                    "context_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string"
                    },
                    "url": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri",
                        "maxLength": 2048
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "extra": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "title": "UpdateCollectionTranslationRequest"
            },
            "UpdateContactRequest": {
                "type": "object",
                "properties": {
                    "internal_name": {
                        "type": "string"
                    },
                    "phone_number": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "fax_number": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "email": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "email"
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "translations": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "language_id": {
                                    "type": "integer"
                                },
                                "label": {
                                    "type": "string"
                                }
                            }
                        },
                        "minItems": 1
                    }
                },
                "required": [
                    "internal_name"
                ],
                "title": "UpdateContactRequest"
            },
            "UpdateContactTranslationRequest": {
                "type": "object",
                "properties": {
                    "contact_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "language_id": {
                        "type": "string"
                    },
                    "label": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "title": "UpdateContactTranslationRequest"
            },
            "UpdateContextRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "internal_name": {
                        "type": "string"
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "is_default": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "internal_name"
                ],
                "title": "UpdateContextRequest"
            },
            "UpdateCountryRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "internal_name": {
                        "type": "string"
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "minLength": 2,
                        "maxLength": 2
                    }
                },
                "required": [
                    "internal_name"
                ],
                "title": "UpdateCountryRequest"
            },
            "UpdateGlossaryRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "internal_name": {
                        "type": "string"
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "internal_name"
                ],
                "title": "UpdateGlossaryRequest"
            },
            "UpdateGlossarySpellingRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "glossary_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "language_id": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 3
                    },
                    "spelling": {
                        "type": "string"
                    }
                },
                "title": "UpdateGlossarySpellingRequest"
            },
            "UpdateGlossaryTranslationRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "glossary_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "language_id": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 3
                    },
                    "definition": {
                        "type": "string"
                    }
                },
                "title": "UpdateGlossaryTranslationRequest"
            },
            "UpdateItemImageRequest": {
                "type": "object",
                "properties": {
                    "original_name": {
                        "type": "string",
                        "description": "Path and item_id are immutable - not allowed in updates",
                        "maxLength": 255
                    },
                    "mime_type": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "size": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "alt_text": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 500
                    },
                    "display_order": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "include": {
                        "type": "string"
                    }
                },
                "title": "UpdateItemImageRequest"
            },
            "UpdateItemRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "internal_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "object",
                            "monument",
                            "detail",
                            "picture"
                        ]
                    },
                    "parent_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "country_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "minLength": 3,
                        "maxLength": 3
                    },
                    "partner_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "project_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "collection_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "owner_reference": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "mwnf_reference": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    }
                },
                "title": "UpdateItemRequest"
            },
            "UpdateItemTranslationRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "item_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "language_id": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 3
                    },
                    "context_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "alternate_name": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string"
                    },
                    "type": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "holder": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "owner": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "initial_owner": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "dates": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "location": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "dimensions": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "place_of_production": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "method_for_datation": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "method_for_provenance": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "obtention": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "bibliography": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "author_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "text_copy_editor_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "translator_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "translation_copy_editor_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "extra": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "title": "UpdateItemTranslationRequest"
            },
            "UpdateLanguageRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "internal_name": {
                        "type": "string"
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "minLength": 2,
                        "maxLength": 2
                    },
                    "is_default": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "internal_name"
                ],
                "title": "UpdateLanguageRequest"
            },
            "UpdateLocationRequest": {
                "type": "object",
                "properties": {
                    "internal_name": {
                        "type": "string"
                    },
                    "country_id": {
                        "type": "integer"
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "translations": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "language_id": {
                                    "type": "integer"
                                },
                                "name": {
                                    "type": "string"
                                }
                            }
                        },
                        "minItems": 1
                    }
                },
                "required": [
                    "internal_name",
                    "country_id"
                ],
                "title": "UpdateLocationRequest"
            },
            "UpdateLocationTranslationRequest": {
                "type": "object",
                "properties": {
                    "location_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "language_id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "title": "UpdateLocationTranslationRequest"
            },
            "UpdatePartnerImageRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "partner_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "path": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "original_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "mime_type": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "size": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "alt_text": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "display_order": {
                        "type": "integer",
                        "minimum": 1
                    }
                },
                "required": [
                    "partner_id",
                    "path",
                    "original_name",
                    "mime_type",
                    "size",
                    "display_order"
                ],
                "title": "UpdatePartnerImageRequest"
            },
            "UpdatePartnerRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "internal_name": {
                        "type": "string"
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "museum",
                            "institution",
                            "individual"
                        ]
                    },
                    "country_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "minLength": 3,
                        "maxLength": 3
                    },
                    "latitude": {
                        "type": [
                            "number",
                            "null"
                        ],
                        "description": "GPS Location",
                        "minimum": -90,
                        "maximum": 90
                    },
                    "longitude": {
                        "type": [
                            "number",
                            "null"
                        ],
                        "minimum": -180,
                        "maximum": 180
                    },
                    "map_zoom": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "minimum": 1,
                        "maximum": 20
                    },
                    "project_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid",
                        "description": "Relationships"
                    },
                    "monument_item_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "visible": {
                        "type": "boolean",
                        "description": "Visibility"
                    }
                },
                "required": [
                    "internal_name",
                    "type"
                ],
                "title": "UpdatePartnerRequest"
            },
            "UpdatePartnerTranslationImageRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "partner_translation_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "path": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "original_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "mime_type": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "size": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "alt_text": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "display_order": {
                        "type": "integer",
                        "minimum": 1
                    }
                },
                "required": [
                    "partner_translation_id",
                    "path",
                    "original_name",
                    "mime_type",
                    "size",
                    "display_order"
                ],
                "title": "UpdatePartnerTranslationImageRequest"
            },
            "UpdatePartnerTranslationRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "partner_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "language_id": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 3
                    },
                    "context_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "city_display": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Address fields",
                        "maxLength": 255
                    },
                    "address_line_1": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "address_line_2": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "postal_code": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 20
                    },
                    "address_notes": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "contact_name": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Contact fields",
                        "maxLength": 255
                    },
                    "contact_email_general": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "email",
                        "maxLength": 255
                    },
                    "contact_email_press": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "email",
                        "maxLength": 255
                    },
                    "contact_phone": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 50
                    },
                    "contact_website": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri",
                        "maxLength": 255
                    },
                    "contact_notes": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Metadata",
                        "maxLength": 255
                    },
                    "extra": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "contact_emails": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "string",
                            "format": "email",
                            "maxLength": 255
                        }
                    },
                    "contact_phones": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "string",
                            "maxLength": 50
                        }
                    }
                },
                "required": [
                    "partner_id",
                    "language_id",
                    "context_id",
                    "name"
                ],
                "title": "UpdatePartnerTranslationRequest"
            },
            "UpdateProjectRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "internal_name": {
                        "type": "string"
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "launch_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "is_launched": {
                        "type": "boolean"
                    },
                    "is_enabled": {
                        "type": "boolean"
                    },
                    "context_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "language_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "minLength": 3,
                        "maxLength": 3
                    }
                },
                "required": [
                    "internal_name"
                ],
                "title": "UpdateProjectRequest"
            },
            "UpdateProvinceRequest": {
                "type": "object",
                "properties": {
                    "internal_name": {
                        "type": "string"
                    },
                    "country_id": {
                        "type": "integer"
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "translations": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "language_id": {
                                    "type": "integer"
                                },
                                "name": {
                                    "type": "string"
                                }
                            }
                        },
                        "minItems": 1
                    }
                },
                "required": [
                    "internal_name",
                    "country_id"
                ],
                "title": "UpdateProvinceRequest"
            },
            "UpdateProvinceTranslationRequest": {
                "type": "object",
                "properties": {
                    "province_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "language_id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "title": "UpdateProvinceTranslationRequest"
            },
            "UpdateTagRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "internal_name": {
                        "type": "string"
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "required": [
                    "internal_name",
                    "description"
                ],
                "title": "UpdateTagRequest"
            },
            "UpdateTagsItemRequest": {
                "type": "object",
                "properties": {
                    "attach": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    "detach": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                },
                "title": "UpdateTagsItemRequest"
            },
            "UpdateThemeRequest": {
                "type": "object",
                "properties": {
                    "internal_name": {
                        "type": "string"
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "title": "UpdateThemeRequest"
            },
            "UpdateThemeTranslationRequest": {
                "type": "object",
                "properties": {
                    "theme_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "language_id": {
                        "type": "string"
                    },
                    "context_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string"
                    },
                    "introduction": {
                        "type": "string"
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "extra": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "title": "UpdateThemeTranslationRequest"
            },
            "UserPermissionsResource": {
                "type": "object",
                "properties": {
                    "permissions": {
                        "type": "string"
                    }
                },
                "required": [
                    "permissions"
                ],
                "title": "UserPermissionsResource"
            },
            "VerifyTwoFactorMobileAppAuthenticationRequest": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "type": "string"
                    },
                    "device_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "code": {
                        "type": "string"
                    },
                    "method": {
                        "type": "string",
                        "enum": [
                            "totp",
                            "email"
                        ]
                    },
                    "wipe_tokens": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "email",
                    "password",
                    "device_name",
                    "code"
                ],
                "title": "VerifyTwoFactorMobileAppAuthenticationRequest"
            },
            "VersionResource": {
                "type": "object",
                "properties": {
                    "repository": {
                        "type": "string"
                    },
                    "build_timestamp": {
                        "type": "string"
                    },
                    "repository_url": {
                        "type": "string"
                    },
                    "api_client_version": {
                        "type": "string"
                    },
                    "app_version": {
                        "type": "string"
                    },
                    "commit_sha": {
                        "type": "string"
                    }
                },
                "required": [
                    "repository",
                    "build_timestamp",
                    "repository_url",
                    "api_client_version",
                    "app_version",
                    "commit_sha"
                ],
                "title": "VersionResource"
            },
            "WithAllTagsItemRequest": {
                "type": "object",
                "properties": {
                    "include": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "minItems": 1
                    }
                },
                "required": [
                    "tags"
                ],
                "title": "WithAllTagsItemRequest"
            },
            "WithAnyTagsItemRequest": {
                "type": "object",
                "properties": {
                    "include": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "minItems": 1
                    }
                },
                "required": [
                    "tags"
                ],
                "title": "WithAnyTagsItemRequest"
            },
            "WorkshopResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier (GUID)"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the workshop"
                    },
                    "internal_name": {
                        "type": "string",
                        "description": "A name for this resource, for internal use only."
                    },
                    "backward_compatibility": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The Id(s) of matching resource in the legacy system (if any)."
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of creation of the resource (managed by the system)"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date of last modification of the resource (managed by the system)"
                    },
                    "items": {
                        "type": "array",
                        "description": "Items associated with this workshop (ItemResource[])",
                        "items": {
                            "$ref": "#/components/schemas/ItemResource"
                        }
                    }
                },
                "required": [
                    "id",
                    "name",
                    "internal_name",
                    "backward_compatibility",
                    "created_at",
                    "updated_at"
                ],
                "title": "WorkshopResource"
            }
        },
        "responses": {
            "AuthenticationException": {
                "description": "Unauthenticated",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            },
            "ValidationException": {
                "description": "Validation error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Errors overview."
                                },
                                "errors": {
                                    "type": "object",
                                    "description": "A detailed description of each field that failed validation.",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "required": [
                                "message",
                                "errors"
                            ]
                        }
                    }
                }
            },
            "AuthorizationException": {
                "description": "Authorization error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            },
            "ModelNotFoundException": {
                "description": "Not found",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            }
        }
    }
}