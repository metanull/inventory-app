{
    "$schema": "https://getcomposer.org/schema.json",
    "name": "laravel/laravel",
    "type": "project",
    "description": "The skeleton application for the Laravel framework.",
    "keywords": [
        "laravel",
        "framework"
    ],
    "license": "MIT",
    "require": {
        "php": "^8.2",
        "dedoc/scramble": "^0.12.2",
        "intervention/image": "^3.11",
        "laravel/framework": "^12.18",
        "laravel/jetstream": "^5.3",
        "laravel/sanctum": "^4.0",
        "laravel/tinker": "^2.9",
        "livewire/livewire": "^3.0",
        "symfony/process": "^7.3"
    },
    "require-dev": {
        "fakerphp/faker": "^1.23",
        "laravel/pail": "^1.1",
        "laravel/pint": "^1.22",
        "laravel/sail": "^1.26",
        "mockery/mockery": "^1.6",
        "nunomaduro/collision": "^8.1",
        "pestphp/pest": "*",
        "pestphp/pest-plugin-laravel": "*"
    },
    "autoload": {
        "psr-4": {
            "App\\": "app/",
            "Database\\Factories\\": "database/factories/",
            "Database\\Seeders\\": "database/seeders/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Tests\\": "tests/"
        }
    },
    "scripts": {
        "post-autoload-dump": [
            "Illuminate\\Foundation\\ComposerScripts::postAutoloadDump",
            "@php artisan package:discover --ansi"
        ],
        "post-update-cmd": [
            "@php artisan vendor:publish --tag=laravel-assets --ansi --force"
        ],
        "post-root-package-install": [
            "@php -r \"file_exists('.env') || copy('.env.example', '.env');\""
        ],
        "post-create-project-cmd": [
            "@php artisan key:generate --ansi",
            "@php -r \"file_exists('database/database.sqlite') || touch('database/database.sqlite');\"",
            "@php artisan migrate --graceful --ansi"
        ],
        "dev": [
            "Composer\\Config::disableProcessTimeout",
            "npx concurrently -c \"#93c5fd,#c4b5fd,#fdba74\" \"php artisan serve\" \"php artisan queue:listen --tries=1\" \"npm run dev\" --names='server,queue,vite'"
        ],
        
        "ci-install": [
            "@composer install --ansi --no-interaction --no-progress --prefer-dist",
            "npm ci --no-fund --no-audit",
            "npm run build"
        ],
        "ci-build": [
            "npm run build"
        ],
        "ci-audit": [
            "@composer validate --with-dependencies --strict --ansi",
            "@composer audit --format=summary",
            ".\\vendor\\bin\\pint --test --no-interaction --ansi",
            "npm audit --audit-level moderate"
        ],
        "ci-lint": [
            ".\\vendor\\bin\\pint --repair --no-interaction --ansi",
            "exit 0"
        ],
        "ci-test": [
            "@php artisan test --parallel --ansi"
        ],
        "ci-reset": [
            "@php -r \"file_exists('./database/database.sqlite') || touch('./database/database.sqlite');\"",
            "@php -r \"file_exists('.env') || copy('.env.example', '.env');\"",
            "@php artisan key:generate --ansi",
            "@php artisan optimize:clear --ansi"
        ],
        "ci-seed": [
            "@php artisan migrate:refresh --no-interaction --ansi",
            "@php artisan db:seed --ansi"
        ],
        "ci-assert-no-changes": [
            "cmd /c 'exit 0' && git diff --exit-code --quiet || ('Changes detected, please update the PR!' && cmd /c 'exit 1')"
        ],
        "ci-list-changes": [
            "git diff --name-only --diff-filter=ACMRT HEAD"
        ],
        "ci-print-changes": [
            "git status --porcelain"
        ],
        "ci-before-pull-request": [
            "@composer ci-assert-no-changes",
            "@composer ci-lint",
            "@composer ci-audit",
            "@composer ci-test"
        ]

    },
    "extra": {
        "laravel": {
            "dont-discover": []
        }
    },
    "config": {
        "optimize-autoloader": true,
        "preferred-install": "dist",
        "sort-packages": true,
        "allow-plugins": {
            "pestphp/pest-plugin": true,
            "php-http/discovery": true
        }
    },
    "minimum-stability": "stable",
    "prefer-stable": true
}
