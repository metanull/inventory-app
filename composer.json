{
    "$schema": "https://getcomposer.org/schema.json",
    "name": "laravel/laravel",
    "type": "project",
    "description": "The skeleton application for the Laravel framework.",
    "keywords": [
        "laravel",
        "framework"
    ],
    "license": "MIT",
    "require": {
        "php": "^8.2",
        "blade-ui-kit/blade-heroicons": "^2.6",
    "dedoc/scramble": "^0.12.34",
        "intervention/image": "^3.11",
        "laravel/framework": "^12.18",
        "laravel/jetstream": "^5.3",
        "laravel/sanctum": "^4.0",
        "laravel/tinker": "^2.9",
        "league/commonmark": "^2.7",
        "league/html-to-markdown": "^5.1",
        "livewire/livewire": "^3.0",
        "propaganistas/laravel-phone": "^6.0",
        "symfony/process": "^7.3"
    },
    "require-dev": {
        "fakerphp/faker": "^1.23",
        "laravel/pail": "^1.1",
        "laravel/pint": "^1.22",
        "laravel/sail": "^1.26",
        "mockery/mockery": "^1.6",
        "nunomaduro/collision": "^8.1",
        "pestphp/pest": "^3.8",
        "pestphp/pest-plugin-laravel": "^3.2"
    },
    "autoload": {
        "psr-4": {
            "App\\": "app/",
            "Database\\Factories\\": "database/factories/",
            "Database\\Seeders\\": "database/seeders/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Tests\\": "tests/"
        }
    },
    "scripts": {
        "post-autoload-dump": [
            "Illuminate\\Foundation\\ComposerScripts::postAutoloadDump",
            "@php artisan package:discover --ansi"
        ],
        "post-update-cmd": [
            "@php artisan vendor:publish --tag=laravel-assets --ansi --force"
        ],
        "post-root-package-install": [
            "@php -r \"file_exists('.env') || copy('.env.example', '.env');\""
        ],
        "post-create-project-cmd": [
            "@php artisan key:generate --ansi",
            "@php -r \"file_exists('database/database.sqlite') || touch('database/database.sqlite');\"",
            "@php artisan migrate --graceful --ansi"
        ],
        "dev": [
            "Composer\\Config::disableProcessTimeout",
            "npx concurrently -c \"#93c5fd,#c4b5fd,#fdba74\" \"php artisan serve\" \"php artisan queue:listen --tries=1\" \"npm run dev\" --names='server,queue,vite'"
        ],
        "ci-install": [
            "@composer install --ansi --no-interaction --no-progress --prefer-dist",
            "npm ci --no-fund --no-audit"
        ],
        "ci-build": [
            "npm run build"
        ],
        "ci-audit": [
            "@composer validate --with-dependencies --strict --ansi",
            "@composer audit --format=summary",
            "npm audit --audit-level high"
        ],
        "ci-lint": [
            ".\\vendor\\bin\\pint --no-interaction --ansi",
            "npx prettier --write \"./docs/**/*.md\" --log-level warn --ignore-unknown --no-config",
            "npx prettier --write \"./resources/**\" --log-level warn --ignore-unknown "
        ],
        "ci-lint:test": [
            ".\\vendor\\bin\\pint --no-interaction --ansi --test",
            "npx prettier \"./docs/**/*.md\" --log-level warn --ignore-unknown --no-config --check",
            "npx prettier \"./resources/**\" --log-level warn --ignore-unknown --check"
        ],
        "ci-lint:dirty": [
            ".\\vendor\\bin\\pint --no-interaction --ansi --dirty"
        ],
        "ci-test": [
            "@php artisan test --testsuite=Unit --compact --parallel --ansi",
            "@php artisan test --testsuite=Feature --compact --parallel --ansi",
            "@php artisan test --testsuite=CiCd --compact --parallel --ansi"
        ],
        "ci-test:integration": [
            "@php artisan test --testsuite=Integration --compact --ansi"
        ],
        "ci-test:all": [
            "@php artisan test --compact --parallel --ansi"
        ],
        "ci-reset:db": [
            "@php artisan db:wipe --ansi --force",
            "@php artisan migrate --no-interaction --ansi"
        ],
        "ci-seed": [
            "@php artisan migrate:refresh --no-interaction --ansi",
            "@php artisan db:seed --ansi"
        ],
        "ci-reset:config": [
            "@php artisan optimize:clear --ansi",
            "@php -r \"file_exists('.env') || copy('.env.example', '.env');\"",
            "@php artisan key:generate --ansi"
        ],
        "ci-reset": [
            "@composer ci-reset:db",
            "@composer ci-reset:config",
            "@composer ci-install",
            "@composer ci-build",
            "@composer ci-seed"
        ],
        "ci-git:assert-no-change": [
            "git diff --exit-code --quiet"
        ],
        "ci-git:diff": [
            "git diff --name-only --diff-filter=ACMRT HEAD"
        ],
        "ci-git:status": [
            "git status --porcelain"
        ],
        "ci-openapi-doc": [
            "@php -r \"if (!is_dir('docs/_openapi')) { mkdir('docs/_openapi', 0755, true); }\"",
            "@php artisan scramble:export --path=docs/_openapi/api.json --ansi",
            "pwsh -File scripts/generate-api-client.ps1 -Force"
        ],
        "ci-before:commit": [
            "@composer ci-lint:dirty"
        ],
        "ci-before:push": [
            "@composer ci-openapi-doc",
            "@composer ci-lint"
        ],
        "ci-before:pull-request": [
            "@composer ci-openapi-doc",
            "@composer ci-git:assert-no-change",
            "@composer ci-lint:test",
            "@composer ci-audit",
            "@composer ci-test"
        ],
        "docs-serve": [
            "echo 'Starting Jekyll development server...'",
            "echo 'Note: This requires Ruby and Jekyll to be installed locally'",
            "echo 'Visit: http://localhost:4000/inventory-app'",
            "cd docs && bundle exec jekyll serve --baseurl '/inventory-app' --livereload"
        ],
        "docs-build": [
            "echo 'Building Jekyll site locally...'",
            "echo 'Note: This requires Ruby and Jekyll to be installed locally'",
            "cd docs && bundle exec jekyll build --baseurl '/inventory-app'"
        ],
        "docs-install": [
            "echo 'Installing Jekyll dependencies...'",
            "echo 'Note: This requires Ruby and Bundler to be installed locally'",
            "cd docs && bundle install"
        ]
    },
    "extra": {
        "laravel": {
            "dont-discover": []
        }
    },
    "config": {
        "optimize-autoloader": true,
        "preferred-install": "dist",
        "sort-packages": true,
        "allow-plugins": {
            "pestphp/pest-plugin": true,
            "php-http/discovery": true
        }
    },
    "minimum-stability": "stable",
    "prefer-stable": true
}
